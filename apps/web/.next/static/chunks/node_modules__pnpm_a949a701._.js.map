{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/version.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/version.ts"],"sourcesContent":["// This is a magic string replaced by rollup\ndeclare const __SENTRY_SDK_VERSION__: string;\n\nexport const SDK_VERSION = typeof __SENTRY_SDK_VERSION__ === 'string' ? __SENTRY_SDK_VERSION__ : '0.0.0-unknown.0';\n"],"names":[],"mappings":"AAAA,4CAAA;;;;;AAGO,MAAM,WAAA,GAA2D,QAAA","debugId":null}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/worldwide.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/worldwide.ts"],"sourcesContent":["/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the `debug` singleton, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Carrier } from '../carrier';\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport type InternalGlobal = {\n  navigator?: { userAgent?: string; maxTouchPoints?: number };\n  console: Console;\n  PerformanceObserver?: any;\n  Sentry?: any;\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n  _sentryEsmLoaderHookRegistered?: boolean;\n} & Carrier;\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ = globalThis as unknown as InternalGlobal;\n"],"names":[],"mappings":"AAiBA,kEAAA,GAmCA,+DAAA;;;;AACO,MAAM,UAAA,GAAa,UAAA","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/carrier.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/carrier.ts"],"sourcesContent":["import type { AsyncContextStack } from './asyncContext/stackStrategy';\nimport type { AsyncContextStrategy } from './asyncContext/types';\nimport type { Client } from './client';\nimport type { Scope } from './scope';\nimport type { SerializedLog } from './types-hoist/log';\nimport { SDK_VERSION } from './utils/version';\nimport { GLOBAL_OBJ } from './utils/worldwide';\n\n/**\n * An object that contains globally accessible properties and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: VersionedCarrier;\n}\n\ntype VersionedCarrier = {\n  version?: string;\n} & Record<Exclude<string, 'version'>, SentryCarrier>;\n\nexport interface SentryCarrier {\n  acs?: AsyncContextStrategy;\n  stack?: AsyncContextStack;\n\n  globalScope?: Scope;\n  defaultIsolationScope?: Scope;\n  defaultCurrentScope?: Scope;\n  loggerSettings?: { enabled: boolean };\n  /**\n   * A map of Sentry clients to their log buffers.\n   * This is used to store logs that are sent to Sentry.\n   */\n  clientToLogBufferMap?: WeakMap<Client, Array<SerializedLog>>;\n\n  /** Overwrites TextEncoder used in `@sentry/core`, need for `react-native@0.73` and older */\n  encodePolyfill?: (input: string) => Uint8Array;\n  /** Overwrites TextDecoder used in `@sentry/core`, need for `react-native@0.73` and older */\n  decodePolyfill?: (input: Uint8Array) => string;\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  // This ensures a Sentry carrier exists\n  getSentryCarrier(GLOBAL_OBJ);\n  return GLOBAL_OBJ;\n}\n\n/** Will either get the existing sentry carrier, or create a new one. */\nexport function getSentryCarrier(carrier: Carrier): SentryCarrier {\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n\n  // For now: First SDK that sets the .version property wins\n  __SENTRY__.version = __SENTRY__.version || SDK_VERSION;\n\n  // Intentionally populating and returning the version of \"this\" SDK instance\n  // rather than what's set in .version so that \"this\" SDK always gets its carrier\n  return (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__[]` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<Prop extends keyof SentryCarrier>(\n  name: Prop,\n  creator: () => NonNullable<SentryCarrier[Prop]>,\n  obj = GLOBAL_OBJ,\n): NonNullable<SentryCarrier[Prop]> {\n  const __SENTRY__ = (obj.__SENTRY__ = obj.__SENTRY__ || {});\n  const carrier = (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n  // Note: We do not want to set `carrier.version` here, as this may be called before any `init` is called, e.g. for the default scopes\n  return carrier[name] || (carrier[name] = creator());\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAQA;;;CAGA,GA6BA;;;;;;EAMA,GACO,SAAS,cAAc,GAAY;IAC1C,uCAAA;IACE,gBAAgB,CAAC,qPAAU,CAAC;IAC5B,OAAO,qPAAU;AACnB;AAEA,sEAAA,GACO,SAAS,gBAAgB,CAAC,OAAO,EAA0B;IAChE,MAAM,UAAA,GAAc,OAAO,CAAC,UAAA,GAAa,OAAO,CAAC,UAAA,IAAc,CAAA,CAAE,CAAC;IAEpE,0DAAA;IACE,UAAU,CAAC,OAAA,GAAU,UAAU,CAAC,OAAA,IAAW,oPAAW;IAExD,4EAAA;IACA,gFAAA;IACE,OAAQ,UAAU,CAAC,oPAAW,CAAA,GAAI,UAAU,CAAC,oPAAW,CAAA,IAAK,CAAA,CAAE;AACjE;AAEA;;;;;;;;;;CAUA,GACO,SAAS,kBAAkB,CAChC,IAAI,EACJ,OAAO;cACP,GAAA,8DAAM,qPAAU;IAEhB,MAAM,UAAA,GAAc,GAAG,CAAC,UAAA,GAAa,GAAG,CAAC,UAAA,IAAc,CAAA,CAAE,CAAC;IAC1D,MAAM,OAAA,GAAW,UAAU,CAAC,oPAAW,CAAA,GAAI,UAAU,CAAC,oPAAW,CAAA,IAAK,CAAA,CAAE,CAAC;IAC3E,qIAAA;IACE,OAAO,OAAO,CAAC,IAAI,CAAA,IAAA,CAAM,OAAO,CAAC,IAAI,CAAA,GAAI,OAAO,EAAE,CAAC;AACrD","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/debug-build.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/debug-build.ts"],"sourcesContent":["declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n"],"names":[],"mappings":"AAEA;;;;CAIA;;;;AACO,MAAM,WAAA,GAAc,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/is.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/is.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Primitive } from '../types-hoist/misc';\nimport type { ParameterizedString } from '../types-hoist/parameterize';\nimport type { PolymorphicEvent } from '../types-hoist/polymorphics';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n    case '[object WebAssembly.Exception]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat?.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n\n/**\n * Checks whether the given parameter is a Standard Web API Request instance.\n *\n * Returns false if Request is not available in the current runtime.\n */\nexport function isRequest(request: unknown): request is Request {\n  return typeof Request !== 'undefined' && isInstanceOf(request, Request);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/browser.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/browser.ts"],"sourcesContent":["import { isString } from './is';\nimport { GLOBAL_OBJ } from './worldwide';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n\n  if (!elem?.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset) {\n      if (elem.dataset['sentryComponent']) {\n        return elem.dataset['sentryComponent'];\n      }\n      if (elem.dataset['sentryElement']) {\n        return elem.dataset['sentryElement'];\n      }\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs = keyAttrs?.length\n    ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n    : null;\n\n  if (keyAttrPairs?.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    const className = elem.className;\n    if (className && isString(className)) {\n      const classes = className.split(/\\s+/);\n      for (const c of classes) {\n        out.push(`.${c}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (const k of allowedAttrs) {\n    const attr = elem.getAttribute(k);\n    if (attr) {\n      out.push(`[${k}=\"${attr}\"]`);\n    }\n  }\n\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch {\n    return '';\n  }\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` or `data-sentry-element` attribute with `data-sentry-component` taking\n * precedence. This attribute is added at build-time by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement) {\n      if (currentElem.dataset['sentryComponent']) {\n        return currentElem.dataset['sentryComponent'];\n      }\n      if (currentElem.dataset['sentryElement']) {\n        return currentElem.dataset['sentryElement'];\n      }\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/debug-logger.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/debug-logger.ts"],"sourcesContent":["import { getGlobalSingleton } from '../carrier';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ConsoleLevel } from '../types-hoist/instrument';\nimport { GLOBAL_OBJ } from './worldwide';\n\nexport interface SentryDebugLogger {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n  log(...args: Parameters<typeof console.log>): void;\n  warn(...args: Parameters<typeof console.warn>): void;\n  error(...args: Parameters<typeof console.error>): void;\n}\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: Partial<{\n  log(...args: Parameters<typeof console.log>): void;\n  info(...args: Parameters<typeof console.info>): void;\n  warn(...args: Parameters<typeof console.warn>): void;\n  error(...args: Parameters<typeof console.error>): void;\n  debug(...args: Parameters<typeof console.debug>): void;\n  assert(...args: Parameters<typeof console.assert>): void;\n  trace(...args: Parameters<typeof console.trace>): void;\n}> = {};\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<Record<ConsoleLevel, (...args: unknown[]) => void>> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level];\n    wrappedFuncs[level] = console[level] as (...args: unknown[]) => void;\n    console[level] = originalConsoleMethod as (...args: unknown[]) => void;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as (...args: unknown[]) => void;\n    });\n  }\n}\n\nfunction enable(): void {\n  _getLoggerSettings().enabled = true;\n}\n\nfunction disable(): void {\n  _getLoggerSettings().enabled = false;\n}\n\nfunction isEnabled(): boolean {\n  return _getLoggerSettings().enabled;\n}\n\nfunction log(...args: Parameters<typeof console.log>): void {\n  _maybeLog('log', ...args);\n}\n\nfunction info(...args: Parameters<typeof console.info>): void {\n  _maybeLog('info', ...args);\n}\n\nfunction warn(...args: Parameters<typeof console.warn>): void {\n  _maybeLog('warn', ...args);\n}\n\nfunction error(...args: Parameters<typeof console.error>): void {\n  _maybeLog('error', ...args);\n}\n\nfunction _maybeLog(level: ConsoleLevel, ...args: Parameters<(typeof console)[typeof level]>): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  if (isEnabled()) {\n    consoleSandbox(() => {\n      GLOBAL_OBJ.console[level](`${PREFIX}[${level}]:`, ...args);\n    });\n  }\n}\n\nfunction _getLoggerSettings(): { enabled: boolean } {\n  if (!DEBUG_BUILD) {\n    return { enabled: false };\n  }\n\n  return getGlobalSingleton('loggerSettings', () => ({ enabled: false }));\n}\n\n/**\n * This is a logger singleton which either logs things or no-ops if logging is not enabled.\n */\nexport const debug = {\n  /** Enable logging. */\n  enable,\n  /** Disable logging. */\n  disable,\n  /** Check if logging is enabled. */\n  isEnabled,\n  /** Log a message. */\n  log,\n  /** Log a warning. */\n  warn,\n  /** Log an error. */\n  error,\n} satisfies SentryDebugLogger;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAcO,MAAM,cAAc,GAA4B;IACrD,OAAO;IACP,MAAM;IACN,MAAM;IACN,OAAO;IACP,KAAK;IACL,QAAQ;IACR,OAAO;CACT;AAEA,+BAAA,GACA,MAAM,MAAA,GAAS,gBAAgB;AAE/B,wDAAA,SACa,yBAQR,CAAA;AAEL;;;;;CAKA,GACO,SAAS,cAAc,CAAI,QAAQ,EAAc;IACtD,IAAI,CAAA,CAAE,aAAa,qPAAU,CAAC,EAAE;QAC9B,OAAO,QAAQ,EAAE;IACrB;IAEE,MAAM,OAAA,GAAU,qPAAU,CAAC,OAAA;IAC3B,MAAM,YAAY,GAAgE,CAAA,CAAE;IAEpF,MAAM,gBAAgB,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAA;IAE1D,sCAAA;IACE,aAAa,CAAC,OAAO,EAAC,SAAS;QAC7B,MAAM,qBAAA,GAAwB,sBAAsB,CAAC,KAAK,CAAC;QAC3D,YAAY,CAAC,KAAK,CAAA,GAAI,OAAO,CAAC,KAAK,CAAA;QACnC,OAAO,CAAC,KAAK,CAAA,GAAI,qBAAA;IACrB,CAAG,CAAC;IAEF,IAAI;QACF,OAAO,QAAQ,EAAE;IACrB,SAAY;QACZ,sCAAA;QACI,aAAa,CAAC,OAAO,EAAC,SAAS;YAC7B,OAAO,CAAC,KAAK,CAAA,GAAI,YAAY,CAAC,KAAK,CAAA;QACzC,CAAK,CAAC;IACN;AACA;AAEA,SAAS,MAAM,GAAS;IACtB,kBAAkB,EAAE,CAAC,OAAA,GAAU,IAAI;AACrC;AAEA,SAAS,OAAO,GAAS;IACvB,kBAAkB,EAAE,CAAC,OAAA,GAAU,KAAK;AACtC;AAEA,SAAS,SAAS,GAAY;IAC5B,OAAO,kBAAkB,EAAE,CAAC,OAAO;AACrC;AAEA,SAAS,GAAG;QAAC;QAAG,4BAAI,EAAwC;;IAC1D,SAAS,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;AAMA,SAAS,IAAI;QAAC;QAAG,4BAAI,EAAyC;;IAC5D,SAAS,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;AAC5B;AAEA,SAAS,KAAK;;QAAI,uBAAH,KAAO,EAA0C;;IAC9D,SAAS,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;AAC7B;AAEA,SAAS,SAAS,CAAC,KAAK;QAAgB;QAAG,gCAAI,EAAoD;;IACjG,IAAI,CAAC,kPAAW,EAAE;QAChB;IACJ;IAEE,IAAI,SAAS,EAAE,EAAE;QACf,cAAc,CAAC,MAAM;YACnB,qPAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,AAAC,UAAA,MAAA,EAAA,CAAA,WAAA,KAAA,EAAA,EAAA,CAAA,EAAA,KAAA,IAAA,CAAA;QACA,CAAA,CAAA;IACA;AACA;AAEA,SAAA,kBAAA,GAAA;IACA,IAAA,CAAA,kPAAA,EAAA;QACA,OAAA;YAAA,OAAA,EAAA,KAAA;QAAA,CAAA;IACA;IAEA,WAAA,kPAAA,EAAA,gBAAA,EAAA,IAAA,CAAA;YAAA,OAAA,EAAA,KAAA;QAAA,CAAA,CAAA,CAAA;AACA;AAEA;;CAEA,GACA,MAAA,KAAA,GAAA;IACA,oBAAA,GACA,MAAA;IACA,qBAAA,GACA,OAAA;IACA,iCAAA,GACA,SAAA;IACA,mBAAA,GACA,GAAA;IACA,mBAAA,GACA,IAAA;IACA,kBAAA,GACA,KAAA;AACA,CAAA","debugId":null}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/string.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/string.ts"],"sourcesContent":["import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from '../vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input: unknown[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 716, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/object.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/object.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WrappedFunction } from '../types-hoist/wrappedfunction';\nimport { htmlTreeAsString } from './browser';\nimport { debug } from './debug-logger';\nimport { isElement, isError, isEvent, isInstanceOf, isPrimitive } from './is';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * If the method on the passed object is not a function, the wrapper will not be applied.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  // explicitly casting to unknown because we don't know the type of the method initially at all\n  const original = source[name] as unknown;\n\n  if (typeof original !== 'function') {\n    return;\n  }\n\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  try {\n    source[name] = wrapped;\n  } catch {\n    DEBUG_BUILD && debug.log(`Failed to replace method \"${name}\" in object`, source);\n  }\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch {\n    DEBUG_BUILD && debug.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function getOriginalFunction<T extends Function>(func: WrappedFunction<T>): T | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argument itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(value: V):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  const firstKey = keys[0];\n\n  if (!firstKey) {\n    return '[object has no keys]';\n  }\n\n  if (firstKey.length >= maxLength) {\n    return truncate(firstKey, maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n *\n * @deprecated This function is no longer used by the SDK and will be removed in a future major version.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  // Early return for primitive values\n  if (inputValue === null || typeof inputValue !== 'object') {\n    return inputValue;\n  }\n\n  // Check memo map first for all object types\n  const memoVal = memoizationMap.get(inputValue);\n  if (memoVal !== undefined) {\n    return memoVal as T;\n  }\n\n  // handle arrays\n  if (Array.isArray(inputValue)) {\n    const returnValue: unknown[] = [];\n    // Store mapping to handle circular references\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach(value => {\n      returnValue.push(_dropUndefinedKeys(value, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  if (isPojo(inputValue)) {\n    const returnValue: { [key: string]: unknown } = {};\n    // Store mapping to handle circular references\n    memoizationMap.set(inputValue, returnValue);\n\n    const keys = Object.keys(inputValue);\n\n    keys.forEach(key => {\n      const val = inputValue[key];\n      if (val !== undefined) {\n        returnValue[key] = _dropUndefinedKeys(val, memoizationMap);\n      }\n    });\n\n    return returnValue as T;\n  }\n\n  // For other object types, return as is\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  // Plain objects have Object as constructor or no constructor\n  const constructor = (input as object).constructor;\n  return constructor === Object || constructor === undefined;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    // this will catch both undefined and null\n    case wat == undefined:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 990, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/misc.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/misc.ts"],"sourcesContent":["import type { Event } from '../types-hoist/event';\nimport type { Exception } from '../types-hoist/exception';\nimport type { Mechanism } from '../types-hoist/mechanism';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\nfunction getCrypto(): CryptoInternal | undefined {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  return gbl.crypto || gbl.msCrypto;\n}\n\n/**\n * UUID4 generator\n * @param crypto Object that provides the crypto API.\n * @returns string Generated UUID4.\n */\nexport function uuid4(crypto = getCrypto()): string {\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto?.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto?.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return typedArray[0]!;\n      };\n    }\n  } catch {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception?.values?.[0];\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...currentMechanism?.data, ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\nfunction _parseInt(input: string | undefined): number {\n  return parseInt(input || '', 10);\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = _parseInt(match[1]);\n  const minor = _parseInt(match[2]);\n  const patch = _parseInt(match[3]);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  // We guard here to ensure this is not larger than the existing number of lines\n  const lineIndex = Math.min(maxLines - 1, sourceLine);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  frame.context_line = snipLine(lines[lineIndex]!, frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  if (isAlreadyCaptured(exception)) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\nfunction isAlreadyCaptured(exception: unknown): boolean | void {\n  try {\n    return (exception as { __sentry_captured__?: boolean }).__sentry_captured__;\n  } catch {} // eslint-disable-line no-empty\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1205, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/time.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/time.ts"],"sourcesContent":["import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  // Some browser and environments don't have a performance or timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  if (!performance?.now || !performance.timeOrigin) {\n    return dateTimestampInSeconds;\n  }\n\n  const timeOrigin = performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\nlet _cachedTimestampInSeconds: (() => number) | undefined;\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport function timestampInSeconds(): number {\n  // We store this in a closure so that we don't have to create a new function every time this is called.\n  const func = _cachedTimestampInSeconds ?? (_cachedTimestampInSeconds = createUnixTimestampInSecondsFunc());\n  return func();\n}\n\n/**\n * Cached result of getBrowserTimeOrigin.\n */\nlet cachedTimeOrigin: [number | undefined, string] | undefined;\n\n/**\n * Gets the time origin and the mode used to determine it.\n */\nfunction getBrowserTimeOrigin(): [number | undefined, string] {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance?.now) {\n    return [undefined, 'none'];\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing?.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      return [performance.timeOrigin, 'timeOrigin'];\n    } else {\n      return [navigationStart, 'navigationStart'];\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  return [dateNow, 'dateNow'];\n}\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport function browserPerformanceTimeOrigin(): number | undefined {\n  if (!cachedTimeOrigin) {\n    cachedTimeOrigin = getBrowserTimeOrigin();\n  }\n\n  return cachedTimeOrigin[0];\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA,MAAM,gBAAA,GAAmB,IAAI;AAE7B;;;CAGA,GAYA;;CAEA,GACO,SAAS,sBAAsB,GAAW;IAC/C,OAAO,IAAI,CAAC,GAAG,EAAC,GAAI,gBAAgB;AACtC;AAEA;;;;;CAKA,GACA,SAAS,gCAAgC,GAAiB;IACxD,MAAM,EAAE,WAAA,EAAY,GAAI,qPAAA;IAC1B,0FAAA;IACA,iDAAA;IACE,IAAI,4DAAC,WAAW,CAAE,GAAA,KAAO,CAAC,WAAW,CAAC,UAAU,EAAE;QAChD,OAAO,sBAAsB;IACjC;IAEE,MAAM,UAAA,GAAa,WAAW,CAAC,UAAU;IAE3C,iHAAA;IACA,iHAAA;IACA,EAAA;IACA,mHAAA;IACA,iHAAA;IACA,oBAAA;IACA,kEAAA;IACA,kDAAA;IACA,wEAAA;IACE,OAAO,MAAM;QACX,OAAO,CAAC,UAAA,GAAa,WAAW,CAAC,GAAG,EAAE,IAAI,gBAAgB;IAC9D,CAAG;AACH;AAEA,IAAI,yBAAyB;AAE7B;;;;;;;;CAQA,GACO,SAAS,kBAAkB,GAAW;IAC7C,uGAAA;IACE,MAAM,IAAA,gFAAO,yBAAA,GAA8B,yBAAA,GAA4B,gCAAgC,EAAE,CAAC;IAC1G,OAAO,IAAI,EAAE;AACf;AAEA;;CAEA,GACA,IAAI,gBAAgB;AAEpB;;CAEA,GACA,SAAS,oBAAoB,GAAiC;QA0BpC,WAAW;IAzBrC,6GAAA;IACA,mHAAA;IACA,kFAAA;IAEE,MAAM,EAAE,WAAA,EAAY,GAAI,qPAAA;IACxB,IAAI,4DAAC,WAAW,CAAE,GAAG,GAAE;QACrB,OAAO;YAAC,SAAS;YAAE,MAAM;SAAC;IAC9B;IAEE,MAAM,SAAA,GAAY,IAAA,GAAO,IAAI;IAC7B,MAAM,cAAA,GAAiB,WAAW,CAAC,GAAG,EAAE;IACxC,MAAM,OAAA,GAAU,IAAI,CAAC,GAAG,EAAE;IAE5B,wEAAA;IACE,MAAM,eAAA,GAAkB,WAAW,CAAC,UAAA,GAChC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,UAAA,GAAa,cAAA,GAAiB,OAAO,IAC1D,SAAS;IACb,MAAM,oBAAA,GAAuB,eAAA,GAAkB,SAAS;IAE1D,oHAAA;IACA,mGAAA;IACA,qHAAA;IACA,qHAAA;IACA,YAAA;IACA,mDAAA;IACE,MAAM,eAAA,sCAA8B,MAAM,4EAAE,eAAe;IAC3D,MAAM,kBAAA,GAAqB,OAAO,eAAA,KAAoB,QAAQ;IAChE,6EAAA;IACE,MAAM,oBAAA,GAAuB,kBAAA,GAAqB,IAAI,CAAC,GAAG,CAAC,eAAA,GAAkB,cAAA,GAAiB,OAAO,CAAA,GAAI,SAAS;IAClH,MAAM,yBAAA,GAA4B,oBAAA,GAAuB,SAAS;IAElE,IAAI,oBAAA,IAAwB,yBAAyB,EAAE;QACzD,oCAAA;QACI,IAAI,eAAA,IAAmB,oBAAoB,EAAE;YAC3C,OAAO;gBAAC,WAAW,CAAC,UAAU;gBAAE,YAAY;aAAC;QACnD,OAAW;YACL,OAAO;gBAAC,eAAe;gBAAE,iBAAiB;aAAC;QACjD;IACA;IAEA,mGAAA;IACE,OAAO;QAAC,OAAO;QAAE,SAAS;KAAC;AAC7B;AAEA;;;CAGA,GACO,SAAS,4BAA4B,GAAuB;IACjE,IAAI,CAAC,gBAAgB,EAAE;QACrB,gBAAA,GAAmB,oBAAoB,EAAE;IAC7C;IAEE,OAAO,gBAAgB,CAAC,CAAC,CAAC;AAC5B","debugId":null}},
    {"offset": {"line": 1333, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/session.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/session.ts"],"sourcesContent":["import type { SerializedSession, Session, SessionContext, SessionStatus } from './types-hoist/session';\nimport { uuid4 } from './utils/misc';\nimport { timestampInSeconds } from './utils/time';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see Client.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return {\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1496, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/merge.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/merge.ts"],"sourcesContent":["/**\n * Shallow merge two objects.\n * Does not mutate the passed in objects.\n * Undefined/empty values in the merge object will overwrite existing values.\n *\n * By default, this merges 2 levels deep.\n */\nexport function merge<T>(initialObj: T, mergeObj: T, levels = 2): T {\n  // If the merge value is not an object, or we have no merge levels left,\n  // we just set the value to the merge value\n  if (!mergeObj || typeof mergeObj !== 'object' || levels <= 0) {\n    return mergeObj;\n  }\n\n  // If the merge object is an empty object, and the initial object is not undefined, we return the initial object\n  if (initialObj && Object.keys(mergeObj).length === 0) {\n    return initialObj;\n  }\n\n  // Clone object\n  const output = { ...initialObj };\n\n  // Merge values into output, resursively\n  for (const key in mergeObj) {\n    if (Object.prototype.hasOwnProperty.call(mergeObj, key)) {\n      output[key] = merge(output[key], mergeObj[key], levels - 1);\n    }\n  }\n\n  return output;\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMA;;;;AACO,SAAS,KAAK,CAAI,UAAU,EAAK,QAAQ;iBAAK,MAAA,2DAAS,CAAC,EAAK;IACpE,wEAAA;IACA,2CAAA;IACE,IAAI,CAAC,QAAA,IAAY,OAAO,QAAA,KAAa,QAAA,IAAY,MAAA,IAAU,CAAC,EAAE;QAC5D,OAAO,QAAQ;IACnB;IAEA,gHAAA;IACE,IAAI,UAAA,IAAc,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAA,KAAW,CAAC,EAAE;QACpD,OAAO,UAAU;IACrB;IAEA,eAAA;IACE,MAAM,MAAA,GAAS;QAAE,GAAG,UAAA;IAAA,CAAY;IAElC,wCAAA;IACE,IAAK,MAAM,GAAA,IAAO,QAAQ,CAAE;QAC1B,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE;YACvD,MAAM,CAAC,GAAG,CAAA,GAAI,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,EAAE,MAAA,GAAS,CAAC,CAAC;QACjE;IACA;IAEE,OAAO,MAAM;AACf","debugId":null}},
    {"offset": {"line": 1535, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/propagationContext.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/propagationContext.ts"],"sourcesContent":["import { uuid4 } from './misc';\n\n/**\n * Generate a random, valid trace ID.\n */\nexport function generateTraceId(): string {\n  return uuid4();\n}\n\n/**\n * Generate a random, valid span ID.\n */\nexport function generateSpanId(): string {\n  return uuid4().substring(16);\n}\n"],"names":[],"mappings":";;;;;;;;AAEA;;CAEA,GACO,SAAS,eAAe,GAAW;IACxC,WAAO,2OAAK,EAAE;AAChB;AAEA;;CAEA,GACO,SAAS,cAAc,GAAW;IACvC,WAAO,2OAAK,EAAE,EAAC,SAAS,CAAC,EAAE,CAAC;AAC9B","debugId":null}},
    {"offset": {"line": 1559, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/spanOnScope.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/spanOnScope.ts"],"sourcesContent":["import type { Scope } from '../scope';\nimport type { Span } from '../types-hoist/span';\nimport { addNonEnumerableProperty } from '../utils/object';\n\nconst SCOPE_SPAN_FIELD = '_sentrySpan';\n\ntype ScopeWithMaybeSpan = Scope & {\n  [SCOPE_SPAN_FIELD]?: Span;\n};\n\n/**\n * Set the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nexport function _setSpanForScope(scope: Scope, span: Span | undefined): void {\n  if (span) {\n    addNonEnumerableProperty(scope as ScopeWithMaybeSpan, SCOPE_SPAN_FIELD, span);\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete (scope as ScopeWithMaybeSpan)[SCOPE_SPAN_FIELD];\n  }\n}\n\n/**\n * Get the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nexport function _getSpanForScope(scope: ScopeWithMaybeSpan): Span | undefined {\n  return scope[SCOPE_SPAN_FIELD];\n}\n"],"names":[],"mappings":";;;;;;;;AAIA,MAAM,gBAAA,GAAmB,aAAa;AAMtC;;;CAGA,GACO,SAAS,gBAAgB,CAAC,KAAK,EAAS,IAAI,EAA0B;IAC3E,IAAI,IAAI,EAAE;YACR,gQAAwB,EAAC,KAAA,EAA6B,gBAAgB,EAAE,IAAI,CAAC;IACjF,OAAS;QACT,gEAAA;QACI,OAAO,AAAC,KAAA,CAA6B,gBAAgB,CAAC;IAC1D;AACA;AAEA;;;CAGA,GACO,SAAS,gBAAgB,CAAC,KAAK,EAAwC;IAC5E,OAAO,KAAK,CAAC,gBAAgB,CAAC;AAChC","debugId":null}},
    {"offset": {"line": 1591, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/scope.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/scope.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport type { Client } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport { updateSession } from './session';\nimport type { Attachment } from './types-hoist/attachment';\nimport type { Breadcrumb } from './types-hoist/breadcrumb';\nimport type { Context, Contexts } from './types-hoist/context';\nimport type { DynamicSamplingContext } from './types-hoist/envelope';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport type { Extra, Extras } from './types-hoist/extra';\nimport type { Primitive } from './types-hoist/misc';\nimport type { RequestEventData } from './types-hoist/request';\nimport type { Session } from './types-hoist/session';\nimport type { SeverityLevel } from './types-hoist/severity';\nimport type { Span } from './types-hoist/span';\nimport type { PropagationContext } from './types-hoist/tracing';\nimport type { User } from './types-hoist/user';\nimport { debug } from './utils/debug-logger';\nimport { isPlainObject } from './utils/is';\nimport { merge } from './utils/merge';\nimport { uuid4 } from './utils/misc';\nimport { generateTraceId } from './utils/propagationContext';\nimport { _getSpanForScope, _setSpanForScope } from './utils/spanOnScope';\nimport { truncate } from './utils/string';\nimport { dateTimestampInSeconds } from './utils/time';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * A context to be used for capturing an event.\n * This can either be a Scope, or a partial ScopeContext,\n * or a callback that receives the current scope and returns a new scope to use.\n */\nexport type CaptureContext = Scope | Partial<ScopeContext> | ((scope: Scope) => Scope);\n\n/**\n * Data that can be converted to a Scope.\n */\nexport interface ScopeContext {\n  user: User;\n  level: SeverityLevel;\n  extra: Extras;\n  contexts: Contexts;\n  tags: { [key: string]: Primitive };\n  fingerprint: string[];\n  propagationContext: PropagationContext;\n}\n\nexport interface SdkProcessingMetadata {\n  [key: string]: unknown;\n  requestSession?: {\n    status: 'ok' | 'errored' | 'crashed';\n  };\n  normalizedRequest?: RequestEventData;\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>;\n  capturedSpanScope?: Scope;\n  capturedSpanIsolationScope?: Scope;\n  spanCountBeforeProcessing?: number;\n  ipAddress?: string;\n}\n\n/**\n * Normalized data of the Scope, ready to be used.\n */\nexport interface ScopeData {\n  eventProcessors: EventProcessor[];\n  breadcrumbs: Breadcrumb[];\n  user: User;\n  tags: { [key: string]: Primitive };\n  extra: Extras;\n  contexts: Contexts;\n  attachments: Attachment[];\n  propagationContext: PropagationContext;\n  sdkProcessingMetadata: SdkProcessingMetadata;\n  fingerprint: string[];\n  level?: SeverityLevel;\n  transactionName?: string;\n  span?: Span;\n}\n\n/**\n * Holds additional event information.\n */\nexport class Scope {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called during event processing. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: SdkProcessingMetadata;\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: SeverityLevel;\n\n  /**\n   * Transaction Name\n   *\n   * IMPORTANT: The transaction name on the scope has nothing to do with root spans/transaction objects.\n   * It's purpose is to assign a transaction to the scope that's added to non-transaction events.\n   */\n  protected _transactionName?: string;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  /** Contains the last event id of a captured event.  */\n  protected _lastEventId?: string;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = {\n      traceId: generateTraceId(),\n      sampleRand: Math.random(),\n    };\n  }\n\n  /**\n   * Clone all data from this scope into a new scope.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    if (this._contexts.flags) {\n      // We need to copy the `values` array so insertions on a cloned scope\n      // won't affect the original array.\n      newScope._contexts.flags = {\n        values: [...this._contexts.flags.values],\n      };\n    }\n\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n    newScope._lastEventId = this._lastEventId;\n\n    _setSpanForScope(newScope, _getSpanForScope(this));\n\n    return newScope;\n  }\n\n  /**\n   * Update the client assigned to this scope.\n   * Note that not every scope will have a client assigned - isolation scopes & the global scope will generally not have a client,\n   * as well as manually created scopes.\n   */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Set the ID of the last captured error event.\n   * This is generally only captured on the isolation scope.\n   */\n  public setLastEventId(lastEventId: string | undefined): void {\n    this._lastEventId = lastEventId;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this._client as C | undefined;\n  }\n\n  /**\n   * Get the ID of the last captured error event.\n   * This is generally only available on the isolation scope.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * Add an event processor that will be called before an event is sent.\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * Set the user for this scope.\n   * Set to `null` to unset the user.\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Get the user from this scope.\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * Set an object that will be merged into existing tags on the scope,\n   * and will be sent as tags data with the event.\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set a single tag that will be sent as tags data with the event.\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set an object that will be merged into existing extra on the scope,\n   * and will be sent as extra data with the event.\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set a single key:value extra entry that will be sent as extra data with the event.\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the fingerprint on the scope to send with the events.\n   * @param {string[]} fingerprint Fingerprint to group events in Sentry.\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the level on the scope for future events.\n   */\n  public setLevel(level: SeverityLevel): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope so that the name of e.g. taken server route or\n   * the page location is attached to future events.\n   *\n   * IMPORTANT: Calling this function does NOT change the name of the currently active\n   * root span. If you want to change the name of the active root span, use\n   * `Sentry.updateSpanName(rootSpan, 'new name')` instead.\n   *\n   * By default, the SDK updates the scope's transaction name automatically on sensible\n   * occasions, such as a page navigation or when handling a new request on the server.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets context data with the given name.\n   * Data passed as context will be normalized. You can also pass `null` to unset the context.\n   * Note that context data will not be merged - calling `setContext` will overwrite an existing context with the same key.\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set the session for the scope.\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Get the session from the scope.\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * Updates the scope with provided data. Can work in three variations:\n   * - plain object containing updatable attributes\n   * - Scope instance that'll extract the attributes from\n   * - callback function that'll receive the current scope as an argument and allow for modifications\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    const scopeInstance =\n      scopeToMerge instanceof Scope\n        ? scopeToMerge.getScopeData()\n        : isPlainObject(scopeToMerge)\n          ? (captureContext as ScopeContext)\n          : undefined;\n\n    const { tags, extra, user, contexts, level, fingerprint = [], propagationContext } = scopeInstance || {};\n\n    this._tags = { ...this._tags, ...tags };\n    this._extra = { ...this._extra, ...extra };\n    this._contexts = { ...this._contexts, ...contexts };\n\n    if (user && Object.keys(user).length) {\n      this._user = user;\n    }\n\n    if (level) {\n      this._level = level;\n    }\n\n    if (fingerprint.length) {\n      this._fingerprint = fingerprint;\n    }\n\n    if (propagationContext) {\n      this._propagationContext = propagationContext;\n    }\n\n    return this;\n  }\n\n  /**\n   * Clears the current scope and resets its properties.\n   * Note: The client will not be cleared.\n   */\n  public clear(): this {\n    // client is not cleared here on purpose!\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._session = undefined;\n    _setSpanForScope(this, undefined);\n    this._attachments = [];\n    this.setPropagationContext({ traceId: generateTraceId(), sampleRand: Math.random() });\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Adds a breadcrumb to the scope.\n   * By default, the last 100 breadcrumbs are kept.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb: Breadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n      // Breadcrumb messages can theoretically be infinitely large and they're held in memory so we truncate them not to leak (too much) memory\n      message: breadcrumb.message ? truncate(breadcrumb.message, 2048) : breadcrumb.message,\n    };\n\n    this._breadcrumbs.push(mergedBreadcrumb);\n    if (this._breadcrumbs.length > maxCrumbs) {\n      this._breadcrumbs = this._breadcrumbs.slice(-maxCrumbs);\n      this._client?.recordDroppedEvent('buffer_overflow', 'log_item');\n    }\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * Get the last breadcrumb of the scope.\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * Clear all breadcrumbs from the scope.\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Add an attachment to the scope.\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * Clear all attachments from the scope.\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Get the data of this scope, which should be applied to an event during processing.\n   */\n  public getScopeData(): ScopeData {\n    return {\n      breadcrumbs: this._breadcrumbs,\n      attachments: this._attachments,\n      contexts: this._contexts,\n      tags: this._tags,\n      extra: this._extra,\n      user: this._user,\n      level: this._level,\n      fingerprint: this._fingerprint || [],\n      eventProcessors: this._eventProcessors,\n      propagationContext: this._propagationContext,\n      sdkProcessingMetadata: this._sdkProcessingMetadata,\n      transactionName: this._transactionName,\n      span: _getSpanForScope(this),\n    };\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry.\n   */\n  public setSDKProcessingMetadata(newData: SdkProcessingMetadata): this {\n    this._sdkProcessingMetadata = merge(this._sdkProcessingMetadata, newData, 2);\n    return this;\n  }\n\n  /**\n   * Add propagation context to the scope, used for distributed tracing\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * Get propagation context from the scope, used for distributed tracing\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @returns {string} The id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      DEBUG_BUILD && debug.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @returns {string} The id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      DEBUG_BUILD && debug.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a Sentry event for this scope.\n   *\n   * @returns {string} The id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      DEBUG_BUILD && debug.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2079, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/defaultScopes.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/defaultScopes.ts"],"sourcesContent":["import { getGlobalSingleton } from './carrier';\nimport { Scope } from './scope';\n\n/** Get the default current scope. */\nexport function getDefaultCurrentScope(): Scope {\n  return getGlobalSingleton('defaultCurrentScope', () => new Scope());\n}\n\n/** Get the default isolation scope. */\nexport function getDefaultIsolationScope(): Scope {\n  return getGlobalSingleton('defaultIsolationScope', () => new Scope());\n}\n"],"names":[],"mappings":";;;;;;;;;;AAGA,mCAAA,GACO,SAAS,sBAAsB,GAAU;IAC9C,WAAO,kPAAkB,EAAC,qBAAqB,EAAE,IAAM,IAAI,mOAAK,EAAE,CAAC;AACrE;AAEA,qCAAA,GACO,SAAS,wBAAwB,GAAU;IAChD,WAAO,kPAAkB,EAAC,uBAAuB,EAAE,IAAM,IAAI,mOAAK,EAAE,CAAC;AACvE","debugId":null}},
    {"offset": {"line": 2101, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/asyncContext/stackStrategy.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/asyncContext/stackStrategy.ts"],"sourcesContent":["import type { Client } from '../client';\nimport { getDefaultCurrentScope, getDefaultIsolationScope } from '../defaultScopes';\nimport { Scope } from '../scope';\nimport { isThenable } from '../utils/is';\nimport { getMainCarrier, getSentryCarrier } from './../carrier';\nimport type { AsyncContextStrategy } from './types';\n\ninterface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * This is an object that holds a stack of scopes.\n */\nexport class AsyncContextStack {\n  private readonly _stack: [Layer, ...Layer[]];\n  private _isolationScope: Scope;\n\n  public constructor(scope?: Scope, isolationScope?: Scope) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    // scope stack for domains or the process\n    this._stack = [{ scope: assignedScope }];\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Fork a scope for the stack.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    const scope = this._pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      this._popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          this._popScope();\n          return res;\n        },\n        e => {\n          this._popScope();\n          throw e;\n        },\n      );\n    }\n\n    this._popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * Get the client of the stack.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   */\n  public getScope(): Scope {\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * Get the isolation scope for the stack.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1] as Layer;\n  }\n\n  /**\n   * Push a scope to the stack.\n   */\n  private _pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = this.getScope().clone();\n    this._stack.push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * Pop a scope from the stack.\n   */\n  private _popScope(): boolean {\n    if (this._stack.length <= 1) return false;\n    return !!this._stack.pop();\n  }\n}\n\n/**\n * Get the global async context stack.\n * This will be removed during the v8 cycle and is only here to make migration easier.\n */\nfunction getAsyncContextStack(): AsyncContextStack {\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n\n  return (sentry.stack = sentry.stack || new AsyncContextStack(getDefaultCurrentScope(), getDefaultIsolationScope()));\n}\n\nfunction withScope<T>(callback: (scope: Scope) => T): T {\n  return getAsyncContextStack().withScope(callback);\n}\n\nfunction withSetScope<T>(scope: Scope, callback: (scope: Scope) => T): T {\n  const stack = getAsyncContextStack() as AsyncContextStack;\n  return stack.withScope(() => {\n    stack.getStackTop().scope = scope;\n    return callback(scope);\n  });\n}\n\nfunction withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return getAsyncContextStack().withScope(() => {\n    return callback(getAsyncContextStack().getIsolationScope());\n  });\n}\n\n/**\n * Get the stack-based async context strategy.\n */\nexport function getStackAsyncContextStrategy(): AsyncContextStrategy {\n  return {\n    withIsolationScope,\n    withScope,\n    withSetScope,\n    withSetIsolationScope: <T>(_isolationScope: Scope, callback: (isolationScope: Scope) => T) => {\n      return withIsolationScope(callback);\n    },\n    getCurrentScope: () => getAsyncContextStack().getScope(),\n    getIsolationScope: () => getAsyncContextStack().getIsolationScope(),\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2244, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/asyncContext/index.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/asyncContext/index.ts"],"sourcesContent":["import type { Carrier } from './../carrier';\nimport { getMainCarrier, getSentryCarrier } from './../carrier';\nimport { getStackAsyncContextStrategy } from './stackStrategy';\nimport type { AsyncContextStrategy } from './types';\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n  sentry.acs = strategy;\n}\n\n/**\n * Get the current async context strategy.\n * If none has been setup, the default will be used.\n */\nexport function getAsyncContextStrategy(carrier: Carrier): AsyncContextStrategy {\n  const sentry = getSentryCarrier(carrier);\n\n  if (sentry.acs) {\n    return sentry.acs;\n  }\n\n  // Otherwise, use the default one (stack)\n  return getStackAsyncContextStrategy();\n}\n"],"names":[],"mappings":";;;;;;;;;;AAKA;;;;CAIA,GACO,SAAS,uBAAuB,CAAC,QAAQ,EAA0C;IAC1F,kDAAA;IACE,MAAM,QAAA,OAAW,8OAAc,EAAE;IACjC,MAAM,MAAA,OAAS,gPAAgB,EAAC,QAAQ,CAAC;IACzC,MAAM,CAAC,GAAA,GAAM,QAAQ;AACvB;AAEA;;;CAGA,GACO,SAAS,uBAAuB,CAAC,OAAO,EAAiC;IAC9E,MAAM,MAAA,OAAS,gPAAgB,EAAC,OAAO,CAAC;IAExC,IAAI,MAAM,CAAC,GAAG,EAAE;QACd,OAAO,MAAM,CAAC,GAAG;IACrB;IAEA,yCAAA;IACE,WAAO,kRAA4B,EAAE;AACvC","debugId":null}},
    {"offset": {"line": 2281, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/currentScopes.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/currentScopes.ts"],"sourcesContent":["import { getAsyncContextStrategy } from './asyncContext';\nimport { getGlobalSingleton, getMainCarrier } from './carrier';\nimport type { Client } from './client';\nimport { Scope } from './scope';\nimport type { TraceContext } from './types-hoist/context';\nimport { generateSpanId } from './utils/propagationContext';\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getCurrentScope();\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current execution context.\n */\nexport function getIsolationScope(): Scope {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getIsolationScope();\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): Scope {\n  return getGlobalSingleton('globalScope', () => new Scope());\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: Scope | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: Scope | undefined, callback: (scope: Scope) => T]\n): T {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n\n    if (!scope) {\n      return acs.withScope(callback);\n    }\n\n    return acs.withSetScope(scope, callback);\n  }\n\n  return acs.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T;\n/**\n * Set the provided isolation scope as active in the given callback. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * If you pass in `undefined` as a scope, it will fork a new isolation scope, the same as if no scope is passed.\n */\nexport function withIsolationScope<T>(isolationScope: Scope | undefined, callback: (isolationScope: Scope) => T): T;\n/**\n * Either creates a new active isolation scope, or sets the given isolation scope as active scope in the given callback.\n */\nexport function withIsolationScope<T>(\n  ...rest:\n    | [callback: (isolationScope: Scope) => T]\n    | [isolationScope: Scope | undefined, callback: (isolationScope: Scope) => T]\n): T {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [isolationScope, callback] = rest;\n\n    if (!isolationScope) {\n      return acs.withIsolationScope(callback);\n    }\n\n    return acs.withSetIsolationScope(isolationScope, callback);\n  }\n\n  return acs.withIsolationScope(rest[0]);\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  return getCurrentScope().getClient<C>();\n}\n\n/**\n * Get a trace context for the given scope.\n */\nexport function getTraceContextFromScope(scope: Scope): TraceContext {\n  const propagationContext = scope.getPropagationContext();\n\n  const { traceId, parentSpanId, propagationSpanId } = propagationContext;\n\n  const traceContext: TraceContext = {\n    trace_id: traceId,\n    span_id: propagationSpanId || generateSpanId(),\n  };\n\n  if (parentSpanId) {\n    traceContext.parent_span_id = parentSpanId;\n  }\n\n  return traceContext;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAOA;;CAEA,GACO,SAAS,eAAe,GAAU;IACvC,MAAM,OAAA,OAAU,8OAAc,EAAE;IAChC,MAAM,GAAA,OAAM,qQAAuB,EAAC,OAAO,CAAC;IAC5C,OAAO,GAAG,CAAC,eAAe,EAAE;AAC9B;AAEA;;;CAGA,GACO,SAAS,iBAAiB,GAAU;IACzC,MAAM,OAAA,OAAU,8OAAc,EAAE;IAChC,MAAM,GAAA,OAAM,qQAAuB,EAAC,OAAO,CAAC;IAC5C,OAAO,GAAG,CAAC,iBAAiB,EAAE;AAChC;AAEA;;;CAGA,GACO,SAAS,cAAc,GAAU;IACtC,WAAO,kPAAkB,EAAC,aAAa,EAAE,IAAM,IAAI,mOAAK,EAAE,CAAC;AAC7D;AAEA;;;;CAIA,GAMA;;CAEA,GACO,SAAS,SAAS;QACvB;QAAG,4BAAA;;IAEH,MAAM,OAAA,GAAU,kPAAc,EAAE;IAChC,MAAM,GAAA,OAAM,qQAAuB,EAAC,OAAO,CAAC;IAE9C,0FAAA;IACE,IAAI,IAAI,CAAC,MAAA,KAAW,CAAC,EAAE;QACrB,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAA,GAAI,IAAI;QAE9B,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QACpC;QAEI,OAAO,GAAG,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC;IAC5C;IAEE,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B;AAEA;;;;;;;;;CASA,GAeA;;CAEA,GACO,SAAS,kBAAkB;QAChC;QAAG,4BAAA;;IAIH,MAAM,OAAA,OAAU,8OAAc,EAAE;IAChC,MAAM,GAAA,OAAM,qQAAuB,EAAC,OAAO,CAAC;IAE9C,0FAAA;IACE,IAAI,IAAI,CAAC,MAAA,KAAW,CAAC,EAAE;QACrB,MAAM,CAAC,cAAc,EAAE,QAAQ,CAAA,GAAI,IAAI;QAEvC,IAAI,CAAC,cAAc,EAAE;YACnB,OAAO,GAAG,CAAC,kBAAkB,CAAC,QAAQ,CAAC;QAC7C;QAEI,OAAO,GAAG,CAAC,qBAAqB,CAAC,cAAc,EAAE,QAAQ,CAAC;IAC9D;IAEE,OAAO,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxC;AAEA;;CAEA,GACO,SAAS,SAAS,GAAoC;IAC3D,OAAO,eAAe,EAAE,CAAC,SAAS,EAAK;AACzC;AAEA;;CAEA,GACO,SAAS,wBAAwB,CAAC,KAAK,EAAuB;IACnE,MAAM,kBAAA,GAAqB,KAAK,CAAC,qBAAqB,EAAE;IAExD,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,iBAAA,EAAkB,GAAI,kBAAkB;IAEvE,MAAM,YAAY,GAAiB;QACjC,QAAQ,EAAE,OAAO;QACjB,OAAO,EAAE,iBAAA,QAAqB,kQAAc,EAAE;IAClD,CAAG;IAED,IAAI,YAAY,EAAE;QAChB,YAAY,CAAC,cAAA,GAAiB,YAAY;IAC9C;IAEE,OAAO,YAAY;AACrB","debugId":null}},
    {"offset": {"line": 2400, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/constants.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/constants.ts"],"sourcesContent":["export const DEFAULT_ENVIRONMENT = 'production';\n"],"names":[],"mappings":";;;;AAAO,MAAM,mBAAA,GAAsB","debugId":null}},
    {"offset": {"line": 2411, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/syncpromise.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/syncpromise.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst STATE_PENDING = 0;\nconst STATE_RESOLVED = 1;\nconst STATE_REJECTED = 2;\n\ntype State = typeof STATE_PENDING | typeof STATE_RESOLVED | typeof STATE_REJECTED;\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\ntype Executor<T> = (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void;\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nexport class SyncPromise<T> implements PromiseLike<T> {\n  private _state: State;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(executor: Executor<T>) {\n    this._state = STATE_PENDING;\n    this._handlers = [];\n\n    this._runExecutor(executor);\n  }\n\n  /** @inheritdoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** @inheritdoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** @inheritdoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** Excute the resolve/reject handlers. */\n  private _executeHandlers(): void {\n    if (this._state === STATE_PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === STATE_RESOLVED) {\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === STATE_REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  }\n\n  /** Run the executor for the SyncPromise. */\n  private _runExecutor(executor: Executor<T>): void {\n    const setResult = (state: State, value?: T | PromiseLike<T> | any): void => {\n      if (this._state !== STATE_PENDING) {\n        return;\n      }\n\n      if (isThenable(value)) {\n        void (value as PromiseLike<T>).then(resolve, reject);\n        return;\n      }\n\n      this._state = state;\n      this._value = value;\n\n      this._executeHandlers();\n    };\n\n    const resolve = (value: unknown): void => {\n      setResult(STATE_RESOLVED, value);\n    };\n\n    const reject = (reason: unknown): void => {\n      setResult(STATE_REJECTED, reason);\n    };\n\n    try {\n      executor(resolve, reject);\n    } catch (e) {\n      reject(e);\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2564, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/eventProcessors.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/eventProcessors.ts"],"sourcesContent":["import { DEBUG_BUILD } from './debug-build';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport { debug } from './utils/debug-logger';\nimport { isThenable } from './utils/is';\nimport { SyncPromise } from './utils/syncpromise';\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && debug.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAOA;;CAEA,GACO,SAAS,qBAAqB,CACnC,UAAU,EACV,KAAK,EACL,IAAI;gBACJ,KAAK,4DAAW,CAAC;IAEjB,OAAO,IAAI,wPAAW,CAAe,CAAC,OAAO,EAAE,MAAM,KAAK;QACxD,MAAM,SAAA,GAAY,UAAU,CAAC,KAAK,CAAC;QACnC,IAAI,KAAA,KAAU,IAAA,IAAQ,OAAO,SAAA,KAAc,UAAU,EAAE;YACrD,OAAO,CAAC,KAAK,CAAC;QACpB,OAAW;YACL,MAAM,MAAA,GAAS,SAAS,CAAC;gBAAE,GAAG,KAAA;YAAA,CAAO,EAAE,IAAI,CAAA;YAE3C,kPAAA,IAAe,SAAS,CAAC,EAAA,IAAM,MAAA,KAAW,IAAA,IAAQ,sPAAK,CAAC,GAAG,CAAC,AAAC,iBAAiB,UAAE,SAAS,CAAC,EAAE,EAAC,eAAe,CAAC,CAAC;YAE9G,QAAI,8OAAU,EAAC,MAAM,CAAC,EAAE;gBACtB,KAAK,OACF,IAAI,EAAC,KAAA,GAAS,qBAAqB,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EACrF,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;YAC7B,OAAa;gBACL,KAAK,qBAAqB,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,KAAA,GAAQ,CAAC,EAC3D,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;YAC7B;QACA;IACA,CAAG,CAAC;AACJ","debugId":null}},
    {"offset": {"line": 2603, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/semanticAttributes.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/semanticAttributes.ts"],"sourcesContent":["/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Attributes that holds the sample rate that was locally applied to a span.\n * If this attribute is not defined, it means that the span inherited a sampling decision.\n *\n * NOTE: Is only defined on root spans.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Attribute holding the sample rate of the previous trace.\n * This is used to sample consistently across subsequent traces in the browser SDK.\n *\n * Note: Only defined on root spans, if opted into consistent sampling\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE = 'sentry.previous_trace_sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/** The reason why an idle span finished. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON = 'sentry.idle_span_finish_reason';\n\n/** The unit of a measurement, which may be stored as a TimedEvent. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT = 'sentry.measurement_unit';\n\n/** The value of a measurement, which may be stored as a TimedEvent. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE = 'sentry.measurement_value';\n\n/**\n * A custom span name set by users guaranteed to be taken over any automatically\n * inferred name. This attribute is removed before the span is sent.\n *\n * @internal only meant for internal SDK usage\n * @hidden\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME = 'sentry.custom_span_name';\n\n/**\n * The id of the profile that this span occurred in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'sentry.profile_id';\n\nexport const SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME = 'sentry.exclusive_time';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_HIT = 'cache.hit';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_KEY = 'cache.key';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE = 'cache.item_size';\n\n/** TODO: Remove these once we update to latest semantic conventions */\nexport const SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD = 'http.request.method';\nexport const SEMANTIC_ATTRIBUTE_URL_FULL = 'url.full';\n\n/**\n * A span link attribute to mark the link as a special span link.\n *\n * Known values:\n * - `previous_trace`: The span links to the frontend root span of the previous trace.\n * - `next_trace`: The span links to the frontend root span of the next trace. (Not set by the SDK)\n *\n * Other values may be set as appropriate.\n * @see https://develop.sentry.dev/sdk/telemetry/traces/span-links/#link-types\n */\nexport const SEMANTIC_LINK_ATTRIBUTE_LINK_TYPE = 'sentry.link.type';\n"],"names":[],"mappings":"AAAA;;;;CAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACO,MAAM,gCAAA,GAAmC;AAEhD;;;;;CAKA,GACO,MAAM,qCAAA,GAAwC;AAErD;;;;;CAKA,GACO,MAAM,oDAAA,GAAuD;AAEpE;;CAEA,GACO,MAAM,4BAAA,GAA+B;AAE5C;;CAEA,GACO,MAAM,gCAAA,GAAmC;AAEhD,0CAAA,GACO,MAAM,iDAAA,GAAoD;AAEjE,oEAAA,GACO,MAAM,0CAAA,GAA6C;AAE1D,qEAAA,GACO,MAAM,2CAAA,GAA8C;AAE3D;;;;;;CAMA,GACO,MAAM,0CAAA,GAA6C;AAE1D;;CAEA,GACO,MAAM,6BAAA,GAAgC;AAEtC,MAAM,iCAAA,GAAoC;AAE1C,MAAM,4BAAA,GAA+B;AAErC,MAAM,4BAAA,GAA+B;AAErC,MAAM,kCAAA,GAAqC;AAElD,qEAAA,GACO,MAAM,sCAAA,GAAyC;AAC/C,MAAM,2BAAA,GAA8B;AAE3C;;;;;;;;;CASA,GACO,MAAM,iCAAA,GAAoC","debugId":null}},
    {"offset": {"line": 2697, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/baggage.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/baggage.ts"],"sourcesContent":["import { DEBUG_BUILD } from '../debug-build';\nimport type { DynamicSamplingContext } from '../types-hoist/envelope';\nimport { debug } from './debug-logger';\nimport { isString } from './is';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nexport const MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nexport function baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Partial<DynamicSamplingContext> | undefined {\n  const baggageObject = parseBaggageHeader(baggageHeader);\n\n  if (!baggageObject) {\n    return undefined;\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce<Record<string, string>>((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext as Partial<DynamicSamplingContext>;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nexport function dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>,\n): string | undefined {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce<Record<string, string>>(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Take a baggage header and parse it into an object.\n */\nexport function parseBaggageHeader(\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Record<string, string> | undefined {\n  if (!baggageHeader || (!isString(baggageHeader) && !Array.isArray(baggageHeader))) {\n    return undefined;\n  }\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    return baggageHeader.reduce<Record<string, string>>((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      Object.entries(currBaggageObject).forEach(([key, value]) => {\n        acc[key] = value;\n      });\n      return acc;\n    }, {});\n  }\n\n  return baggageHeaderToObject(baggageHeader);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader: string): Record<string, string> {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry =>\n      baggageEntry.split('=').map(keyOrValue => {\n        try {\n          return decodeURIComponent(keyOrValue.trim());\n        } catch {\n          // We ignore errors here, e.g. if the value cannot be URL decoded.\n          // This will then be skipped in the next step\n          return;\n        }\n      }),\n    )\n    .reduce<Record<string, string>>((acc, [key, value]) => {\n      if (key && value) {\n        acc[key] = value;\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nexport function objectToBaggageHeader(object: Record<string, string>): string | undefined {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2848, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/dsn.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/dsn.ts"],"sourcesContent":["import type { Client } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { DsnComponents, DsnLike, DsnProtocol } from '../types-hoist/dsn';\nimport { consoleSandbox, debug } from './debug-logger';\n\n/** Regular expression used to extract org ID from a DSN host. */\nconst ORG_ID_REGEX = /^o(\\d+)\\./;\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host = '', port = '', lastPath = ''] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      debug.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    debug.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    debug.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    debug.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Extract the org ID from a DSN host.\n *\n * @param host The host from a DSN\n * @returns The org ID if found, undefined otherwise\n */\nexport function extractOrgIdFromDsnHost(host: string): string | undefined {\n  const match = host.match(ORG_ID_REGEX);\n\n  return match?.[1];\n}\n\n/**\n *  Returns the organization ID of the client.\n *\n *  The organization ID is extracted from the DSN. If the client options include a `orgId`, this will always take precedence.\n */\nexport function extractOrgIdFromClient(client: Client): string | undefined {\n  const options = client.getOptions();\n\n  const { host } = client.getDsn() || {};\n\n  let org_id: string | undefined;\n\n  if (options.orgId) {\n    org_id = String(options.orgId);\n  } else if (host) {\n    org_id = extractOrgIdFromDsnHost(host);\n  }\n\n  return org_id;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3007, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/hasSpansEnabled.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/hasSpansEnabled.ts"],"sourcesContent":["import { getClient } from '../currentScopes';\nimport type { Options } from '../types-hoist/options';\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean | undefined;\n\n/**\n * Determines if span recording is currently enabled.\n *\n * Spans are recorded when at least one of `tracesSampleRate` and `tracesSampler`\n * is defined in the SDK config. This function does not make any assumption about\n * sampling decisions, it only checks if the SDK is configured to record spans.\n *\n * Important: This function only determines if span recording is enabled. Trace\n * continuation and propagation is separately controlled and not covered by this function.\n * If this function returns `false`, traces can still be propagated (which is what\n * we refer to by \"Tracing without Performance\")\n * @see https://develop.sentry.dev/sdk/telemetry/traces/tracing-without-performance/\n *\n * @param maybeOptions An SDK options object to be passed to this function.\n * If this option is not provided, the function will use the current client's options.\n */\nexport function hasSpansEnabled(\n  maybeOptions?: Pick<Options, 'tracesSampleRate' | 'tracesSampler'> | undefined,\n): boolean {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const options = maybeOptions || getClient()?.getOptions();\n  return (\n    !!options &&\n    // Note: This check is `!= null`, meaning \"nullish\". `0` is not \"nullish\", `undefined` and `null` are. (This comment was brought to you by 15 minutes of questioning life)\n    (options.tracesSampleRate != null || !!options.tracesSampler)\n  );\n}\n"],"names":[],"mappings":";;;;;;AAGA,2DAAA;AAGA;;;;;;;;;;;;;;;CAeA,GACO,SAAS,eAAe,CAC7B,YAAY;;IAEZ,IAAI,OAAO,kBAAA,KAAuB,SAAA,IAAa,CAAC,kBAAkB,EAAE;QAClE,OAAO,KAAK;IAChB;IAEE,MAAM,OAAA,GAAU,YAAA,sQAAyB,EAAE,gDAAX,WAAa,UAAU,EAAE;IACzD,OACE,CAAC,CAAC,OAAA,IACN,0KAAA;IACA,CAAK,OAAO,CAAC,gBAAA,IAAoB,IAAA,IAAQ,CAAC,CAAC,OAAO,CAAC,aAAa;AAEhE","debugId":null}},
    {"offset": {"line": 3044, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/tracing/spanstatus.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/tracing/spanstatus.ts"],"sourcesContent":["import type { Span } from '../types-hoist/span';\nimport type { SpanStatus } from '../types-hoist/spanStatus';\n\nexport const SPAN_STATUS_UNSET = 0;\nexport const SPAN_STATUS_OK = 1;\nexport const SPAN_STATUS_ERROR = 2;\n\n/**\n * Converts a HTTP status code into a sentry status with a message.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\n// https://develop.sentry.dev/sdk/event-payloads/span/\nexport function getSpanStatusFromHttpCode(httpStatus: number): SpanStatus {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return { code: SPAN_STATUS_OK };\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return { code: SPAN_STATUS_ERROR, message: 'unauthenticated' };\n      case 403:\n        return { code: SPAN_STATUS_ERROR, message: 'permission_denied' };\n      case 404:\n        return { code: SPAN_STATUS_ERROR, message: 'not_found' };\n      case 409:\n        return { code: SPAN_STATUS_ERROR, message: 'already_exists' };\n      case 413:\n        return { code: SPAN_STATUS_ERROR, message: 'failed_precondition' };\n      case 429:\n        return { code: SPAN_STATUS_ERROR, message: 'resource_exhausted' };\n      case 499:\n        return { code: SPAN_STATUS_ERROR, message: 'cancelled' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'invalid_argument' };\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return { code: SPAN_STATUS_ERROR, message: 'unimplemented' };\n      case 503:\n        return { code: SPAN_STATUS_ERROR, message: 'unavailable' };\n      case 504:\n        return { code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'internal_error' };\n    }\n  }\n\n  return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n}\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nexport function setHttpStatus(span: Span, httpStatus: number): void {\n  span.setAttribute('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus.message !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAGO,MAAM,iBAAA,GAAoB;AAC1B,MAAM,cAAA,GAAiB;AACvB,MAAM,iBAAA,GAAoB;AAEjC;;;;;CAKA,GACA,sDAAA;AACO,SAAS,yBAAyB,CAAC,UAAU,EAAsB;IACxE,IAAI,UAAA,GAAa,OAAO,UAAA,IAAc,GAAG,EAAE;QACzC,OAAO;YAAE,IAAI,EAAE;QAAA,CAAgB;IACnC;IAEE,IAAI,UAAA,IAAc,OAAO,UAAA,GAAa,GAAG,EAAE;QACzC,OAAQ,UAAU;YAChB,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,iBAAA;gBAAA,CAAmB;YAChE,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,mBAAA;gBAAA,CAAqB;YAClE,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,WAAA;gBAAA,CAAa;YAC1D,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,gBAAA;gBAAA,CAAkB;YAC/D,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,qBAAA;gBAAA,CAAuB;YACpE,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,oBAAA;gBAAA,CAAsB;YACnE,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,WAAA;gBAAA,CAAa;YAC1D;gBACE,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,kBAAA;gBAAA,CAAoB;QACvE;IACA;IAEE,IAAI,UAAA,IAAc,OAAO,UAAA,GAAa,GAAG,EAAE;QACzC,OAAQ,UAAU;YAChB,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,eAAA;gBAAA,CAAiB;YAC9D,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,aAAA;gBAAA,CAAe;YAC5D,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,mBAAA;gBAAA,CAAqB;YAClE;gBACE,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,gBAAA;gBAAA,CAAkB;QACrE;IACA;IAEE,OAAO;QAAE,IAAI,EAAE,iBAAiB;QAAE,OAAO,EAAE,eAAA;IAAA,CAAiB;AAC9D;AAEA;;;CAGA,GACO,SAAS,aAAa,CAAC,IAAI,EAAQ,UAAU,EAAgB;IAClE,IAAI,CAAC,YAAY,CAAC,2BAA2B,EAAE,UAAU,CAAC;IAE1D,MAAM,UAAA,GAAa,yBAAyB,CAAC,UAAU,CAAC;IACxD,IAAI,UAAU,CAAC,OAAA,KAAY,eAAe,EAAE;QAC1C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;IAC9B;AACA","debugId":null}},
    {"offset": {"line": 3160, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/tracing/utils.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/tracing/utils.ts"],"sourcesContent":["import type { Scope } from '../scope';\nimport type { Span } from '../types-hoist/span';\nimport { addNonEnumerableProperty } from '../utils/object';\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\ntype SpanWithScopes = Span & {\n  [SCOPE_ON_START_SPAN_FIELD]?: Scope;\n  [ISOLATION_SCOPE_ON_START_SPAN_FIELD]?: Scope;\n};\n\n/** Store the scope & isolation scope for a span, which can the be used when it is finished. */\nexport function setCapturedScopesOnSpan(span: Span | undefined, scope: Scope, isolationScope: Scope): void {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nexport function getCapturedScopesOnSpan(span: Span): { scope?: Scope; isolationScope?: Scope } {\n  return {\n    scope: (span as SpanWithScopes)[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span as SpanWithScopes)[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n"],"names":[],"mappings":";;;;;;;;AAIA,MAAM,yBAAA,GAA4B,cAAc;AAChD,MAAM,mCAAA,GAAsC,uBAAuB;AAOnE,6FAAA,GACO,SAAS,uBAAuB,CAAC,IAAI,EAAoB,KAAK,EAAS,cAAc,EAAe;IACzG,IAAI,IAAI,EAAE;YACR,gQAAwB,EAAC,IAAI,EAAE,mCAAmC,EAAE,cAAc,CAAC;YACnF,gQAAwB,EAAC,IAAI,EAAE,yBAAyB,EAAE,KAAK,CAAC;IACpE;AACA;AAEA;;CAEA,GACO,SAAS,uBAAuB,CAAC,IAAI,EAAmD;IAC7F,OAAO;QACL,KAAK,EAAE,AAAC,IAAA,CAAwB,yBAAyB,CAAC;QAC1D,cAAc,EAAE,AAAC,IAAA,CAAwB,mCAAmC,CAAC;IACjF,CAAG;AACH","debugId":null}},
    {"offset": {"line": 3190, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/parseSampleRate.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/parseSampleRate.ts"],"sourcesContent":["/**\n * Parse a sample rate from a given value.\n * This will either return a boolean or number sample rate, if the sample rate is valid (between 0 and 1).\n * If a string is passed, we try to convert it to a number.\n *\n * Any invalid sample rate will return `undefined`.\n */\nexport function parseSampleRate(sampleRate: unknown): number | undefined {\n  if (typeof sampleRate === 'boolean') {\n    return Number(sampleRate);\n  }\n\n  const rate = typeof sampleRate === 'string' ? parseFloat(sampleRate) : sampleRate;\n  if (typeof rate !== 'number' || isNaN(rate) || rate < 0 || rate > 1) {\n    return undefined;\n  }\n\n  return rate;\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMA;;;;AACO,SAAS,eAAe,CAAC,UAAU,EAA+B;IACvE,IAAI,OAAO,UAAA,KAAe,SAAS,EAAE;QACnC,OAAO,MAAM,CAAC,UAAU,CAAC;IAC7B;IAEE,MAAM,IAAA,GAAO,OAAO,UAAA,KAAe,QAAA,GAAW,UAAU,CAAC,UAAU,CAAA,GAAI,UAAU;IACjF,IAAI,OAAO,SAAS,QAAA,IAAY,KAAK,CAAC,IAAI,CAAA,IAAK,OAAO,CAAA,IAAK,IAAA,GAAO,CAAC,EAAE;QACnE,OAAO,SAAS;IACpB;IAEE,OAAO,IAAI;AACb","debugId":null}},
    {"offset": {"line": 3216, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/tracing.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/tracing.ts"],"sourcesContent":["import type { Client } from '../client';\nimport type { DynamicSamplingContext } from '../types-hoist/envelope';\nimport type { PropagationContext } from '../types-hoist/tracing';\nimport type { TraceparentData } from '../types-hoist/transaction';\nimport { debug } from '../utils/debug-logger';\nimport { baggageHeaderToDynamicSamplingContext } from './baggage';\nimport { extractOrgIdFromClient } from './dsn';\nimport { parseSampleRate } from './parseSampleRate';\nimport { generateSpanId, generateTraceId } from './propagationContext';\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent?: string): TraceparentData | undefined {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled: boolean | undefined;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create a propagation context from incoming headers or\n * creates a minimal new one if the headers are undefined.\n */\nexport function propagationContextFromHeaders(\n  sentryTrace: string | undefined,\n  baggage: string | number | boolean | string[] | null | undefined,\n): PropagationContext {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  if (!traceparentData?.traceId) {\n    return {\n      traceId: generateTraceId(),\n      sampleRand: Math.random(),\n    };\n  }\n\n  const sampleRand = getSampleRandFromTraceparentAndDsc(traceparentData, dynamicSamplingContext);\n\n  // The sample_rand on the DSC needs to be generated based on traceparent + baggage.\n  if (dynamicSamplingContext) {\n    dynamicSamplingContext.sample_rand = sampleRand.toString();\n  }\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData;\n\n  return {\n    traceId,\n    parentSpanId,\n    sampled: parentSampled,\n    dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n    sampleRand,\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nexport function generateSentryTraceHeader(\n  traceId: string | undefined = generateTraceId(),\n  spanId: string | undefined = generateSpanId(),\n  sampled?: boolean,\n): string {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\n/**\n * Given any combination of an incoming trace, generate a sample rand based on its defined semantics.\n *\n * Read more: https://develop.sentry.dev/sdk/telemetry/traces/#propagated-random-value\n */\nfunction getSampleRandFromTraceparentAndDsc(\n  traceparentData: TraceparentData | undefined,\n  dsc: Partial<DynamicSamplingContext> | undefined,\n): number {\n  // When there is an incoming sample rand use it.\n  const parsedSampleRand = parseSampleRate(dsc?.sample_rand);\n  if (parsedSampleRand !== undefined) {\n    return parsedSampleRand;\n  }\n\n  // Otherwise, if there is an incoming sampling decision + sample rate, generate a sample rand that would lead to the same sampling decision.\n  const parsedSampleRate = parseSampleRate(dsc?.sample_rate);\n  if (parsedSampleRate && traceparentData?.parentSampled !== undefined) {\n    return traceparentData.parentSampled\n      ? // Returns a sample rand with positive sampling decision [0, sampleRate)\n        Math.random() * parsedSampleRate\n      : // Returns a sample rand with negative sampling decision [sampleRate, 1)\n        parsedSampleRate + Math.random() * (1 - parsedSampleRate);\n  } else {\n    // If nothing applies, return a random sample rand.\n    return Math.random();\n  }\n}\n\n/**\n * Determines whether a new trace should be continued based on the provided baggage org ID and the client's `strictTraceContinuation` option.\n * If the trace should not be continued, a new trace will be started.\n *\n * The result is dependent on the `strictTraceContinuation` option in the client.\n * See https://develop.sentry.dev/sdk/telemetry/traces/#stricttracecontinuation\n */\nexport function shouldContinueTrace(client: Client, baggageOrgId?: string): boolean {\n  const clientOrgId = extractOrgIdFromClient(client);\n\n  // Case: baggage orgID and Client orgID don't match - always start new trace\n  if (baggageOrgId && clientOrgId && baggageOrgId !== clientOrgId) {\n    debug.log(\n      `Won't continue trace because org IDs don't match (incoming baggage: ${baggageOrgId}, SDK options: ${clientOrgId})`,\n    );\n    return false;\n  }\n\n  const strictTraceContinuation = client.getOptions().strictTraceContinuation || false; // default for `strictTraceContinuation` is `false`\n\n  if (strictTraceContinuation) {\n    // With strict continuation enabled, don't continue trace if:\n    // - Baggage has orgID, but Client doesn't have one\n    // - Client has orgID, but baggage doesn't have one\n    if ((baggageOrgId && !clientOrgId) || (!baggageOrgId && clientOrgId)) {\n      debug.log(\n        `Starting a new trace because strict trace continuation is enabled but one org ID is missing (incoming baggage: ${baggageOrgId}, Sentry client: ${clientOrgId})`,\n      );\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3356, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/spanUtils.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/spanUtils.ts"],"sourcesContent":["import { getAsyncContextStrategy } from '../asyncContext';\nimport { getMainCarrier } from '../carrier';\nimport { getCurrentScope } from '../currentScopes';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n} from '../semanticAttributes';\nimport type { SentrySpan } from '../tracing/sentrySpan';\nimport { SPAN_STATUS_OK, SPAN_STATUS_UNSET } from '../tracing/spanstatus';\nimport { getCapturedScopesOnSpan } from '../tracing/utils';\nimport type { TraceContext } from '../types-hoist/context';\nimport type { SpanLink, SpanLinkJSON } from '../types-hoist/link';\nimport type { Span, SpanAttributes, SpanJSON, SpanOrigin, SpanTimeInput } from '../types-hoist/span';\nimport type { SpanStatus } from '../types-hoist/spanStatus';\nimport { addNonEnumerableProperty } from '../utils/object';\nimport { generateSpanId } from '../utils/propagationContext';\nimport { timestampInSeconds } from '../utils/time';\nimport { generateSentryTraceHeader } from '../utils/tracing';\nimport { consoleSandbox } from './debug-logger';\nimport { _getSpanForScope } from './spanOnScope';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\nlet hasShownSpanDropWarning = false;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n * By default, this will only include trace_id, span_id & parent_span_id.\n * If `includeAllData` is true, it will also include data, op, status & origin.\n */\nexport function spanToTransactionTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, origin, links } = spanToJSON(span);\n\n  return {\n    parent_span_id,\n    span_id,\n    trace_id,\n    data,\n    op,\n    status,\n    origin,\n    links,\n  };\n}\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in a non-transaction event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId, traceId: trace_id, isRemote } = span.spanContext();\n\n  // If the span is remote, we use a random/virtual span as span_id to the trace context,\n  // and the remote span as parent_span_id\n  const parent_span_id = isRemote ? spanId : spanToJSON(span).parent_span_id;\n  const scope = getCapturedScopesOnSpan(span).scope;\n\n  const span_id = isRemote ? scope?.getPropagationContext().propagationSpanId || generateSpanId() : spanId;\n\n  return {\n    parent_span_id,\n    span_id,\n    trace_id,\n  };\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n *  Converts the span links array to a flattened version to be sent within an envelope.\n *\n *  If the links array is empty, it returns `undefined` so the empty value can be dropped before it's sent.\n */\nexport function convertSpanLinksForEnvelope(links?: SpanLink[]): SpanLinkJSON[] | undefined {\n  if (links && links.length > 0) {\n    return links.map(({ context: { spanId, traceId, traceFlags, ...restContext }, attributes }) => ({\n      span_id: spanId,\n      trace_id: traceId,\n      sampled: traceFlags === TRACE_FLAG_SAMPLED,\n      attributes,\n      ...restContext,\n    }));\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Convert a span time input into a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n */\n// Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n// This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n// And `spanToJSON` needs the Span class from `span.ts` to check here.\nexport function spanToJSON(span: Span): SpanJSON {\n  if (spanIsSentrySpan(span)) {\n    return span.getSpanJSON();\n  }\n\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n\n  // Handle a span from @opentelemetry/sdk-base-trace's `Span` class\n  if (spanIsOpenTelemetrySdkTraceBaseSpan(span)) {\n    const { attributes, startTime, name, endTime, status, links } = span;\n\n    // In preparation for the next major of OpenTelemetry, we want to support\n    // looking up the parent span id according to the new API\n    // In OTel v1, the parent span id is accessed as `parentSpanId`\n    // In OTel v2, the parent span id is accessed as `spanId` on the `parentSpanContext`\n    const parentSpanId =\n      'parentSpanId' in span\n        ? span.parentSpanId\n        : 'parentSpanContext' in span\n          ? (span.parentSpanContext as { spanId?: string } | undefined)?.spanId\n          : undefined;\n\n    return {\n      span_id,\n      trace_id,\n      data: attributes,\n      description: name,\n      parent_span_id: parentSpanId,\n      start_timestamp: spanTimeInputToSeconds(startTime),\n      // This is [0,0] by default in OTEL, in which case we want to interpret this as no end time\n      timestamp: spanTimeInputToSeconds(endTime) || undefined,\n      status: getStatusMessage(status),\n      op: attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n      origin: attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined,\n      links: convertSpanLinksForEnvelope(links),\n    };\n  }\n\n  // Finally, at least we have `spanContext()`....\n  // This should not actually happen in reality, but we need to handle it for type safety.\n  return {\n    span_id,\n    trace_id,\n    start_timestamp: 0,\n    data: {},\n  };\n}\n\nfunction spanIsOpenTelemetrySdkTraceBaseSpan(span: Span): span is OpenTelemetrySdkTraceBaseSpan {\n  const castSpan = span as Partial<OpenTelemetrySdkTraceBaseSpan>;\n  return !!castSpan.attributes && !!castSpan.startTime && !!castSpan.name && !!castSpan.endTime && !!castSpan.status;\n}\n\n/** Exported only for tests. */\nexport interface OpenTelemetrySdkTraceBaseSpan extends Span {\n  attributes: SpanAttributes;\n  startTime: SpanTimeInput;\n  name: string;\n  status: SpanStatus;\n  endTime: SpanTimeInput;\n  parentSpanId?: string;\n  links?: SpanLink[];\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSentrySpan(span: Span): span is SentrySpan {\n  return typeof (span as SentrySpan).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  return traceFlags === TRACE_FLAG_SAMPLED;\n}\n\n/** Get the status message to use for a JSON representation of a span. */\nexport function getStatusMessage(status: SpanStatus | undefined): string | undefined {\n  if (!status || status.code === SPAN_STATUS_UNSET) {\n    return undefined;\n  }\n\n  if (status.code === SPAN_STATUS_OK) {\n    return 'ok';\n  }\n\n  return status.message || 'unknown_error';\n}\n\nconst CHILD_SPANS_FIELD = '_sentryChildSpans';\nconst ROOT_SPAN_FIELD = '_sentryRootSpan';\n\ntype SpanWithPotentialChildren = Span & {\n  [CHILD_SPANS_FIELD]?: Set<Span>;\n  [ROOT_SPAN_FIELD]?: Span;\n};\n\n/**\n * Adds an opaque child span reference to a span.\n */\nexport function addChildSpanToSpan(span: SpanWithPotentialChildren, childSpan: Span): void {\n  // We store the root span reference on the child span\n  // We need this for `getRootSpan()` to work\n  const rootSpan = span[ROOT_SPAN_FIELD] || span;\n  addNonEnumerableProperty(childSpan as SpanWithPotentialChildren, ROOT_SPAN_FIELD, rootSpan);\n\n  // We store a list of child spans on the parent span\n  // We need this for `getSpanDescendants()` to work\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].add(childSpan);\n  } else {\n    addNonEnumerableProperty(span, CHILD_SPANS_FIELD, new Set([childSpan]));\n  }\n}\n\n/** This is only used internally by Idle Spans. */\nexport function removeChildSpanFromSpan(span: SpanWithPotentialChildren, childSpan: Span): void {\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].delete(childSpan);\n  }\n}\n\n/**\n * Returns an array of the given span and all of its descendants.\n */\nexport function getSpanDescendants(span: SpanWithPotentialChildren): Span[] {\n  const resultSet = new Set<Span>();\n\n  function addSpanChildren(span: SpanWithPotentialChildren): void {\n    // This exit condition is required to not infinitely loop in case of a circular dependency.\n    if (resultSet.has(span)) {\n      return;\n      // We want to ignore unsampled spans (e.g. non recording spans)\n    } else if (spanIsSampled(span)) {\n      resultSet.add(span);\n      const childSpans = span[CHILD_SPANS_FIELD] ? Array.from(span[CHILD_SPANS_FIELD]) : [];\n      for (const childSpan of childSpans) {\n        addSpanChildren(childSpan);\n      }\n    }\n  }\n\n  addSpanChildren(span);\n\n  return Array.from(resultSet);\n}\n\n/**\n * Returns the root span of a given span.\n */\nexport function getRootSpan(span: SpanWithPotentialChildren): Span {\n  return span[ROOT_SPAN_FIELD] || span;\n}\n\n/**\n * Returns the currently active span.\n */\nexport function getActiveSpan(): Span | undefined {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.getActiveSpan) {\n    return acs.getActiveSpan();\n  }\n\n  return _getSpanForScope(getCurrentScope());\n}\n\n/**\n * Logs a warning once if `beforeSendSpan` is used to drop spans.\n */\nexport function showSpanDropWarning(): void {\n  if (!hasShownSpanDropWarning) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Sentry] Returning null from `beforeSendSpan` is disallowed. To drop certain spans, configure the respective integrations directly.',\n      );\n    });\n    hasShownSpanDropWarning = true;\n  }\n}\n\n/**\n * Updates the name of the given span and ensures that the span name is not\n * overwritten by the Sentry SDK.\n *\n * Use this function instead of `span.updateName()` if you want to make sure that\n * your name is kept. For some spans, for example root `http.server` spans the\n * Sentry SDK would otherwise overwrite the span name with a high-quality name\n * it infers when the span ends.\n *\n * Use this function in server code or when your span is started on the server\n * and on the client (browser). If you only update a span name on the client,\n * you can also use `span.updateName()` the SDK does not overwrite the name.\n *\n * @param span - The span to update the name of.\n * @param name - The name to set on the span.\n */\nexport function updateSpanName(span: Span, name: string): void {\n  span.updateName(name);\n  span.setAttributes({\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n    [SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME]: name,\n  });\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,mDAAA;AACO,MAAM,eAAA,GAAkB;AACxB,MAAM,kBAAA,GAAqB;AAElC,IAAI,uBAAA,GAA0B,KAAK;AAEnC;;;;CAIA,GACO,SAAS,6BAA6B,CAAC,IAAI,EAAsB;IACtE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAA,EAAA,GAAa,IAAI,CAAC,WAAW,EAAE;IACjE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,KAAA,EAAM,GAAI,UAAU,CAAC,IAAI,CAAC;IAE5E,OAAO;QACL,cAAc;QACd,OAAO;QACP,QAAQ;QACR,IAAI;QACJ,EAAE;QACF,MAAM;QACN,MAAM;QACN,KAAK;IACT,CAAG;AACH;AAEA;;CAEA,GACO,SAAS,kBAAkB,CAAC,IAAI,EAAsB;IAC3D,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAA,EAAA,GAAa,IAAI,CAAC,WAAW,EAAE;IAEpE,uFAAA;IACA,wCAAA;IACE,MAAM,cAAA,GAAiB,QAAA,GAAW,MAAA,GAAS,UAAU,CAAC,IAAI,CAAC,CAAC,cAAc;IAC1E,MAAM,YAAQ,gQAAuB,EAAC,IAAI,CAAC,CAAC,KAAK;IAEjD,MAAM,OAAA,GAAU,QAAA,kDAAW,KAAK,CAAE,qBAAqB,EAAE,CAAC,iBAAA,SAAqB,kQAAc,EAAC,IAAI,MAAM;IAExG,OAAO;QACL,cAAc;QACd,OAAO;QACP,QAAQ;IACZ,CAAG;AACH;AAEA;;CAEA,GACO,SAAS,iBAAiB,CAAC,IAAI,EAAgB;IACpD,MAAM,EAAE,OAAO,EAAE,MAAA,EAAO,GAAI,IAAI,CAAC,WAAW,EAAE;IAC9C,MAAM,OAAA,GAAU,aAAa,CAAC,IAAI,CAAC;IACnC,WAAO,kQAAyB,EAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC;AAC5D;AAEA;;;;CAIA,GACO,SAAS,2BAA2B,CAAC,KAAK,EAA2C;IAC1F,IAAI,KAAA,IAAS,KAAK,CAAC,MAAA,GAAS,CAAC,EAAE;QAC7B,OAAO,KAAK,CAAC,GAAG,CAAC;gBAAC,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,WAAA,EAAa,EAAE,UAAA,EAAY;mBAAM;gBAC9F,OAAO,EAAE,MAAM;gBACf,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,UAAA,KAAe,kBAAkB;gBAC1C,UAAU;gBACV,GAAG,WAAW;YACpB,CAAK,CAAC,CAAC;;IACP,OAAS;QACL,OAAO,SAAS;IACpB;AACA;AAEA;;CAEA,GACO,SAAS,sBAAsB,CAAC,KAAK,EAAqC;IAC/E,IAAI,OAAO,KAAA,KAAU,QAAQ,EAAE;QAC7B,OAAO,wBAAwB,CAAC,KAAK,CAAC;IAC1C;IAEE,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QAC5B,qDAAA;QACI,OAAO,KAAK,CAAC,CAAC,CAAA,GAAI,KAAK,CAAC,CAAC,CAAA,GAAI,GAAG;IACpC;IAEE,IAAI,KAAA,YAAiB,IAAI,EAAE;QACzB,OAAO,wBAAwB,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACpD;IAEE,WAAO,wPAAkB,EAAE;AAC7B;AAEA;;CAEA,GACA,SAAS,wBAAwB,CAAC,SAAS,EAAkB;IAC3D,MAAM,IAAA,GAAO,SAAA,GAAY,UAAU;IACnC,OAAO,IAAA,GAAO,YAAY,IAAA,GAAO,SAAS;AAC5C;AAEA;;CAEA,GACA,+GAAA;AACA,qIAAA;AACA,sEAAA;AACO,SAAS,UAAU,CAAC,IAAI,EAAkB;IAC/C,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;QAC1B,OAAO,IAAI,CAAC,WAAW,EAAE;IAC7B;IAEE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAA,EAAA,GAAa,IAAI,CAAC,WAAW,EAAE;IAEnE,kEAAA;IACE,IAAI,mCAAmC,CAAC,IAAI,CAAC,EAAE;;QAC7C,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,KAAA,EAAM,GAAI,IAAI;QAExE,yEAAA;QACA,yDAAA;QACA,+DAAA;QACA,oFAAA;QACI,MAAM,YAAA,GACJ,kBAAkB,OACd,IAAI,CAAC,YAAA,GACL,uBAAuB,gBACpB,IAAI,CAAC,iBAAA,0CAAN,MAA6D,MAAA,GAC7D,SAAS;QAEjB,OAAO;YACL,OAAO;YACP,QAAQ;YACR,IAAI,EAAE,UAAU;YAChB,WAAW,EAAE,IAAI;YACjB,cAAc,EAAE,YAAY;YAC5B,eAAe,EAAE,sBAAsB,CAAC,SAAS,CAAC;YACxD,2FAAA;YACM,SAAS,EAAE,sBAAsB,CAAC,OAAO,CAAA,IAAK,SAAS;YACvD,MAAM,EAAE,gBAAgB,CAAC,MAAM,CAAC;YAChC,EAAE,EAAE,UAAU,CAAC,uQAA4B,CAAC;YAC5C,MAAM,EAAE,UAAU,CAAC,2QAAgC,CAAA;YACnD,KAAK,EAAE,2BAA2B,CAAC,KAAK,CAAC;QAC/C,CAAK;IACL;IAEA,gDAAA;IACA,wFAAA;IACE,OAAO;QACL,OAAO;QACP,QAAQ;QACR,eAAe,EAAE,CAAC;QAClB,IAAI,EAAE,CAAA,CAAE;IACZ,CAAG;AACH;AAEA,SAAS,mCAAmC,CAAC,IAAI,EAA+C;IAC9F,MAAM,QAAA,GAAW,IAAA;IACjB,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAA,IAAc,CAAC,CAAC,QAAQ,CAAC,SAAA,IAAa,CAAC,CAAC,QAAQ,CAAC,IAAA,IAAQ,CAAC,CAAC,QAAQ,CAAC,OAAA,IAAW,CAAC,CAAC,QAAQ,CAAC,MAAM;AACpH;AAEA,6BAAA,GAWA;;;CAGA,GACA,SAAS,gBAAgB,CAAC,IAAI,EAA4B;IACxD,OAAO,OAAO,AAAC,IAAA,CAAoB,WAAA,KAAgB,UAAU;AAC/D;AAEA;;;;;CAKA,GACO,SAAS,aAAa,CAAC,IAAI,EAAiB;IACnD,2DAAA;IACA,qDAAA;IACE,MAAM,EAAE,UAAA,EAAW,GAAI,IAAI,CAAC,WAAW,EAAE;IACzC,OAAO,UAAA,KAAe,kBAAkB;AAC1C;AAEA,uEAAA,GACO,SAAS,gBAAgB,CAAC,MAAM,EAA8C;IACnF,IAAI,CAAC,MAAA,IAAU,MAAM,CAAC,IAAA,KAAS,+PAAiB,EAAE;QAChD,OAAO,SAAS;IACpB;IAEE,IAAI,MAAM,CAAC,IAAA,KAAS,4PAAc,EAAE;QAClC,OAAO,IAAI;IACf;IAEE,OAAO,MAAM,CAAC,OAAA,IAAW,eAAe;AAC1C;AAEA,MAAM,iBAAA,GAAoB,mBAAmB;AAC7C,MAAM,eAAA,GAAkB,iBAAiB;AAOzC;;CAEA,GACO,SAAS,kBAAkB,CAAC,IAAI,EAA6B,SAAS,EAAc;IAC3F,qDAAA;IACA,2CAAA;IACE,MAAM,WAAW,IAAI,CAAC,eAAe,CAAA,IAAK,IAAI;QAC9C,gQAAwB,EAAC,SAAA,EAAwC,eAAe,EAAE,QAAQ,CAAC;IAE7F,oDAAA;IACA,kDAAA;IACE,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAAE;QAC3B,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC;IAC1C,OAAS;YACL,gQAAwB,EAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,GAAG,CAAC;YAAC,SAAS;SAAC,CAAC,CAAC;IAC3E;AACA;AAEA,gDAAA,GACO,SAAS,uBAAuB,CAAC,IAAI,EAA6B,SAAS,EAAc;IAC9F,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAAE;QAC3B,IAAI,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;IAC7C;AACA;AAEA;;CAEA,GACO,SAAS,kBAAkB,CAAC,IAAI,EAAqC;IAC1E,MAAM,SAAA,GAAY,IAAI,GAAG,EAAQ;IAEjC,SAAS,eAAe,CAAC,IAAI,EAAmC;QAClE,2FAAA;QACI,IAAI,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACvB;QACN,+DAAA;QACA,CAAI,MAAO,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;YAC9B,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC;YACnB,MAAM,UAAA,GAAa,IAAI,CAAC,iBAAiB,CAAA,GAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA,GAAI,EAAE;YACrF,KAAK,MAAM,SAAA,IAAa,UAAU,CAAE;gBAClC,eAAe,CAAC,SAAS,CAAC;YAClC;QACA;IACA;IAEE,eAAe,CAAC,IAAI,CAAC;IAErB,OAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;AAC9B;AAEA;;CAEA,GACO,SAAS,WAAW,CAAC,IAAI,EAAmC;IACjE,OAAO,IAAI,CAAC,eAAe,CAAA,IAAK,IAAI;AACtC;AAEA;;CAEA,GACO,SAAS,aAAa,GAAqB;IAChD,MAAM,OAAA,OAAU,8OAAc,EAAE;IAChC,MAAM,GAAA,OAAM,qQAAuB,EAAC,OAAO,CAAC;IAC5C,IAAI,GAAG,CAAC,aAAa,EAAE;QACrB,OAAO,GAAG,CAAC,aAAa,EAAE;IAC9B;IAEE,WAAO,6PAAgB,MAAC,qPAAe,EAAE,CAAC;AAC5C;AAEA;;CAEA,GACO,SAAS,mBAAmB,GAAS;IAC1C,IAAI,CAAC,uBAAuB,EAAE;YAC5B,+PAAc,EAAC,MAAM;YACzB,sCAAA;YACM,OAAO,CAAC,IAAI,CACV,qIAAqI;QAE7I,CAAK,CAAC;QACF,uBAAA,GAA0B,IAAI;IAClC;AACA;AAEA;;;;;;;;;;;;;;;CAeA,GACO,SAAS,cAAc,CAAC,IAAI,EAAQ,IAAI,EAAgB;IAC7D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;IACrB,IAAI,CAAC,aAAa,CAAC;QACjB,CAAC,2QAAgC,CAAA,EAAG,QAAQ;QAC5C,CAAC,qRAA0C,CAAA,EAAG,IAAI;IACtD,CAAG,CAAC;AACJ","debugId":null}},
    {"offset": {"line": 3672, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/tracing/dynamicSamplingContext.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/tracing/dynamicSamplingContext.ts"],"sourcesContent":["import type { Client } from '../client';\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient } from '../currentScopes';\nimport type { Scope } from '../scope';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE,\n  SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n} from '../semanticAttributes';\nimport type { DynamicSamplingContext } from '../types-hoist/envelope';\nimport type { Span } from '../types-hoist/span';\nimport { baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader } from '../utils/baggage';\nimport { extractOrgIdFromClient } from '../utils/dsn';\nimport { hasSpansEnabled } from '../utils/hasSpansEnabled';\nimport { addNonEnumerableProperty } from '../utils/object';\nimport { getRootSpan, spanIsSampled, spanToJSON } from '../utils/spanUtils';\nimport { getCapturedScopesOnSpan } from './utils';\n\n/**\n * If you change this value, also update the terser plugin config to\n * avoid minification of the object property!\n */\nconst FROZEN_DSC_FIELD = '_frozenDsc';\n\ntype SpanWithMaybeDsc = Span & {\n  [FROZEN_DSC_FIELD]?: Partial<DynamicSamplingContext> | undefined;\n};\n\n/**\n * Freeze the given DSC on the given span.\n */\nexport function freezeDscOnSpan(span: Span, dsc: Partial<DynamicSamplingContext>): void {\n  const spanWithMaybeDsc = span as SpanWithMaybeDsc;\n  addNonEnumerableProperty(spanWithMaybeDsc, FROZEN_DSC_FIELD, dsc);\n}\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(trace_id: string, client: Client): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n\n  // Instead of conditionally adding non-undefined values, we add them and then remove them if needed\n  // otherwise, the order of baggage entries changes, which \"breaks\" a bunch of tests etc.\n  const dsc: DynamicSamplingContext = {\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    public_key,\n    trace_id,\n    org_id: extractOrgIdFromClient(client),\n  };\n\n  client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * Get the dynamic sampling context for the currently active scopes.\n */\nexport function getDynamicSamplingContextFromScope(client: Client, scope: Scope): Partial<DynamicSamplingContext> {\n  const propagationContext = scope.getPropagationContext();\n  return propagationContext.dsc || getDynamicSamplingContextFromClient(propagationContext.traceId, client);\n}\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  const rootSpan = getRootSpan(span);\n  const rootSpanJson = spanToJSON(rootSpan);\n  const rootSpanAttributes = rootSpanJson.data;\n  const traceState = rootSpan.spanContext().traceState;\n\n  // The span sample rate that was locally applied to the root span should also always be applied to the DSC, even if the DSC is frozen.\n  // This is so that the downstream traces/services can use parentSampleRate in their `tracesSampler` to make consistent sampling decisions across the entire trace.\n  const rootSpanSampleRate =\n    traceState?.get('sentry.sample_rate') ??\n    rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] ??\n    rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE];\n\n  function applyLocalSampleRateToDsc(dsc: Partial<DynamicSamplingContext>): Partial<DynamicSamplingContext> {\n    if (typeof rootSpanSampleRate === 'number' || typeof rootSpanSampleRate === 'string') {\n      dsc.sample_rate = `${rootSpanSampleRate}`;\n    }\n    return dsc;\n  }\n\n  // For core implementation, we freeze the DSC onto the span as a non-enumerable property\n  const frozenDsc = (rootSpan as SpanWithMaybeDsc)[FROZEN_DSC_FIELD];\n  if (frozenDsc) {\n    return applyLocalSampleRateToDsc(frozenDsc);\n  }\n\n  // For OpenTelemetry, we freeze the DSC on the trace state\n  const traceStateDsc = traceState?.get('sentry.dsc');\n\n  // If the span has a DSC, we want it to take precedence\n  const dscOnTraceState = traceStateDsc && baggageHeaderToDynamicSamplingContext(traceStateDsc);\n\n  if (dscOnTraceState) {\n    return applyLocalSampleRateToDsc(dscOnTraceState);\n  }\n\n  // Else, we generate it from the span\n  const dsc = getDynamicSamplingContextFromClient(span.spanContext().traceId, client);\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const source = rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  const name = rootSpanJson.description;\n  if (source !== 'url' && name) {\n    dsc.transaction = name;\n  }\n\n  // How can we even land here with hasSpansEnabled() returning false?\n  // Otel creates a Non-recording span in Tracing Without Performance mode when handling incoming requests\n  // So we end up with an active span that is not sampled (neither positively nor negatively)\n  if (hasSpansEnabled()) {\n    dsc.sampled = String(spanIsSampled(rootSpan));\n    dsc.sample_rand =\n      // In OTEL we store the sample rand on the trace state because we cannot access scopes for NonRecordingSpans\n      // The Sentry OTEL SpanSampler takes care of writing the sample rand on the root span\n      traceState?.get('sentry.sample_rand') ??\n      // On all other platforms we can actually get the scopes from a root span (we use this as a fallback)\n      getCapturedScopesOnSpan(rootSpan).scope?.getPropagationContext().sampleRand.toString();\n  }\n\n  applyLocalSampleRateToDsc(dsc);\n\n  client.emit('createDsc', dsc, rootSpan);\n\n  return dsc;\n}\n\n/**\n * Convert a Span to a baggage header.\n */\nexport function spanToBaggageHeader(span: Span): string | undefined {\n  const dsc = getDynamicSamplingContextFromSpan(span);\n  return dynamicSamplingContextToSentryBaggageHeader(dsc);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3811, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/applyScopeDataToEvent.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/applyScopeDataToEvent.ts"],"sourcesContent":["import type { ScopeData } from '../scope';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport type { Breadcrumb } from '../types-hoist/breadcrumb';\nimport type { Event } from '../types-hoist/event';\nimport type { Span } from '../types-hoist/span';\nimport { merge } from './merge';\nimport { getRootSpan, spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n\n  data.sdkProcessingMetadata = merge(data.sdkProcessingMetadata, sdkProcessingMetadata, 2);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  data[prop] = merge(data[prop], mergeVal, 1);\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const { extra, tags, user, contexts, level, transactionName } = data;\n\n  if (Object.keys(extra).length) {\n    event.extra = { ...extra, ...event.extra };\n  }\n\n  if (Object.keys(tags).length) {\n    event.tags = { ...tags, ...event.tags };\n  }\n\n  if (Object.keys(user).length) {\n    event.user = { ...user, ...event.user };\n  }\n\n  if (Object.keys(contexts).length) {\n    event.contexts = { ...contexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  // transaction events get their `transaction` from the root span name\n  if (transactionName && event.type !== 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = {\n    trace: spanToTraceContext(span),\n    ...event.contexts,\n  };\n\n  event.sdkProcessingMetadata = {\n    dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n    ...event.sdkProcessingMetadata,\n  };\n\n  const rootSpan = getRootSpan(span);\n  const transactionName = spanToJSON(rootSpan).description;\n  if (transactionName && !event.transaction && event.type === 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint\n    ? Array.isArray(event.fingerprint)\n      ? event.fingerprint\n      : [event.fingerprint]\n    : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (!event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3977, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/debug-ids.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/debug-ids.ts"],"sourcesContent":["import type { DebugImage } from '../types-hoist/debugMeta';\nimport type { StackParser } from '../types-hoist/stacktrace';\nimport { GLOBAL_OBJ } from './worldwide';\n\ntype StackString = string;\ntype CachedResult = [string, string];\n\nlet parsedStackResults: Record<StackString, CachedResult> | undefined;\nlet lastKeysCount: number | undefined;\nlet cachedFilenameDebugIds: Record<string, string> | undefined;\n\n/**\n * Returns a map of filenames to debug identifiers.\n */\nexport function getFilenameToDebugIdMap(stackParser: StackParser): Record<string, string> {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n  if (!debugIdMap) {\n    return {};\n  }\n\n  const debugIdKeys = Object.keys(debugIdMap);\n\n  // If the count of registered globals hasn't changed since the last call, we\n  // can just return the cached result.\n  if (cachedFilenameDebugIds && debugIdKeys.length === lastKeysCount) {\n    return cachedFilenameDebugIds;\n  }\n\n  lastKeysCount = debugIdKeys.length;\n\n  // Build a map of filename -> debug_id.\n  cachedFilenameDebugIds = debugIdKeys.reduce<Record<string, string>>((acc, stackKey) => {\n    if (!parsedStackResults) {\n      parsedStackResults = {};\n    }\n\n    const result = parsedStackResults[stackKey];\n\n    if (result) {\n      acc[result[0]] = result[1];\n    } else {\n      const parsedStack = stackParser(stackKey);\n\n      for (let i = parsedStack.length - 1; i >= 0; i--) {\n        const stackFrame = parsedStack[i];\n        const filename = stackFrame?.filename;\n        const debugId = debugIdMap[stackKey];\n\n        if (filename && debugId) {\n          acc[filename] = debugId;\n          parsedStackResults[stackKey] = [filename, debugId];\n          break;\n        }\n      }\n    }\n\n    return acc;\n  }, {});\n\n  return cachedFilenameDebugIds;\n}\n\n/**\n * Returns a list of debug images for the given resources.\n */\nexport function getDebugImagesForResources(\n  stackParser: StackParser,\n  resource_paths: ReadonlyArray<string>,\n): DebugImage[] {\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  if (!filenameDebugIdMap) {\n    return [];\n  }\n\n  const images: DebugImage[] = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] as string,\n      });\n    }\n  }\n\n  return images;\n}\n"],"names":[],"mappings":";;;;;;;;AAOA,IAAI,kBAAkB;AACtB,IAAI,aAAa;AACjB,IAAI,sBAAsB;AAE1B;;CAEA,GACO,SAAS,uBAAuB,CAAC,WAAW,EAAuC;IACxF,MAAM,UAAA,GAAa,qPAAU,CAAC,eAAe;IAC7C,IAAI,CAAC,UAAU,EAAE;QACf,OAAO,CAAA,CAAE;IACb;IAEE,MAAM,cAAc,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAE7C,4EAAA;IACA,qCAAA;IACE,IAAI,sBAAA,IAA0B,WAAW,CAAC,MAAA,KAAW,aAAa,EAAE;QAClE,OAAO,sBAAsB;IACjC;IAEE,aAAA,GAAgB,WAAW,CAAC,MAAM;IAEpC,uCAAA;IACE,sBAAA,GAAyB,WAAW,CAAC,MAAM,CAAyB,CAAC,GAAG,EAAE,QAAQ,KAAK;QACrF,IAAI,CAAC,kBAAkB,EAAE;YACvB,kBAAA,GAAqB,CAAA,CAAE;QAC7B;QAEI,MAAM,MAAA,GAAS,kBAAkB,CAAC,QAAQ,CAAC;QAE3C,IAAI,MAAM,EAAE;YACV,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA,GAAI,MAAM,CAAC,CAAC,CAAC;QAChC,OAAW;YACL,MAAM,WAAA,GAAc,WAAW,CAAC,QAAQ,CAAC;YAEzC,IAAK,IAAI,CAAA,GAAI,WAAW,CAAC,MAAA,GAAS,CAAC,EAAE,CAAA,IAAK,CAAC,EAAE,CAAC,EAAE,CAAE;gBAChD,MAAM,UAAA,GAAa,WAAW,CAAC,CAAC,CAAC;gBACjC,MAAM,QAAA,2DAAW,UAAU,CAAE,QAAQ;gBACrC,MAAM,OAAA,GAAU,UAAU,CAAC,QAAQ,CAAC;gBAEpC,IAAI,QAAA,IAAY,OAAO,EAAE;oBACvB,GAAG,CAAC,QAAQ,CAAA,GAAI,OAAO;oBACvB,kBAAkB,CAAC,QAAQ,CAAA,GAAI;wBAAC,QAAQ;wBAAE,OAAO;qBAAC;oBAClD;gBACV;YACA;QACA;QAEI,OAAO,GAAG;IACd,CAAG,EAAE,CAAA,CAAE,CAAC;IAEN,OAAO,sBAAsB;AAC/B;AAEA;;CAEA,GACO,SAAS,0BAA0B,CACxC,WAAW,EACX,cAAc;IAEd,MAAM,kBAAA,GAAqB,uBAAuB,CAAC,WAAW,CAAC;IAE/D,IAAI,CAAC,kBAAkB,EAAE;QACvB,OAAO,EAAE;IACb;IAEE,MAAM,MAAM,GAAiB,EAAE;IAC/B,KAAK,MAAM,IAAA,IAAQ,cAAc,CAAE;QACjC,IAAI,IAAA,IAAQ,kBAAkB,CAAC,IAAI,CAAC,EAAE;YACpC,MAAM,CAAC,IAAI,CAAC;gBACV,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,IAAI;gBACf,QAAQ,EAAE,kBAAkB,CAAC,IAAI,CAAA;YACzC,CAAO,CAAC;QACR;IACA;IAEE,OAAO,MAAM;AACf","debugId":null}},
    {"offset": {"line": 4055, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/stacktrace.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/stacktrace.ts"],"sourcesContent":["import type { Event } from '../types-hoist/event';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport type { StackLineParser, StackParser } from '../types-hoist/stacktrace';\n\nconst STACKTRACE_FRAME_LIMIT = 50;\nexport const UNKNOWN_FUNCTION = '?';\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirstLines: number = 0, framesToPop: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      let line = lines[i] as string;\n      // Truncate lines over 1kb because many of the regular expressions use\n      // backtracking which results in run time that increases exponentially\n      // with input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        line = line.slice(0, 1024);\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT + framesToPop) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames.slice(framesToPop));\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the scope itself, making it:\n    //\n    //   Sentry.captureException()\n    //   scope.captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || getLastStackFrame(localStack).filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }));\n}\n\nfunction getLastStackFrame(arr: StackFrame[]): StackFrame {\n  return arr[arr.length - 1] || {};\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Get's stack frames from an event without needing to check for undefined properties.\n */\nexport function getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    const frames: StackFrame[] = [];\n    try {\n      // @ts-expect-error Object could be undefined\n      exception.values.forEach(value => {\n        // @ts-expect-error Value could be undefined\n        if (value.stacktrace.frames) {\n          // @ts-expect-error Value could be undefined\n          frames.push(...value.stacktrace.frames);\n        }\n      });\n      return frames;\n    } catch {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4214, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/normalize.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/normalize.ts"],"sourcesContent":["import type { Primitive } from '../types-hoist/misc';\nimport { isSyntheticEvent, isVueViewModel } from './is';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor?: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\ntype MemoFunc = [\n  // memoize\n  (obj: object) => boolean,\n  // unmemoize\n  (obj: object) => void,\n];\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normalized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    ['boolean', 'string'].includes(typeof value) ||\n    (typeof value === 'number' && Number.isFinite(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && !Number.isFinite(value)) {\n      return `[${value}]`;\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype?.constructor ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder(): MemoFunc {\n  const inner = new WeakSet<object>();\n  function memoize(obj: object): boolean {\n    if (inner.has(obj)) {\n      return true;\n    }\n    inner.add(obj);\n    return false;\n  }\n\n  function unmemoize(obj: object): void {\n    inner.delete(obj);\n  }\n  return [memoize, unmemoize];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4475, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/utils/prepareEvent.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/utils/prepareEvent.ts"],"sourcesContent":["import type { Client } from '../client';\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalScope } from '../currentScopes';\nimport { notifyEventProcessors } from '../eventProcessors';\nimport type { CaptureContext, ScopeContext } from '../scope';\nimport { Scope } from '../scope';\nimport type { Event, EventHint } from '../types-hoist/event';\nimport type { ClientOptions } from '../types-hoist/options';\nimport type { StackParser } from '../types-hoist/stacktrace';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { getFilenameToDebugIdMap } from './debug-ids';\nimport { addExceptionMechanism, uuid4 } from './misc';\nimport { normalize } from './normalize';\nimport { truncate } from './string';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  if (client) {\n    client.emit('applyFrameMetadata', event);\n  }\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Scope.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n * Enhances event using the client configuration.\n * It takes care of all \"static\" values like environment, release and `dist`,\n * as well as truncating overly long values.\n *\n * Only exported for tests.\n *\n * @param event event instance to be enhanced\n */\nexport function applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  // empty strings do not make sense for environment, release, and dist\n  // so we handle them the same as if they were not provided\n  event.environment = event.environment || environment || DEFAULT_ENVIRONMENT;\n\n  if (!event.release && release) {\n    event.release = release;\n  }\n\n  if (!event.dist && dist) {\n    event.dist = dist;\n  }\n\n  const request = event.request;\n  if (request?.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  event.exception?.values?.forEach(exception => {\n    exception.stacktrace?.frames?.forEach(frame => {\n      if (frame.filename) {\n        frame.debug_id = filenameDebugIdMap[frame.filename];\n      }\n    });\n  });\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  event.exception?.values?.forEach(exception => {\n    exception.stacktrace?.frames?.forEach(frame => {\n      if (frame.debug_id) {\n        if (frame.abs_path) {\n          filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n        } else if (frame.filename) {\n          filenameDebugIdMap[frame.filename] = frame.debug_id;\n        }\n        delete frame.debug_id;\n      }\n    });\n  });\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.entries(filenameDebugIdMap).forEach(([filename, debug_id]) => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id,\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts?.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      return {\n        ...span,\n        ...(span.data && {\n          data: normalize(span.data, depth, maxBreadth),\n        }),\n      };\n    });\n  }\n\n  // event.contexts.flags (FeatureFlagContext) stores context for our feature\n  // flag integrations. It has a greater nesting depth than our other typed\n  // Contexts, so we re-normalize with a fixed depth of 3 here. We do not want\n  // to skip this in case of conflicting, user-provided context.\n  if (event.contexts?.flags && normalized.contexts) {\n    normalized.contexts.flags = normalize(event.contexts.flags, 3, maxBreadth);\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(hint: CaptureContext | EventHint): hint is Scope | ((scope: Scope) => Scope) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4792, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@sentry+core@10.5.0/node_modules/@sentry/core/build/esm/exports.js","sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/%40sentry%2Bcore%4010.5.0/node_modules/%40sentry/core/src/exports.ts"],"sourcesContent":["import { getClient, getCurrentScope, getIsolationScope, withIsolationScope } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { CaptureContext } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { CheckIn, FinishedCheckIn, MonitorConfig } from './types-hoist/checkin';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport type { Extra, Extras } from './types-hoist/extra';\nimport type { Primitive } from './types-hoist/misc';\nimport type { Session, SessionContext } from './types-hoist/session';\nimport type { SeverityLevel } from './types-hoist/severity';\nimport type { User } from './types-hoist/user';\nimport { debug } from './utils/debug-logger';\nimport { isThenable } from './utils/is';\nimport { uuid4 } from './utils/misc';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { timestampInSeconds } from './utils/time';\nimport { GLOBAL_OBJ } from './utils/worldwide';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(exception: unknown, hint?: ExclusiveEventHintOrCaptureContext): string {\n  return getCurrentScope().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(message: string, captureContext?: CaptureContext | SeverityLevel): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentScope().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  return getCurrentScope().captureEvent(event, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nexport function setContext(name: string, context: { [key: string]: unknown } | null): void {\n  getIsolationScope().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras: Extras): void {\n  getIsolationScope().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key: string, extra: Extra): void {\n  getIsolationScope().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags: { [key: string]: Primitive }): void {\n  getIsolationScope().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key: string, value: Primitive): void {\n  getIsolationScope().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user: User | null): void {\n  getIsolationScope().setUser(user);\n}\n\n/**\n * The last error event id of the isolation scope.\n *\n * Warning: This function really returns the last recorded error event id on the current\n * isolation scope. If you call this function after handling a certain error and another error\n * is captured in between, the last one is returned instead of the one you might expect.\n * Also, ids of events that were never sent to Sentry (for example because\n * they were dropped in `beforeSend`) could be returned.\n *\n * @returns The last event id of the isolation scope.\n */\nexport function lastEventId(): string | undefined {\n  return getIsolationScope().lastEventId();\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && debug.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && debug.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param callback Callback to be monitored\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  return withIsolationScope(() => {\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback();\n    } catch (e) {\n      finishCheckIn('error');\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      return maybePromiseResult.then(\n        r => {\n          finishCheckIn('ok');\n          return r;\n        },\n        e => {\n          finishCheckIn('error');\n          throw e;\n        },\n      ) as T;\n    }\n    finishCheckIn('ok');\n\n    return maybePromiseResult;\n  });\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && debug.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && debug.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/** If the SDK is initialized & enabled. */\nexport function isEnabled(): boolean {\n  const client = getClient();\n  return client?.getOptions().enabled !== false && !!client?.getTransport();\n}\n\n/**\n * Add an event processor.\n * This will be added to the current isolation scope, ensuring any event that is processed in the current execution\n * context will have the processor applied.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  getIsolationScope().addEventProcessor(callback);\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession?.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const client = getClient();\n  const session = isolationScope.getSession();\n  if (session && client) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5121, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/shared/lib/side-effect.tsx"],"sourcesContent":["import type React from 'react'\nimport { Children, useEffect, useLayoutEffect, type JSX } from 'react'\n\ntype State = JSX.Element[] | undefined\n\nexport type SideEffectProps = {\n  reduceComponentsToState: <T extends {}>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n  children: React.ReactNode\n}\n\nconst isServer = typeof window === 'undefined'\nconst useClientOnlyLayoutEffect = isServer ? () => {} : useLayoutEffect\nconst useClientOnlyEffect = isServer ? () => {} : useEffect\n\nexport default function SideEffect(props: SideEffectProps) {\n  const { headManager, reduceComponentsToState } = props\n\n  function emitChange() {\n    if (headManager && headManager.mountedInstances) {\n      const headElements = Children.toArray(\n        Array.from(headManager.mountedInstances as Set<React.ReactNode>).filter(\n          Boolean\n        )\n      ) as React.ReactElement[]\n      headManager.updateHead(reduceComponentsToState(headElements, props))\n    }\n  }\n\n  if (isServer) {\n    headManager?.mountedInstances?.add(props.children)\n    emitChange()\n  }\n\n  useClientOnlyLayoutEffect(() => {\n    headManager?.mountedInstances?.add(props.children)\n    return () => {\n      headManager?.mountedInstances?.delete(props.children)\n    }\n  })\n\n  // We need to call `updateHead` method whenever the `SideEffect` is trigger in all\n  // life-cycles: mount, update, unmount. However, if there are multiple `SideEffect`s\n  // being rendered, we only trigger the method from the last one.\n  // This is ensured by keeping the last unflushed `updateHead` in the `_pendingUpdate`\n  // singleton in the layout effect pass, and actually trigger it in the effect pass.\n  useClientOnlyLayoutEffect(() => {\n    if (headManager) {\n      headManager._pendingUpdate = emitChange\n    }\n    return () => {\n      if (headManager) {\n        headManager._pendingUpdate = emitChange\n      }\n    }\n  })\n\n  useClientOnlyEffect(() => {\n    if (headManager && headManager._pendingUpdate) {\n      headManager._pendingUpdate()\n      headManager._pendingUpdate = null\n    }\n    return () => {\n      if (headManager && headManager._pendingUpdate) {\n        headManager._pendingUpdate()\n        headManager._pendingUpdate = null\n      }\n    }\n  })\n\n  return null\n}\n"],"names":["SideEffect","isServer","window","useClientOnlyLayoutEffect","useLayoutEffect","useClientOnlyEffect","useEffect","props","headManager","reduceComponentsToState","emitChange","mountedInstances","headElements","Children","toArray","Array","from","filter","Boolean","updateHead","add","children","delete","_pendingUpdate"],"mappings":";;;+BAoBA,WAAA;;;eAAwBA;;;uBAnBuC;AAe/D,MAAMC,WAAW,OAAOC,WAAW;AACnC,MAAMC,4BAA4BF,WAAW,KAAO,IAAIG,OAAAA,eAAe;AACvE,MAAMC,sBAAsBJ,WAAW,KAAO,IAAIK,OAAAA,SAAS;AAE5C,SAASN,WAAWO,KAAsB;IACvD,MAAM,EAAEC,WAAW,EAAEC,uBAAuB,EAAE,GAAGF;IAEjD,SAASG;QACP,IAAIF,eAAeA,YAAYG,gBAAgB,EAAE;YAC/C,MAAMC,eAAeC,OAAAA,QAAQ,CAACC,OAAO,CACnCC,MAAMC,IAAI,CAACR,YAAYG,gBAAgB,EAA0BM,MAAM,CACrEC;YAGJV,YAAYW,UAAU,CAACV,wBAAwBG,cAAcL;QAC/D;IACF;IAEA,IAAIN,UAAU;YACZO;QAAAA,eAAAA,OAAAA,KAAAA,IAAAA,CAAAA,gCAAAA,YAAaG,gBAAgB,KAAA,OAAA,KAAA,IAA7BH,8BAA+BY,GAAG,CAACb,MAAMc,QAAQ;QACjDX;IACF;IAEAP;gDAA0B;gBACxBK;YAAAA,eAAAA,OAAAA,KAAAA,IAAAA,CAAAA,gCAAAA,YAAaG,gBAAgB,KAAA,OAAA,KAAA,IAA7BH,8BAA+BY,GAAG,CAACb,MAAMc,QAAQ;YACjD;wDAAO;wBACLb;oBAAAA,eAAAA,OAAAA,KAAAA,IAAAA,CAAAA,gCAAAA,YAAaG,gBAAgB,KAAA,OAAA,KAAA,IAA7BH,8BAA+Bc,MAAM,CAACf,MAAMc,QAAQ;gBACtD;;QACF;;IAEA,kFAAkF;IAClF,oFAAoF;IACpF,gEAAgE;IAChE,qFAAqF;IACrF,mFAAmF;IACnFlB;gDAA0B;YACxB,IAAIK,aAAa;gBACfA,YAAYe,cAAc,GAAGb;YAC/B;YACA;wDAAO;oBACL,IAAIF,aAAa;wBACfA,YAAYe,cAAc,GAAGb;oBAC/B;gBACF;;QACF;;IAEAL;0CAAoB;YAClB,IAAIG,eAAeA,YAAYe,cAAc,EAAE;gBAC7Cf,YAAYe,cAAc;gBAC1Bf,YAAYe,cAAc,GAAG;YAC/B;YACA;kDAAO;oBACL,IAAIf,eAAeA,YAAYe,cAAc,EAAE;wBAC7Cf,YAAYe,cAAc;wBAC1Bf,YAAYe,cAAc,GAAG;oBAC/B;gBACF;;QACF;;IAEA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5200, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/shared/lib/amp-context.shared-runtime.ts"],"sourcesContent":["import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n"],"names":["AmpStateContext","React","createContext","process","env","NODE_ENV","displayName"],"mappings":"AAIIG,QAAQC,GAAG,CAACC,QAAQ,KAAK;;;;;+BAFhBL,mBAAAA;;;eAAAA;;;;gEAFK;AAEX,MAAMA,kBAAsCC,OAAAA,OAAK,CAACC,aAAa,CAAC,CAAC;AAExE,wCAA2C;IACzCF,gBAAgBM,WAAW,GAAG;AAChC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5221, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/shared/lib/amp-mode.ts"],"sourcesContent":["export function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n"],"names":["isInAmpMode","ampFirst","hybrid","hasQuery"],"mappings":";;;+BAAgBA,eAAAA;;;eAAAA;;;AAAT,SAASA,YAAY,KAAA;IAAA,IAAA,EAC1BC,WAAW,KAAK,EAChBC,SAAS,KAAK,EACdC,WAAW,KAAK,EACjB,GAJ2B,UAAA,KAAA,IAIxB,CAAC,IAJuB;IAK1B,OAAOF,YAAaC,UAAUC;AAChC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5238, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/shared/lib/head.tsx"],"sourcesContent":["'use client'\n\nimport React, { useContext, type JSX } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context.shared-runtime'\nimport { HeadManagerContext } from './head-manager-context.shared-runtime'\nimport { isInAmpMode } from './amp-mode'\nimport { warnOnce } from './utils/warn-once'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" key=\"charset\" />]\n  if (!inAmpMode) {\n    head.push(\n      <meta name=\"viewport\" content=\"width=device-width\" key=\"viewport\" />\n    )\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactElement | number | string\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      // @ts-expect-error @types/react does not remove fragments but this could also return ReactPortal[]\n      React.Children.toArray(child.props.children).reduce(\n        // @ts-expect-error @types/react does not remove fragments but this could also return ReactPortal[]\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactElement | number | string\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n    let hasKey = false\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      hasKey = true\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if ((metatype !== 'name' || !hasKey) && categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headChildrenElements List of children of <Head>\n */\nfunction reduceComponents<T extends {} & WithInAmpMode>(\n  headChildrenElements: Array<React.ReactElement<any>>,\n  props: T\n) {\n  const { inAmpMode } = props\n  return headChildrenElements\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(inAmpMode).reverse())\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (process.env.NODE_ENV === 'development') {\n        // omit JSON-LD structured data snippets from the warning\n        if (c.type === 'script' && c.props['type'] !== 'application/ld+json') {\n          const srcMessage = c.props['src']\n            ? `<script> tag with src=\"${c.props['src']}\"`\n            : `inline <script>`\n          warnOnce(\n            `Do not add <script> tags using next/head (see ${srcMessage}). Use next/script instead. \\nSee more info here: https://nextjs.org/docs/messages/no-script-tags-in-head-component`\n          )\n        } else if (c.type === 'link' && c.props['rel'] === 'stylesheet') {\n          warnOnce(\n            `Do not add stylesheets using next/head (see <link rel=\"stylesheet\"> tag with href=\"${c.props['href']}\"). Use Document instead. \\nSee more info here: https://nextjs.org/docs/messages/no-stylesheets-in-head-component`\n          )\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\nexport default Head\n"],"names":["defaultHead","inAmpMode","head","meta","charSet","push","name","content","onlyReactElement","list","child","type","React","Fragment","concat","Children","toArray","props","children","reduce","fragmentList","fragmentChild","METATYPES","unique","keys","Set","tags","metaTypes","metaCategories","h","isUnique","hasKey","key","indexOf","slice","has","add","i","len","length","metatype","hasOwnProperty","category","categories","reduceComponents","headChildrenElements","reverse","filter","map","c","process","env","NODE_ENV","srcMessage","warnOnce","cloneElement","Head","ampState","useContext","AmpStateContext","headManager","HeadManagerContext","Effect","reduceComponentsToState","isInAmpMode"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5412, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/server/request-meta.ts"],"sourcesContent":["/* eslint-disable no-redeclare */\nimport type { IncomingMessage } from 'http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { BaseNextRequest } from './base-http'\nimport type { CloneableBody } from './body-streams'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport type { ServerComponentsHmrCache } from './response-cache'\nimport type { PagesDevOverlayBridgeType } from '../next-devtools/userspace/pages/pages-dev-overlay-setup'\n\n// FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta')\n\nexport type NextIncomingMessage = (BaseNextRequest | IncomingMessage) & {\n  [NEXT_REQUEST_META]?: RequestMeta\n}\n\nexport interface RequestMeta {\n  /**\n   * The query that was used to make the request.\n   */\n  initQuery?: ParsedUrlQuery\n\n  /**\n   * The URL that was used to make the request.\n   */\n  initURL?: string\n\n  /**\n   * The protocol that was used to make the request.\n   */\n  initProtocol?: string\n\n  /**\n   * The body that was read from the request. This is used to allow the body to\n   * be read multiple times.\n   */\n  clonableBody?: CloneableBody\n\n  /**\n   * True when the request matched a locale domain that was configured in the\n   * next.config.js file.\n   */\n  isLocaleDomain?: boolean\n\n  /**\n   * True when the request had locale information stripped from the pathname\n   * part of the URL.\n   */\n  didStripLocale?: boolean\n\n  /**\n   * If the request had it's URL rewritten, this is the URL it was rewritten to.\n   */\n  rewroteURL?: string\n\n  /**\n   * The cookies that were added by middleware and were added to the response.\n   */\n  middlewareCookie?: string[]\n\n  /**\n   * The match on the request for a given route.\n   */\n  match?: RouteMatch\n\n  /**\n   * The incremental cache to use for the request.\n   */\n  incrementalCache?: any\n\n  /**\n   * The server components HMR cache, only for dev.\n   */\n  serverComponentsHmrCache?: ServerComponentsHmrCache\n\n  /**\n   * Equals the segment path that was used for the prefetch RSC request.\n   */\n  segmentPrefetchRSCRequest?: string\n\n  /**\n   * True when the request is for the prefetch flight data.\n   */\n  isPrefetchRSCRequest?: true\n\n  /**\n   * True when the request is for the flight data.\n   */\n  isRSCRequest?: true\n\n  /**\n   * A search param set by the Next.js client when performing RSC requests.\n   * Because some CDNs do not vary their cache entries on our custom headers,\n   * this search param represents a hash of the header values. For any cached\n   * RSC request, we should verify that the hash matches before responding.\n   * Otherwise this can lead to cache poisoning.\n   * TODO: Consider not using custom request headers at all, and instead encode\n   * everything into the search param.\n   */\n  cacheBustingSearchParam?: string\n\n  /**\n   * True when the request is for the `/_next/data` route using the pages\n   * router.\n   */\n  isNextDataReq?: true\n\n  /**\n   * Postponed state to use for resumption. If present it's assumed that the\n   * request is for a page that has postponed (there are no guarantees that the\n   * page actually has postponed though as it would incur an additional cache\n   * lookup).\n   */\n  postponed?: string\n\n  /**\n   * If provided, this will be called when a response cache entry was generated\n   * or looked up in the cache.\n   */\n  onCacheEntry?: (\n    cacheEntry: any,\n    requestMeta: any\n  ) => Promise<boolean | void> | boolean | void\n\n  /**\n   * The previous revalidate before rendering 404 page for notFound: true\n   */\n  notFoundRevalidate?: number | false\n\n  /**\n   * In development, the original source page that returned a 404.\n   */\n  developmentNotFoundSourcePage?: string\n\n  /**\n   * The path we routed to and should be invoked\n   */\n  invokePath?: string\n\n  /**\n   * The specific page output we should be matching\n   */\n  invokeOutput?: string\n\n  /**\n   * The status we are invoking the request with from routing\n   */\n  invokeStatus?: number\n\n  /**\n   * The routing error we are invoking with\n   */\n  invokeError?: Error\n\n  /**\n   * The query parsed for the invocation\n   */\n  invokeQuery?: Record<string, undefined | string | string[]>\n\n  /**\n   * Whether the request is a middleware invocation\n   */\n  middlewareInvoke?: boolean\n\n  /**\n   * Whether the request should render the fallback shell or not.\n   */\n  renderFallbackShell?: boolean\n\n  /**\n   * Whether the request is for the custom error page.\n   */\n  customErrorRender?: true\n\n  /**\n   * Whether to bubble up the NoFallbackError to the caller when a 404 is\n   * returned.\n   */\n  bubbleNoFallback?: true\n\n  /**\n   * True when the request had locale information inferred from the default\n   * locale.\n   */\n  localeInferredFromDefault?: true\n\n  /**\n   * The locale that was inferred or explicitly set for the request.\n   */\n  locale?: string\n\n  /**\n   * The default locale that was inferred or explicitly set for the request.\n   */\n  defaultLocale?: string\n\n  /**\n   * The relative project dir the server is running in from project root\n   */\n  relativeProjectDir?: string\n\n  /**\n   * The dist directory the server is currently using\n   */\n  distDir?: string\n\n  /**\n   * The query after resolving routes\n   */\n  query?: ParsedUrlQuery\n\n  /**\n   * The params after resolving routes\n   */\n  params?: ParsedUrlQuery\n\n  /**\n   * The AMP validator to use in development\n   */\n  ampValidator?: (html: string, pathname: string) => Promise<void>\n\n  /**\n   * ErrorOverlay component to use in development for pages router\n   */\n  PagesErrorDebug?: PagesDevOverlayBridgeType\n\n  /**\n   * Whether server is in minimal mode (this will be replaced with more\n   * specific flags in future)\n   */\n  minimalMode?: boolean\n\n  /**\n   * DEV only: The fallback params that should be used when validating prerenders during dev\n   */\n  devValidatingFallbackParams?: Map<string, string>\n}\n\n/**\n * Gets the request metadata. If no key is provided, the entire metadata object\n * is returned.\n *\n * @param req the request to get the metadata from\n * @param key the key to get from the metadata (optional)\n * @returns the value for the key or the entire metadata object\n */\nexport function getRequestMeta(\n  req: NextIncomingMessage,\n  key?: undefined\n): RequestMeta\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key: K\n): RequestMeta[K]\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key?: K\n): RequestMeta | RequestMeta[K] {\n  const meta = req[NEXT_REQUEST_META] || {}\n  return typeof key === 'string' ? meta[key] : meta\n}\n\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */\nexport function setRequestMeta(req: NextIncomingMessage, meta: RequestMeta) {\n  req[NEXT_REQUEST_META] = meta\n  return meta\n}\n\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */\nexport function addRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K,\n  value: RequestMeta[K]\n) {\n  const meta = getRequestMeta(request)\n  meta[key] = value\n  return setRequestMeta(request, meta)\n}\n\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */\nexport function removeRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K\n) {\n  const meta = getRequestMeta(request)\n  delete meta[key]\n  return setRequestMeta(request, meta)\n}\n\ntype NextQueryMetadata = {\n  /**\n   * The `_rsc` query parameter used for cache busting to ensure that the RSC\n   * requests do not get cached by the browser explicitly.\n   */\n  [NEXT_RSC_UNION_QUERY]?: string\n}\n\nexport type NextParsedUrlQuery = ParsedUrlQuery &\n  NextQueryMetadata & {\n    amp?: '1'\n  }\n\nexport interface NextUrlWithParsedQuery extends UrlWithParsedQuery {\n  query: NextParsedUrlQuery\n}\n"],"names":["NEXT_REQUEST_META","addRequestMeta","getRequestMeta","removeRequestMeta","setRequestMeta","Symbol","for","req","key","meta","request","value"],"mappings":"AAAA,+BAA+B;;;;;;;;;;;;;;;;;IAYlBA,iBAAiB,EAAA;eAAjBA;;IAgRGC,cAAc,EAAA;eAAdA;;IA5BAC,cAAc,EAAA;eAAdA;;IA6CAC,iBAAiB,EAAA;eAAjBA;;IA9BAC,cAAc,EAAA;eAAdA;;;AAnQT,MAAMJ,oBAAoBK,OAAOC,GAAG,CAAC;AAoPrC,SAASJ,eACdK,GAAwB,EACxBC,GAAO;IAEP,MAAMC,OAAOF,GAAG,CAACP,kBAAkB,IAAI,CAAC;IACxC,OAAO,OAAOQ,QAAQ,WAAWC,IAAI,CAACD,IAAI,GAAGC;AAC/C;AASO,SAASL,eAAeG,GAAwB,EAAEE,IAAiB;IACxEF,GAAG,CAACP,kBAAkB,GAAGS;IACzB,OAAOA;AACT;AAUO,SAASR,eACdS,OAA4B,EAC5BF,GAAM,EACNG,KAAqB;IAErB,MAAMF,OAAOP,eAAeQ;IAC5BD,IAAI,CAACD,IAAI,GAAGG;IACZ,OAAOP,eAAeM,SAASD;AACjC;AASO,SAASN,kBACdO,OAA4B,EAC5BF,GAAM;IAEN,MAAMC,OAAOP,eAAeQ;IAC5B,OAAOD,IAAI,CAACD,IAAI;IAChB,OAAOJ,eAAeM,SAASD;AACjC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5468, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/pages/_error.tsx"],"sourcesContent":["import React from 'react'\nimport Head from '../shared/lib/head'\nimport type { NextPageContext } from '../shared/lib/utils'\n\nconst statusCodes: { [code: number]: string } = {\n  400: 'Bad Request',\n  404: 'This page could not be found',\n  405: 'Method Not Allowed',\n  500: 'Internal Server Error',\n}\n\nexport type ErrorProps = {\n  statusCode: number\n  hostname?: string\n  title?: string\n  withDarkMode?: boolean\n}\n\nfunction _getInitialProps({\n  req,\n  res,\n  err,\n}: NextPageContext): Promise<ErrorProps> | ErrorProps {\n  const statusCode =\n    res && res.statusCode ? res.statusCode : err ? err.statusCode! : 404\n\n  let hostname\n\n  if (typeof window !== 'undefined') {\n    hostname = window.location.hostname\n  } else if (req) {\n    const { getRequestMeta } =\n      require('../server/request-meta') as typeof import('../server/request-meta')\n\n    const initUrl = getRequestMeta(req, 'initURL')\n    if (initUrl) {\n      const url = new URL(initUrl)\n      hostname = url.hostname\n    }\n  }\n\n  return { statusCode, hostname }\n}\n\nconst styles: Record<string, React.CSSProperties> = {\n  error: {\n    // https://github.com/sindresorhus/modern-normalize/blob/main/modern-normalize.css#L38-L52\n    fontFamily:\n      'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n    height: '100vh',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  desc: {\n    lineHeight: '48px',\n  },\n  h1: {\n    display: 'inline-block',\n    margin: '0 20px 0 0',\n    paddingRight: 23,\n    fontSize: 24,\n    fontWeight: 500,\n    verticalAlign: 'top',\n  },\n  h2: {\n    fontSize: 14,\n    fontWeight: 400,\n    lineHeight: '28px',\n  },\n  wrap: {\n    display: 'inline-block',\n  },\n}\n\n/**\n * `Error` component used for handling errors.\n */\nexport default class Error<P = {}> extends React.Component<P & ErrorProps> {\n  static displayName = 'ErrorPage'\n\n  static getInitialProps = _getInitialProps\n  static origGetInitialProps = _getInitialProps\n\n  render() {\n    const { statusCode, withDarkMode = true } = this.props\n    const title =\n      this.props.title ||\n      statusCodes[statusCode] ||\n      'An unexpected error has occurred'\n\n    return (\n      <div style={styles.error}>\n        <Head>\n          <title>\n            {statusCode\n              ? `${statusCode}: ${title}`\n              : 'Application error: a client-side exception has occurred'}\n          </title>\n        </Head>\n        <div style={styles.desc}>\n          <style\n            dangerouslySetInnerHTML={{\n              /* CSS minified from\n                body { margin: 0; color: #000; background: #fff; }\n                .next-error-h1 {\n                  border-right: 1px solid rgba(0, 0, 0, .3);\n                }\n\n                ${\n                  withDarkMode\n                    ? `@media (prefers-color-scheme: dark) {\n                  body { color: #fff; background: #000; }\n                  .next-error-h1 {\n                    border-right: 1px solid rgba(255, 255, 255, .3);\n                  }\n                }`\n                    : ''\n                }\n               */\n              __html: `body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}${\n                withDarkMode\n                  ? '@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}'\n                  : ''\n              }`,\n            }}\n          />\n\n          {statusCode ? (\n            <h1 className=\"next-error-h1\" style={styles.h1}>\n              {statusCode}\n            </h1>\n          ) : null}\n          <div style={styles.wrap}>\n            <h2 style={styles.h2}>\n              {this.props.title || statusCode ? (\n                title\n              ) : (\n                <>\n                  Application error: a client-side exception has occurred{' '}\n                  {Boolean(this.props.hostname) && (\n                    <>while loading {this.props.hostname}</>\n                  )}{' '}\n                  (see the browser console for more information)\n                </>\n              )}\n              .\n            </h2>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"],"names":["Error","statusCodes","_getInitialProps","req","res","err","statusCode","hostname","window","location","getRequestMeta","require","initUrl","url","URL","styles","error","fontFamily","height","textAlign","display","flexDirection","alignItems","justifyContent","desc","lineHeight","h1","margin","paddingRight","fontSize","fontWeight","verticalAlign","h2","wrap","React","Component","render","withDarkMode","props","title","div","style","Head","dangerouslySetInnerHTML","__html","className","Boolean","displayName","getInitialProps","origGetInitialProps"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5620, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/error.js"],"sourcesContent":["module.exports = require('./dist/pages/_error')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}