// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/callback/apple" | "/callback/deezer" | "/callback/spotify" | "/callback/youtube" | "/library/[source]/[target]" | "/library/[source]/[target]/albums" | "/library/[source]/[target]/liked" | "/library/[source]/[target]/playlist/[id]" | "/source"
type AppRouteHandlerRoutes = "/api/auth/apple" | "/api/auth/apple/callback" | "/api/auth/spotify" | "/api/auth/youtube/callback" | "/api/auth/youtube/refresh" | "/api/deezer/albums/[id]" | "/api/deezer/playlists/[id]" | "/api/deezer/playlists/[id]/tracks" | "/api/deezer/user/[id]" | "/api/spotify/refresh" | "/api/transfer/usage" | "/api/user/status" | "/api/youtube/music" | "/api/youtube/proxy"
type PageRoutes = never
type LayoutRoutes = "/" | "/library/[source]/[target]"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/auth/apple": {}
  "/api/auth/apple/callback": {}
  "/api/auth/spotify": {}
  "/api/auth/youtube/callback": {}
  "/api/auth/youtube/refresh": {}
  "/api/deezer/albums/[id]": { "id": string; }
  "/api/deezer/playlists/[id]": { "id": string; }
  "/api/deezer/playlists/[id]/tracks": { "id": string; }
  "/api/deezer/user/[id]": { "id": string; }
  "/api/spotify/refresh": {}
  "/api/transfer/usage": {}
  "/api/user/status": {}
  "/api/youtube/music": {}
  "/api/youtube/proxy": {}
  "/callback/apple": {}
  "/callback/deezer": {}
  "/callback/spotify": {}
  "/callback/youtube": {}
  "/library/[source]/[target]": { "source": string; "target": string; }
  "/library/[source]/[target]/albums": { "source": string; "target": string; }
  "/library/[source]/[target]/liked": { "source": string; "target": string; }
  "/library/[source]/[target]/playlist/[id]": { "source": string; "target": string; "id": string; }
  "/source": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/library/[source]/[target]": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
