{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/apps/web/src/env.server.mjs"],"sourcesContent":["import { z } from \"zod\";\n\n// Full server-side schema (includes secrets)\nexport const envSchema = z.object({\n  // Node Environment\n  NODE_ENV: z.enum([\"development\", \"production\", \"test\"]).default(\"development\"),\n\n  // App Configuration\n  NEXT_PUBLIC_APP_URL: z.string().url(),\n\n  // Spotify OAuth Configuration\n  NEXT_PUBLIC_SPOTIFY_CLIENT_ID: z.string().min(1),\n  SPOTIFY_CLIENT_SECRET: z.string().min(1),\n  NEXT_PUBLIC_SPOTIFY_REDIRECT_URI: z.string().url(),\n\n  // YouTube Music OAuth Configuration\n  NEXT_PUBLIC_YOUTUBE_CLIENT_ID: z.string().min(1),\n  YOUTUBE_CLIENT_SECRET: z.string().min(1),\n\n  // Sentry Configuration\n  SENTRY_AUTH_TOKEN: z.string().min(1),\n  SENTRY_ORG: z.string().min(1),\n  SENTRY_PROJECT: z.string().min(1),\n  NEXT_PUBLIC_SENTRY_DSN: z.string().url(),\n\n  // Basic Auth Configuration\n  BASIC_AUTH_USER: z.string().min(1),\n  BASIC_AUTH_PASSWORD: z.string().min(1),\n});\n\n// Server-side env: use only on the server!\nexport const env = envSchema.parse(process.env);\n\n// Note: Do NOT import this file in Edge Runtime code (middleware, edge API routes, etc.)\n// It uses Zod, which is not compatible with Edge Runtime due to dynamic code evaluation.\n"],"names":[],"mappings":";;;;;;AAAA;;AAGO,MAAM,YAAY,wOAAC,CAAC,MAAM,CAAC;IAChC,mBAAmB;IACnB,UAAU,wOAAC,CAAC,IAAI,CAAC;QAAC;QAAe;QAAc;KAAO,EAAE,OAAO,CAAC;IAEhE,oBAAoB;IACpB,qBAAqB,wOAAC,CAAC,MAAM,GAAG,GAAG;IAEnC,8BAA8B;IAC9B,+BAA+B,wOAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAC9C,uBAAuB,wOAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACtC,kCAAkC,wOAAC,CAAC,MAAM,GAAG,GAAG;IAEhD,oCAAoC;IACpC,+BAA+B,wOAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAC9C,uBAAuB,wOAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAEtC,uBAAuB;IACvB,mBAAmB,wOAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAClC,YAAY,wOAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAC3B,gBAAgB,wOAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAC/B,wBAAwB,wOAAC,CAAC,MAAM,GAAG,GAAG;IAEtC,2BAA2B;IAC3B,iBAAiB,wOAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAChC,qBAAqB,wOAAC,CAAC,MAAM,GAAG,GAAG,CAAC;AACtC;AAGO,MAAM,MAAM,UAAU,KAAK,CAAC,QAAQ,GAAG,GAE9C,yFAAyF;CACzF,yFAAyF","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/apps/web/sentry.server.config.ts"],"sourcesContent":["// This file configures the initialization of Sentry on the server.\n// The config you add here will be used whenever the server handles a request.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n\nimport { env } from \"./src/env.server.mjs\";\nimport * as Sentry from \"@sentry/nextjs\";\n\n// Only initialize Sentry if DSN is provided\nif (env.NEXT_PUBLIC_SENTRY_DSN) {\n  Sentry.init({\n    dsn: env.NEXT_PUBLIC_SENTRY_DSN,\n\n    // Define how likely traces are sampled. Adjust this value in production, or use tracesSampler for greater control.\n    tracesSampleRate: 1,\n\n    // Setting this option to true will print useful information to the console while you're setting up Sentry.\n    _experiments: { enableLogs: true },\n  });\n} else {\n  console.warn(\n    \"[Sentry] NEXT_PUBLIC_SENTRY_DSN environment variable is not set. Sentry will not report errors.\"\n  );\n}\n"],"names":[],"mappings":"AAAA,mEAAmE;AACnE,8EAA8E;AAC9E,6DAA6D;;AAE7D;AACA;;;AAEA,4CAA4C;AAC5C,IAAI,gJAAG,CAAC,sBAAsB,EAAE;IAC9B,yXAAW,CAAC;QACV,KAAK,gJAAG,CAAC,sBAAsB;QAE/B,mHAAmH;QACnH,kBAAkB;QAElB,2GAA2G;QAC3G,cAAc;YAAE,YAAY;QAAK;IACnC;AACF,OAAO;IACL,QAAQ,IAAI,CACV;AAEJ","debugId":null}}]
}