{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-server-dom-turbopack-client.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactServerDOMTurbopackClient\n"],"names":["module","exports","require","vendored","ReactServerDOMTurbopackClient"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,wQACRC,QAAQ,CAAC,YAAY,CAAEC,6BAA6B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/server/dev/hot-reloader-types.ts"],"sourcesContent":["import type { IncomingMessage, ServerResponse } from 'http'\nimport type { UrlObject } from 'url'\nimport type { Duplex } from 'stream'\nimport type { webpack } from 'next/dist/compiled/webpack/webpack'\nimport type getBaseWebpackConfig from '../../build/webpack-config'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type { Project, Update as TurbopackUpdate } from '../../build/swc/types'\nimport type { VersionInfo } from './parse-version-info'\nimport type { DebugInfo } from '../../next-devtools/shared/types'\nimport type { DevIndicatorServerState } from './dev-indicator-server-state'\nimport type { DevToolsConfig } from '../../next-devtools/dev-overlay/shared'\n\nexport const enum HMR_ACTIONS_SENT_TO_BROWSER {\n  ADDED_PAGE = 'addedPage',\n  REMOVED_PAGE = 'removedPage',\n  RELOAD_PAGE = 'reloadPage',\n  SERVER_COMPONENT_CHANGES = 'serverComponentChanges',\n  MIDDLEWARE_CHANGES = 'middlewareChanges',\n  CLIENT_CHANGES = 'clientChanges',\n  SERVER_ONLY_CHANGES = 'serverOnlyChanges',\n  SYNC = 'sync',\n  BUILT = 'built',\n  BUILDING = 'building',\n  DEV_PAGES_MANIFEST_UPDATE = 'devPagesManifestUpdate',\n  TURBOPACK_MESSAGE = 'turbopack-message',\n  SERVER_ERROR = 'serverError',\n  TURBOPACK_CONNECTED = 'turbopack-connected',\n  ISR_MANIFEST = 'isrManifest',\n  DEV_INDICATOR = 'devIndicator',\n  DEVTOOLS_CONFIG = 'devtoolsConfig',\n}\n\ninterface ServerErrorAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ERROR\n  errorJSON: string\n}\n\nexport interface TurbopackMessageAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE\n  data: TurbopackUpdate | TurbopackUpdate[]\n}\n\ninterface BuildingAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.BUILDING\n}\n\nexport interface CompilationError {\n  moduleName?: string\n  message: string\n  details?: string\n  moduleTrace?: Array<{ moduleName?: string }>\n  stack?: string\n}\nexport interface SyncAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.SYNC\n  hash: string\n  errors: ReadonlyArray<CompilationError>\n  warnings: ReadonlyArray<CompilationError>\n  versionInfo: VersionInfo\n  updatedModules?: ReadonlyArray<string>\n  debug?: DebugInfo\n  devIndicator: DevIndicatorServerState\n  devToolsConfig?: DevToolsConfig\n}\ninterface BuiltAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.BUILT\n  hash: string\n  errors: ReadonlyArray<CompilationError>\n  warnings: ReadonlyArray<CompilationError>\n  updatedModules?: ReadonlyArray<string>\n}\n\ninterface AddedPageAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.ADDED_PAGE\n  data: [page: string | null]\n}\n\ninterface RemovedPageAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.REMOVED_PAGE\n  data: [page: string | null]\n}\n\nexport interface ReloadPageAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE\n  data: string\n}\n\ninterface ServerComponentChangesAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES\n  hash: string\n}\n\ninterface MiddlewareChangesAction {\n  event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES\n}\n\ninterface ClientChangesAction {\n  event: HMR_ACTIONS_SENT_TO_BROWSER.CLIENT_CHANGES\n}\n\ninterface ServerOnlyChangesAction {\n  event: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ONLY_CHANGES\n  pages: ReadonlyArray<string>\n}\n\ninterface DevPagesManifestUpdateAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.DEV_PAGES_MANIFEST_UPDATE\n  data: [\n    {\n      devPagesManifest: true\n    },\n  ]\n}\n\nexport interface TurbopackConnectedAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED\n  data: { sessionId: number }\n}\n\nexport interface AppIsrManifestAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.ISR_MANIFEST\n  data: Record<string, boolean>\n}\n\nexport interface DevToolsConfigAction {\n  action: HMR_ACTIONS_SENT_TO_BROWSER.DEVTOOLS_CONFIG\n  data: DevToolsConfig\n}\n\nexport type HMR_ACTION_TYPES =\n  | TurbopackMessageAction\n  | TurbopackConnectedAction\n  | BuildingAction\n  | SyncAction\n  | BuiltAction\n  | AddedPageAction\n  | RemovedPageAction\n  | ReloadPageAction\n  | ServerComponentChangesAction\n  | ClientChangesAction\n  | MiddlewareChangesAction\n  | ServerOnlyChangesAction\n  | DevPagesManifestUpdateAction\n  | ServerErrorAction\n  | AppIsrManifestAction\n  | DevToolsConfigAction\n\nexport type TurbopackMsgToBrowser =\n  | { type: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE; data: any }\n  | {\n      type: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED\n      data: { sessionId: number }\n    }\n\nexport interface NextJsHotReloaderInterface {\n  turbopackProject?: Project\n  activeWebpackConfigs?: Array<Awaited<ReturnType<typeof getBaseWebpackConfig>>>\n  serverStats: webpack.Stats | null\n  edgeServerStats: webpack.Stats | null\n  run(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl: UrlObject\n  ): Promise<{ finished?: true }>\n\n  setHmrServerError(error: Error | null): void\n  clearHmrServerError(): void\n  start(): Promise<void>\n  send(action: HMR_ACTION_TYPES): void\n  getCompilationErrors(page: string): Promise<any[]>\n  onHMR(\n    req: IncomingMessage,\n    _socket: Duplex,\n    head: Buffer,\n    onUpgrade: (client: { send(data: string): void }) => void\n  ): void\n  invalidate({\n    reloadAfterInvalidation,\n  }: {\n    reloadAfterInvalidation: boolean\n  }): Promise<void> | void\n  buildFallbackError(): Promise<void>\n  ensurePage({\n    page,\n    clientOnly,\n    appPaths,\n    definition,\n    isApp,\n    url,\n  }: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    isApp?: boolean\n    definition: RouteDefinition | undefined\n    url?: string\n  }): Promise<void>\n  close(): void\n}\n"],"names":["HMR_ACTIONS_SENT_TO_BROWSER"],"mappings":";;;+BAYkBA,+BAAAA;;;eAAAA;;;AAAX,IAAWA,8BAAAA,WAAAA,GAAAA,SAAAA,2BAAAA;;;;;;;;;;;;;;;;;;WAAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/server/route-modules/app-page/vendored/contexts/amp-context.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].AmpContext\n"],"names":["module","exports","require","vendored","AmpContext"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,wQACRC,QAAQ,CAAC,WAAW,CAACC,UAAU","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/server/route-modules/app-page/vendored/contexts/image-config-context.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].ImageConfigContext\n"],"names":["module","exports","require","vendored","ImageConfigContext"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,wQACRC,QAAQ,CAAC,WAAW,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/server/route-modules/app-page/vendored/contexts/router-context.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].RouterContext\n"],"names":["module","exports","require","vendored","RouterContext"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,wQACRC,QAAQ,CAAC,WAAW,CAACC,aAAa","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/next-devtools/userspace/use-app-dev-rendering-indicator.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useTransition } from 'react'\nimport { dispatcher } from 'next/dist/compiled/next-devtools'\n\nexport const useAppDevRenderingIndicator = () => {\n  const [isPending, startTransition] = useTransition()\n\n  useEffect(() => {\n    if (isPending) {\n      dispatcher.renderingIndicatorShow()\n    } else {\n      dispatcher.renderingIndicatorHide()\n    }\n  }, [isPending])\n\n  return startTransition\n}\n"],"names":["useAppDevRenderingIndicator","isPending","startTransition","useTransition","useEffect","dispatcher","renderingIndicatorShow","renderingIndicatorHide"],"mappings":";;;+BAKaA,+BAAAA;;;eAAAA;;;uBAH4B;8BACd;AAEpB,MAAMA,8BAA8B;IACzC,MAAM,CAACC,WAAWC,gBAAgB,GAAGC,CAAAA,GAAAA,OAAAA,aAAa;IAElDC,CAAAA,GAAAA,OAAAA,SAAS,EAAC;QACR,IAAIH,WAAW;YACbI,cAAAA,UAAU,CAACC,sBAAsB;QACnC,OAAO;YACLD,cAAAA,UAAU,CAACE,sBAAsB;QACnC;IACF,GAAG;QAACN;KAAU;IAEd,OAAOC;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/next-devtools/shared/console-error.ts"],"sourcesContent":["// To distinguish from React error.digest, we use a different symbol here to determine if the error is from console.error or unhandled promise rejection.\nconst digestSym = Symbol.for('next.console.error.digest')\n\n// Represent non Error shape unhandled promise rejections or console.error errors.\n// Those errors will be captured and displayed in Error Overlay.\ntype ConsoleError = Error & {\n  [digestSym]: 'NEXT_CONSOLE_ERROR'\n  environmentName: string\n}\n\nexport function createConsoleError(\n  message: string | Error,\n  environmentName?: string | null\n): ConsoleError {\n  const error = (\n    typeof message === 'string' ? new Error(message) : message\n  ) as ConsoleError\n  error[digestSym] = 'NEXT_CONSOLE_ERROR'\n\n  if (environmentName && !error.environmentName) {\n    error.environmentName = environmentName\n  }\n\n  return error\n}\n\nexport const isConsoleError = (error: any): error is ConsoleError => {\n  return error && error[digestSym] === 'NEXT_CONSOLE_ERROR'\n}\n"],"names":["createConsoleError","isConsoleError","digestSym","Symbol","for","message","environmentName","error","Error"],"mappings":"AAAA,yJAAyJ;;;;;;;;;;;;;;;IAUzIA,kBAAkB,EAAA;eAAlBA;;IAgBHC,cAAc,EAAA;eAAdA;;;AAzBb,MAAMC,YAAYC,OAAOC,GAAG,CAAC;AAStB,SAASJ,mBACdK,OAAuB,EACvBC,eAA+B;IAE/B,MAAMC,QACJ,OAAOF,YAAY,WAAW,OAAA,cAAkB,CAAlB,IAAIG,MAAMH,UAAV,qBAAA;eAAA;oBAAA;sBAAA;IAAiB,KAAIA;IAErDE,KAAK,CAACL,UAAU,GAAG;IAEnB,IAAII,mBAAmB,CAACC,MAAMD,eAAe,EAAE;QAC7CC,MAAMD,eAAe,GAAGA;IAC1B;IAEA,OAAOC;AACT;AAEO,MAAMN,iBAAiB,CAACM;IAC7B,OAAOA,SAASA,KAAK,CAACL,UAAU,KAAK;AACvC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/next-devtools/userspace/app/errors/stitched-error.ts"],"sourcesContent":["import React from 'react'\nimport isError from '../../../../lib/is-error'\n\nconst ownerStacks = new WeakMap<Error, string | null>()\n\nexport function getOwnerStack(error: Error): string | null | undefined {\n  return ownerStacks.get(error)\n}\nexport function setOwnerStack(error: Error, stack: string | null) {\n  ownerStacks.set(error, stack)\n}\n\nexport function coerceError(value: unknown): Error {\n  return isError(value) ? value : new Error('' + value)\n}\n\nexport function setOwnerStackIfAvailable(error: Error): void {\n  // React 18 and prod does not have `captureOwnerStack`\n  if ('captureOwnerStack' in React) {\n    setOwnerStack(error, React.captureOwnerStack())\n  }\n}\n\nexport function decorateDevError(thrownValue: unknown) {\n  const error = coerceError(thrownValue)\n  setOwnerStackIfAvailable(error)\n  return error\n}\n"],"names":["coerceError","decorateDevError","getOwnerStack","setOwnerStack","setOwnerStackIfAvailable","ownerStacks","WeakMap","error","get","stack","set","value","isError","Error","React","captureOwnerStack","thrownValue"],"mappings":";;;;;;;;;;;;;;;;;IAYgBA,WAAW,EAAA;eAAXA;;IAWAC,gBAAgB,EAAA;eAAhBA;;IAlBAC,aAAa,EAAA;eAAbA;;IAGAC,aAAa,EAAA;eAAbA;;IAQAC,wBAAwB,EAAA;eAAxBA;;;;gEAhBE;kEACE;AAEpB,MAAMC,cAAc,IAAIC;AAEjB,SAASJ,cAAcK,KAAY;IACxC,OAAOF,YAAYG,GAAG,CAACD;AACzB;AACO,SAASJ,cAAcI,KAAY,EAAEE,KAAoB;IAC9DJ,YAAYK,GAAG,CAACH,OAAOE;AACzB;AAEO,SAAST,YAAYW,KAAc;IACxC,OAAOC,CAAAA,GAAAA,SAAAA,OAAO,EAACD,SAASA,QAAQ,OAAA,cAAqB,CAArB,IAAIE,MAAM,KAAKF,QAAf,qBAAA;eAAA;oBAAA;sBAAA;IAAoB;AACtD;AAEO,SAASP,yBAAyBG,KAAY;IACnD,sDAAsD;IACtD,IAAI,uBAAuBO,OAAAA,OAAK,EAAE;QAChCX,cAAcI,OAAOO,OAAAA,OAAK,CAACC,iBAAiB;IAC9C;AACF;AAEO,SAASd,iBAAiBe,WAAoB;IACnD,MAAMT,QAAQP,YAAYgB;IAC1BZ,yBAAyBG;IACzB,OAAOA;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/next-devtools/userspace/app/terminal-logging-config.ts"],"sourcesContent":["export function getTerminalLoggingConfig():\n  | false\n  | boolean\n  | {\n      depthLimit?: number\n      edgeLimit?: number\n      showSourceLocation?: boolean\n    } {\n  try {\n    return JSON.parse(\n      process.env.__NEXT_BROWSER_DEBUG_INFO_IN_TERMINAL || 'false'\n    )\n  } catch {\n    return false\n  }\n}\n\nexport function getIsTerminalLoggingEnabled(): boolean {\n  const config = getTerminalLoggingConfig()\n  return Boolean(config)\n}\n"],"names":["getIsTerminalLoggingEnabled","getTerminalLoggingConfig","JSON","parse","process","env","__NEXT_BROWSER_DEBUG_INFO_IN_TERMINAL","config","Boolean"],"mappings":";;;;;;;;;;;;;;IAiBgBA,2BAA2B,EAAA;eAA3BA;;IAjBAC,wBAAwB,EAAA;eAAxBA;;;AAAT,SAASA;IAQd,IAAI;QACF,OAAOC,KAAKC,KAAK,CACfC,QAAQC,GAAG,CAACC,iCAAyC,IAAJ;IAErD,EAAE,OAAA,GAAM;QACN,OAAO;IACT;AACF;AAEO,SAASN;IACd,MAAMO,SAASN;IACf,OAAOO,QAAQD;AACjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/next-devtools/shared/forward-logs-shared.ts"],"sourcesContent":["export type LogMethod =\n  | 'log'\n  | 'info'\n  | 'debug'\n  | 'table'\n  | 'error'\n  | 'assert'\n  | 'dir'\n  | 'dirxml'\n  | 'group'\n  | 'groupCollapsed'\n  | 'groupEnd'\n  | 'trace'\n  | 'warn'\n\nexport type ConsoleEntry<T> = {\n  kind: 'console'\n  method: LogMethod\n  consoleMethodStack: string | null\n  args: Array<\n    | {\n        kind: 'arg'\n        data: T\n      }\n    | {\n        kind: 'formatted-error-arg'\n        prefix: string\n        stack: string\n      }\n  >\n}\n\nexport type ConsoleErrorEntry<T> = {\n  kind: 'any-logged-error'\n  method: 'error'\n  consoleErrorStack: string\n  args: Array<\n    | {\n        kind: 'arg'\n        data: T\n        isRejectionMessage?: boolean\n      }\n    | {\n        kind: 'formatted-error-arg'\n        prefix: string\n        stack: string | null\n      }\n  >\n}\n\nexport type FormattedErrorEntry = {\n  kind: 'formatted-error'\n  prefix: string\n  stack: string\n  method: 'error'\n}\n\nexport type ClientLogEntry =\n  | ConsoleEntry<unknown>\n  | ConsoleErrorEntry<unknown>\n  | FormattedErrorEntry\nexport type ServerLogEntry =\n  | ConsoleEntry<string>\n  | ConsoleErrorEntry<string>\n  | FormattedErrorEntry\n\nexport const UNDEFINED_MARKER = '__next_tagged_undefined'\n\n// Based on https://github.com/facebook/react/blob/28dc0776be2e1370fe217549d32aee2519f0cf05/packages/react-server/src/ReactFlightServer.js#L248\nexport function patchConsoleMethod<T extends keyof Console>(\n  methodName: T,\n  wrapper: (\n    methodName: T,\n    ...args: Console[T] extends (...args: infer P) => any ? P : never[]\n  ) => void\n): () => void {\n  const descriptor = Object.getOwnPropertyDescriptor(console, methodName)\n  if (\n    descriptor &&\n    (descriptor.configurable || descriptor.writable) &&\n    typeof descriptor.value === 'function'\n  ) {\n    const originalMethod = descriptor.value as Console[T] extends (\n      ...args: any[]\n    ) => any\n      ? Console[T]\n      : never\n    const originalName = Object.getOwnPropertyDescriptor(originalMethod, 'name')\n    const wrapperMethod = function (\n      this: typeof console,\n      ...args: Console[T] extends (...args: infer P) => any ? P : never[]\n    ) {\n      wrapper(methodName, ...args)\n\n      originalMethod.apply(this, args)\n    }\n    if (originalName) {\n      Object.defineProperty(wrapperMethod, 'name', originalName)\n    }\n    Object.defineProperty(console, methodName, {\n      value: wrapperMethod,\n    })\n\n    return () => {\n      Object.defineProperty(console, methodName, {\n        value: originalMethod,\n        writable: descriptor.writable,\n        configurable: descriptor.configurable,\n      })\n    }\n  }\n\n  return () => {}\n}\n"],"names":["UNDEFINED_MARKER","patchConsoleMethod","methodName","wrapper","descriptor","Object","getOwnPropertyDescriptor","console","configurable","writable","value","originalMethod","originalName","wrapperMethod","args","apply","defineProperty"],"mappings":";;;;;;;;;;;;;;IAkEaA,gBAAgB,EAAA;eAAhBA;;IAGGC,kBAAkB,EAAA;eAAlBA;;;AAHT,MAAMD,mBAAmB;AAGzB,SAASC,mBACdC,UAAa,EACbC,OAGS;IAET,MAAMC,aAAaC,OAAOC,wBAAwB,CAACC,SAASL;IAC5D,IACEE,cACCA,CAAAA,WAAWI,YAAY,IAAIJ,WAAWK,QAAO,KAC9C,OAAOL,WAAWM,KAAK,KAAK,YAC5B;QACA,MAAMC,iBAAiBP,WAAWM,KAAK;QAKvC,MAAME,eAAeP,OAAOC,wBAAwB,CAACK,gBAAgB;QACrE,MAAME,gBAAgB;YAEpB,IAAA,IAAA,OAAA,UAAA,MAAA,EAAGC,OAAH,IAAA,MAAA,OAAA,OAAA,GAAA,OAAA,MAAA,OAAA;gBAAGA,IAAAA,CAAH,KAAA,GAAA,SAAA,CAAA,KAAmE;;YAEnEX,QAAQD,eAAeY;YAEvBH,eAAeI,KAAK,CAAC,IAAI,EAAED;QAC7B;QACA,IAAIF,cAAc;YAChBP,OAAOW,cAAc,CAACH,eAAe,QAAQD;QAC/C;QACAP,OAAOW,cAAc,CAACT,SAASL,YAAY;YACzCQ,OAAOG;QACT;QAEA,OAAO;YACLR,OAAOW,cAAc,CAACT,SAASL,YAAY;gBACzCQ,OAAOC;gBACPF,UAAUL,WAAWK,QAAQ;gBAC7BD,cAAcJ,WAAWI,YAAY;YACvC;QACF;IACF;IAEA,OAAO,KAAO;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/next-devtools/userspace/app/forward-logs.ts"],"sourcesContent":["import { configure } from 'next/dist/compiled/safe-stable-stringify'\nimport {\n  getOwnerStack,\n  setOwnerStackIfAvailable,\n} from './errors/stitched-error'\nimport { getErrorSource } from '../../../shared/lib/error-source'\nimport {\n  getTerminalLoggingConfig,\n  getIsTerminalLoggingEnabled,\n} from './terminal-logging-config'\nimport {\n  type ConsoleEntry,\n  type ConsoleErrorEntry,\n  type FormattedErrorEntry,\n  type ClientLogEntry,\n  type LogMethod,\n  patchConsoleMethod,\n  UNDEFINED_MARKER,\n} from '../../shared/forward-logs-shared'\n\nconst terminalLoggingConfig = getTerminalLoggingConfig()\nexport const PROMISE_MARKER = 'Promise {}'\nexport const UNAVAILABLE_MARKER = '[Unable to view]'\n\nconst maximumDepth =\n  typeof terminalLoggingConfig === 'object' && terminalLoggingConfig.depthLimit\n    ? terminalLoggingConfig.depthLimit\n    : 5\nconst maximumBreadth =\n  typeof terminalLoggingConfig === 'object' && terminalLoggingConfig.edgeLimit\n    ? terminalLoggingConfig.edgeLimit\n    : 100\n\nconst stringify = configure({\n  maximumDepth,\n  maximumBreadth,\n})\n\nexport const isTerminalLoggingEnabled = getIsTerminalLoggingEnabled()\n\nconst methods: Array<LogMethod> = [\n  'log',\n  'info',\n  'warn',\n  'debug',\n  'table',\n  'assert',\n  'dir',\n  'dirxml',\n  'group',\n  'groupCollapsed',\n  'groupEnd',\n  'trace',\n]\n/**\n * allows us to:\n * - revive the undefined log in the server as it would look in the browser\n * - not read/attempt to serialize promises (next will console error if you do that, and will cause this program to infinitely recurse)\n * - if we read a proxy that throws (no way to detect if something is a proxy), explain to the user we can't read this data\n */\nexport function preLogSerializationClone<T>(\n  value: T,\n  seen = new WeakMap()\n): any {\n  if (value === undefined) return UNDEFINED_MARKER\n  if (value === null || typeof value !== 'object') return value\n  if (seen.has(value as object)) return seen.get(value as object)\n\n  try {\n    Object.keys(value as object)\n  } catch {\n    return UNAVAILABLE_MARKER\n  }\n\n  try {\n    if (typeof (value as any).then === 'function') return PROMISE_MARKER\n  } catch {\n    return UNAVAILABLE_MARKER\n  }\n\n  if (Array.isArray(value)) {\n    const out: any[] = []\n    seen.set(value, out)\n    for (const item of value) {\n      try {\n        out.push(preLogSerializationClone(item, seen))\n      } catch {\n        out.push(UNAVAILABLE_MARKER)\n      }\n    }\n    return out\n  }\n\n  const proto = Object.getPrototypeOf(value)\n  if (proto === Object.prototype || proto === null) {\n    const out: Record<string, unknown> = {}\n    seen.set(value as object, out)\n    for (const key of Object.keys(value as object)) {\n      try {\n        out[key] = preLogSerializationClone((value as any)[key], seen)\n      } catch {\n        out[key] = UNAVAILABLE_MARKER\n      }\n    }\n    return out\n  }\n\n  return Object.prototype.toString.call(value)\n}\n\n// only safe if passed safeClone data\nexport const logStringify = (data: unknown): string => {\n  try {\n    const result = stringify(data)\n    return result ?? `\"${UNAVAILABLE_MARKER}\"`\n  } catch {\n    return `\"${UNAVAILABLE_MARKER}\"`\n  }\n}\n\nconst afterThisFrame = (cb: () => void) => {\n  let timeout: ReturnType<typeof setTimeout> | undefined\n\n  const rafId = requestAnimationFrame(() => {\n    timeout = setTimeout(() => {\n      cb()\n    })\n  })\n\n  return () => {\n    cancelAnimationFrame(rafId)\n    clearTimeout(timeout)\n  }\n}\n\nlet isPatched = false\n\nconst serializeEntries = (entries: Array<ClientLogEntry>) =>\n  entries.map((clientEntry) => {\n    switch (clientEntry.kind) {\n      case 'any-logged-error':\n      case 'console': {\n        return {\n          ...clientEntry,\n          args: clientEntry.args.map(stringifyUserArg),\n        }\n      }\n      case 'formatted-error': {\n        return clientEntry\n      }\n      default: {\n        return null!\n      }\n    }\n  })\n\nexport const logQueue: {\n  entries: Array<ClientLogEntry>\n  onSocketReady: (socket: WebSocket) => void\n  flushScheduled: boolean\n  socket: WebSocket | null\n  cancelFlush: (() => void) | null\n  sourceType?: 'server' | 'edge-server'\n  router: 'app' | 'pages' | null\n  scheduleLogSend: (entry: ClientLogEntry) => void\n} = {\n  entries: [],\n  flushScheduled: false,\n  cancelFlush: null,\n  socket: null,\n  sourceType: undefined,\n  router: null,\n  scheduleLogSend: (entry: ClientLogEntry) => {\n    logQueue.entries.push(entry)\n    if (logQueue.flushScheduled) {\n      return\n    }\n    // safe to deref and use in setTimeout closure since we cancel on new socket\n    const socket = logQueue.socket\n    if (!socket) {\n      return\n    }\n\n    // we probably dont need this\n    logQueue.flushScheduled = true\n\n    // non blocking log flush, runs at most once per frame\n    logQueue.cancelFlush = afterThisFrame(() => {\n      logQueue.flushScheduled = false\n\n      // just incase\n      try {\n        const payload = JSON.stringify({\n          event: 'browser-logs',\n          entries: serializeEntries(logQueue.entries),\n          router: logQueue.router,\n          // needed for source mapping, we just assign the sourceType from the last error for the whole batch\n          sourceType: logQueue.sourceType,\n        })\n\n        socket.send(payload)\n        logQueue.entries = []\n        logQueue.sourceType = undefined\n      } catch {\n        // error (make sure u don't infinite loop)\n        /* noop */\n      }\n    })\n  },\n  onSocketReady: (socket: WebSocket) => {\n    if (socket.readyState !== WebSocket.OPEN) {\n      // invariant\n      return\n    }\n\n    // incase an existing timeout was going to run with a stale socket\n    logQueue.cancelFlush?.()\n    logQueue.socket = socket\n    try {\n      const payload = JSON.stringify({\n        event: 'browser-logs',\n        entries: serializeEntries(logQueue.entries),\n        router: logQueue.router,\n        sourceType: logQueue.sourceType,\n      })\n\n      socket.send(payload)\n      logQueue.entries = []\n      logQueue.sourceType = undefined\n    } catch {\n      /** noop just incase */\n    }\n  },\n}\n\nconst stringifyUserArg = (\n  arg:\n    | {\n        kind: 'arg'\n        data: unknown\n      }\n    | {\n        kind: 'formatted-error-arg'\n      }\n) => {\n  if (arg.kind !== 'arg') {\n    return arg\n  }\n  return {\n    ...arg,\n    data: logStringify(arg.data),\n  }\n}\n\nconst createErrorArg = (error: Error) => {\n  const stack = stackWithOwners(error)\n  return {\n    kind: 'formatted-error-arg' as const,\n    prefix: error.message ? `${error.name}: ${error.message}` : `${error.name}`,\n    stack,\n  }\n}\n\nconst createLogEntry = (level: LogMethod, args: any[]) => {\n  // do not abstract this, it implicitly relies on which functions call it. forcing the inlined implementation makes you think about callers\n  // error capture stack trace maybe\n  const stack = stackWithOwners(new Error())\n  const stackLines = stack?.split('\\n')\n  const cleanStack = stackLines?.slice(3).join('\\n') // this is probably ignored anyways\n  const entry: ConsoleEntry<unknown> = {\n    kind: 'console',\n    consoleMethodStack: cleanStack ?? null, // depending on browser we might not have stack\n    method: level,\n    args: args.map((arg) => {\n      if (arg instanceof Error) {\n        return createErrorArg(arg)\n      }\n      return {\n        kind: 'arg',\n        data: preLogSerializationClone(arg),\n      }\n    }),\n  }\n\n  logQueue.scheduleLogSend(entry)\n}\n\nexport const forwardErrorLog = (args: any[]) => {\n  const errorObjects = args.filter((arg) => arg instanceof Error)\n  const first = errorObjects.at(0)\n  if (first) {\n    const source = getErrorSource(first)\n    if (source) {\n      logQueue.sourceType = source\n    }\n  }\n  /**\n   * browser shows stack regardless of type of data passed to console.error, so we should do the same\n   *\n   * do not abstract this, it implicitly relies on which functions call it. forcing the inlined implementation makes you think about callers\n   */\n  const stack = stackWithOwners(new Error())\n  const stackLines = stack?.split('\\n')\n  const cleanStack = stackLines?.slice(3).join('\\n')\n\n  const entry: ConsoleErrorEntry<unknown> = {\n    kind: 'any-logged-error',\n    method: 'error',\n    consoleErrorStack: cleanStack ?? '',\n    args: args.map((arg) => {\n      if (arg instanceof Error) {\n        return createErrorArg(arg)\n      }\n      return {\n        kind: 'arg',\n        data: preLogSerializationClone(arg),\n      }\n    }),\n  }\n\n  logQueue.scheduleLogSend(entry)\n}\n\nconst createUncaughtErrorEntry = (\n  errorName: string,\n  errorMessage: string,\n  fullStack: string\n) => {\n  const entry: FormattedErrorEntry = {\n    kind: 'formatted-error',\n    prefix: `Uncaught ${errorName}: ${errorMessage}`,\n    stack: fullStack,\n    method: 'error',\n  }\n\n  logQueue.scheduleLogSend(entry)\n}\n\nconst stackWithOwners = (error: Error) => {\n  let ownerStack = ''\n  setOwnerStackIfAvailable(error)\n  ownerStack = getOwnerStack(error) || ''\n  const stack = (error.stack || '') + ownerStack\n  return stack\n}\n\nexport function logUnhandledRejection(reason: unknown) {\n  if (reason instanceof Error) {\n    createUnhandledRejectionErrorEntry(reason, stackWithOwners(reason))\n    return\n  }\n  createUnhandledRejectionNonErrorEntry(reason)\n}\n\nconst createUnhandledRejectionErrorEntry = (\n  error: Error,\n  fullStack: string\n) => {\n  const source = getErrorSource(error)\n  if (source) {\n    logQueue.sourceType = source\n  }\n\n  const entry: ClientLogEntry = {\n    kind: 'formatted-error',\n    prefix: `⨯ unhandledRejection: ${error.name}: ${error.message}`,\n    stack: fullStack,\n    method: 'error',\n  }\n\n  logQueue.scheduleLogSend(entry)\n}\n\nconst createUnhandledRejectionNonErrorEntry = (reason: unknown) => {\n  const entry: ClientLogEntry = {\n    kind: 'any-logged-error',\n    // we can't access the stack since the event is dispatched async and creating an inline error would be meaningless\n    consoleErrorStack: '',\n    method: 'error',\n    args: [\n      {\n        kind: 'arg',\n        data: `⨯ unhandledRejection:`,\n        isRejectionMessage: true,\n      },\n      {\n        kind: 'arg',\n        data: preLogSerializationClone(reason),\n      },\n    ],\n  }\n\n  logQueue.scheduleLogSend(entry)\n}\n\nconst isHMR = (args: any[]) => {\n  const firstArg = args[0]\n  if (typeof firstArg !== 'string') {\n    return false\n  }\n  if (firstArg.startsWith('[Fast Refresh]')) {\n    return true\n  }\n\n  if (firstArg.startsWith('[HMR]')) {\n    return true\n  }\n\n  return false\n}\n\nconst isIgnoredLog = (args: any[]) => {\n  if (args.length < 3) {\n    return false\n  }\n\n  const [format, styles, label] = args\n\n  if (\n    typeof format !== 'string' ||\n    typeof styles !== 'string' ||\n    typeof label !== 'string'\n  ) {\n    return false\n  }\n\n  // kinda hacky, we should define a common format for these strings so we can safely ignore\n  return format.startsWith('%c%s%c') && styles.includes('background:')\n}\n\nexport function forwardUnhandledError(error: Error) {\n  createUncaughtErrorEntry(error.name, error.message, stackWithOwners(error))\n}\n\n// TODO: this router check is brittle, we need to update based on the current router the user is using\nexport const initializeDebugLogForwarding = (router: 'app' | 'pages'): void => {\n  // probably don't need this\n  if (isPatched) {\n    return\n  }\n  // TODO(rob): why does this break rendering on server, important to know incase the same bug appears in browser\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  // better to be safe than sorry\n  try {\n    methods.forEach((method) =>\n      patchConsoleMethod(method, (_, ...args) => {\n        if (isHMR(args)) {\n          return\n        }\n        if (isIgnoredLog(args)) {\n          return\n        }\n        createLogEntry(method, args)\n      })\n    )\n  } catch {}\n  logQueue.router = router\n  isPatched = true\n}\n"],"names":["PROMISE_MARKER","UNAVAILABLE_MARKER","forwardErrorLog","forwardUnhandledError","initializeDebugLogForwarding","isTerminalLoggingEnabled","logQueue","logStringify","logUnhandledRejection","preLogSerializationClone","terminalLoggingConfig","getTerminalLoggingConfig","maximumDepth","depthLimit","maximumBreadth","edgeLimit","stringify","configure","getIsTerminalLoggingEnabled","methods","value","seen","WeakMap","undefined","UNDEFINED_MARKER","has","get","Object","keys","then","Array","isArray","out","set","item","push","proto","getPrototypeOf","prototype","key","toString","call","data","result","afterThisFrame","cb","timeout","rafId","requestAnimationFrame","setTimeout","cancelAnimationFrame","clearTimeout","isPatched","serializeEntries","entries","map","clientEntry","kind","args","stringifyUserArg","flushScheduled","cancelFlush","socket","sourceType","router","scheduleLogSend","entry","payload","JSON","event","send","onSocketReady","readyState","WebSocket","OPEN","arg","createErrorArg","error","stack","stackWithOwners","prefix","message","name","createLogEntry","level","Error","stackLines","split","cleanStack","slice","join","consoleMethodStack","method","errorObjects","filter","first","at","source","getErrorSource","consoleErrorStack","createUncaughtErrorEntry","errorName","errorMessage","fullStack","ownerStack","setOwnerStackIfAvailable","getOwnerStack","reason","createUnhandledRejectionErrorEntry","createUnhandledRejectionNonErrorEntry","isRejectionMessage","isHMR","firstArg","startsWith","isIgnoredLog","length","format","styles","label","includes","window","forEach","patchConsoleMethod","_"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 721, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/next-devtools/userspace/app/errors/use-error-handler.ts"],"sourcesContent":["import { useEffect } from 'react'\nimport { isNextRouterError } from '../../../../client/components/is-next-router-error'\nimport {\n  formatConsoleArgs,\n  parseConsoleArgs,\n} from '../../../../client/lib/console'\nimport isError from '../../../../lib/is-error'\nimport { createConsoleError } from '../../../shared/console-error'\nimport { coerceError, setOwnerStackIfAvailable } from './stitched-error'\nimport {\n  forwardUnhandledError,\n  isTerminalLoggingEnabled,\n  logUnhandledRejection,\n} from '../forward-logs'\n\nconst queueMicroTask =\n  globalThis.queueMicrotask || ((cb: () => void) => Promise.resolve().then(cb))\n\ntype ErrorHandler = (error: Error) => void\n\nconst errorQueue: Array<Error> = []\nconst errorHandlers: Array<ErrorHandler> = []\nconst rejectionQueue: Array<Error> = []\nconst rejectionHandlers: Array<ErrorHandler> = []\n\nexport function handleConsoleError(\n  originError: unknown,\n  consoleErrorArgs: any[]\n) {\n  let error: Error\n  const { environmentName } = parseConsoleArgs(consoleErrorArgs)\n  if (isError(originError)) {\n    error = createConsoleError(originError, environmentName)\n  } else {\n    error = createConsoleError(\n      formatConsoleArgs(consoleErrorArgs),\n      environmentName\n    )\n  }\n  setOwnerStackIfAvailable(error)\n\n  errorQueue.push(error)\n  for (const handler of errorHandlers) {\n    // Delayed the error being passed to React Dev Overlay,\n    // avoid the state being synchronously updated in the component.\n    queueMicroTask(() => {\n      handler(error)\n    })\n  }\n}\n\nexport function handleClientError(error: Error) {\n  errorQueue.push(error)\n  for (const handler of errorHandlers) {\n    // Delayed the error being passed to React Dev Overlay,\n    // avoid the state being synchronously updated in the component.\n    queueMicroTask(() => {\n      handler(error)\n    })\n  }\n}\n\nexport function useErrorHandler(\n  handleOnUnhandledError: ErrorHandler,\n  handleOnUnhandledRejection: ErrorHandler\n) {\n  useEffect(() => {\n    // Handle queued errors.\n    errorQueue.forEach(handleOnUnhandledError)\n    rejectionQueue.forEach(handleOnUnhandledRejection)\n\n    // Listen to new errors.\n    errorHandlers.push(handleOnUnhandledError)\n    rejectionHandlers.push(handleOnUnhandledRejection)\n\n    return () => {\n      // Remove listeners.\n      errorHandlers.splice(errorHandlers.indexOf(handleOnUnhandledError), 1)\n      rejectionHandlers.splice(\n        rejectionHandlers.indexOf(handleOnUnhandledRejection),\n        1\n      )\n\n      // Reset error queues.\n      errorQueue.splice(0, errorQueue.length)\n      rejectionQueue.splice(0, rejectionQueue.length)\n    }\n  }, [handleOnUnhandledError, handleOnUnhandledRejection])\n}\n\nfunction onUnhandledError(event: WindowEventMap['error']): void | boolean {\n  const thrownValue: unknown = event.error\n  if (isNextRouterError(thrownValue)) {\n    event.preventDefault()\n    return false\n  }\n  // When there's an error property present, we log the error to error overlay.\n  // Otherwise we don't do anything as it's not logging in the console either.\n  if (thrownValue) {\n    const error = coerceError(thrownValue)\n    setOwnerStackIfAvailable(error)\n    handleClientError(error)\n    if (isTerminalLoggingEnabled) {\n      forwardUnhandledError(error)\n    }\n  }\n}\n\nfunction onUnhandledRejection(ev: WindowEventMap['unhandledrejection']): void {\n  const reason: unknown = ev?.reason\n  if (isNextRouterError(reason)) {\n    ev.preventDefault()\n    return\n  }\n\n  const error = coerceError(reason)\n  setOwnerStackIfAvailable(error)\n\n  rejectionQueue.push(error)\n  for (const handler of rejectionHandlers) {\n    handler(error)\n  }\n\n  if (isTerminalLoggingEnabled) {\n    logUnhandledRejection(reason)\n  }\n}\n\nexport function handleGlobalErrors() {\n  if (typeof window !== 'undefined') {\n    try {\n      // Increase the number of stack frames on the client\n      Error.stackTraceLimit = 50\n    } catch {}\n\n    window.addEventListener('error', onUnhandledError)\n    window.addEventListener('unhandledrejection', onUnhandledRejection)\n  }\n}\n"],"names":["handleClientError","handleConsoleError","handleGlobalErrors","useErrorHandler","queueMicroTask","globalThis","queueMicrotask","cb","Promise","resolve","then","errorQueue","errorHandlers","rejectionQueue","rejectionHandlers","originError","consoleErrorArgs","error","environmentName","parseConsoleArgs","isError","createConsoleError","formatConsoleArgs","setOwnerStackIfAvailable","push","handler","handleOnUnhandledError","handleOnUnhandledRejection","useEffect","forEach","splice","indexOf","length","onUnhandledError","event","thrownValue","isNextRouterError","preventDefault","coerceError","isTerminalLoggingEnabled","forwardUnhandledError","onUnhandledRejection","ev","reason","logUnhandledRejection","window","Error","stackTraceLimit","addEventListener"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 860, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/next-devtools/userspace/app/errors/replay-ssr-only-errors.tsx"],"sourcesContent":["import { useEffect } from 'react'\nimport { handleClientError } from './use-error-handler'\nimport { isNextRouterError } from '../../../../client/components/is-next-router-error'\nimport { MISSING_ROOT_TAGS_ERROR } from '../../../../shared/lib/errors/constants'\n\nfunction readSsrError(): (Error & { digest?: string }) | null {\n  if (typeof document === 'undefined') {\n    return null\n  }\n\n  const ssrErrorTemplateTag = document.querySelector(\n    'template[data-next-error-message]'\n  )\n  if (ssrErrorTemplateTag) {\n    const message: string = ssrErrorTemplateTag.getAttribute(\n      'data-next-error-message'\n    )!\n    const stack = ssrErrorTemplateTag.getAttribute('data-next-error-stack')\n    const digest = ssrErrorTemplateTag.getAttribute('data-next-error-digest')\n    const error = new Error(message)\n    if (digest) {\n      ;(error as any).digest = digest\n    }\n    // Skip Next.js SSR'd internal errors that which will be handled by the error boundaries.\n    if (isNextRouterError(error)) {\n      return null\n    }\n    error.stack = stack || ''\n    return error\n  }\n\n  return null\n}\n\n/**\n * Needs to be in the same error boundary as the shell.\n * If it commits, we know we recovered from an SSR error.\n * If it doesn't commit, we errored again and React will take care of error reporting.\n */\nexport function ReplaySsrOnlyErrors({\n  onBlockingError,\n}: {\n  onBlockingError: () => void\n}) {\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to read during render. The attributes will be gone after commit.\n    const ssrError = readSsrError()\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (ssrError !== null) {\n        // TODO(veil): Include original Owner Stack (NDX-905)\n        // TODO(veil): Mark as recoverable error\n        // TODO(veil): console.error\n        handleClientError(ssrError)\n\n        // If it's missing root tags, we can't recover, make it blocking.\n        if (ssrError.digest === MISSING_ROOT_TAGS_ERROR) {\n          onBlockingError()\n        }\n      }\n    }, [ssrError, onBlockingError])\n  }\n\n  return null\n}\n"],"names":["ReplaySsrOnlyErrors","readSsrError","document","ssrErrorTemplateTag","querySelector","message","getAttribute","stack","digest","error","Error","isNextRouterError","onBlockingError","process","env","NODE_ENV","ssrError","useEffect","handleClientError","MISSING_ROOT_TAGS_ERROR"],"mappings":";;;+BAuCgBA,uBAAAA;;;eAAAA;;;uBAvCU;iCACQ;mCACA;2BACM;AAExC,SAASC;IACP,IAAI,OAAOC,aAAa,aAAa;QACnC,OAAO;IACT;IAEA,MAAMC,sBAAsBD,SAASE,aAAa,CAChD;IAEF,IAAID,qBAAqB;QACvB,MAAME,UAAkBF,oBAAoBG,YAAY,CACtD;QAEF,MAAMC,QAAQJ,oBAAoBG,YAAY,CAAC;QAC/C,MAAME,SAASL,oBAAoBG,YAAY,CAAC;QAChD,MAAMG,QAAQ,OAAA,cAAkB,CAAlB,IAAIC,MAAML,UAAV,qBAAA;mBAAA;wBAAA;0BAAA;QAAiB;QAC/B,IAAIG,QAAQ;;YACRC,MAAcD,MAAM,GAAGA;QAC3B;QACA,yFAAyF;QACzF,IAAIG,CAAAA,GAAAA,mBAAAA,iBAAiB,EAACF,QAAQ;YAC5B,OAAO;QACT;QACAA,MAAMF,KAAK,GAAGA,SAAS;QACvB,OAAOE;IACT;IAEA,OAAO;AACT;AAOO,SAAST,oBAAoB,KAInC;IAJmC,IAAA,EAClCY,eAAe,EAGhB,GAJmC;IAKlC,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,WAAc;QACzC,wEAAwE;QACxE,MAAMC,WAAWf;QACjB,sDAAsD;QACtDgB,CAAAA,GAAAA,OAAAA,SAAS,EAAC;YACR,IAAID,aAAa,MAAM;gBACrB,qDAAqD;gBACrD,wCAAwC;gBACxC,4BAA4B;gBAC5BE,CAAAA,GAAAA,iBAAAA,iBAAiB,EAACF;gBAElB,iEAAiE;gBACjE,IAAIA,SAASR,MAAM,KAAKW,WAAAA,uBAAuB,EAAE;oBAC/CP;gBACF;YACF;QACF,GAAG;YAACI;YAAUJ;SAAgB;IAChC;IAEA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 935, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/next-devtools/userspace/app/segment-explorer-node.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactNode } from 'react'\nimport {\n  useState,\n  createContext,\n  useContext,\n  use,\n  useMemo,\n  useCallback,\n} from 'react'\nimport { useLayoutEffect } from 'react'\nimport { dispatcher } from 'next/dist/compiled/next-devtools'\nimport { notFound } from '../../../client/components/not-found'\n\nexport type SegmentBoundaryType =\n  | 'not-found'\n  | 'error'\n  | 'loading'\n  | 'global-error'\n\nexport const SEGMENT_EXPLORER_SIMULATED_ERROR_MESSAGE =\n  'NEXT_DEVTOOLS_SIMULATED_ERROR'\n\nexport type SegmentNodeState = {\n  type: string\n  pagePath: string\n  boundaryType: string | null\n  setBoundaryType: (type: SegmentBoundaryType | null) => void\n}\n\nfunction SegmentTrieNode({\n  type,\n  pagePath,\n}: {\n  type: string\n  pagePath: string\n}): React.ReactNode {\n  const { boundaryType, setBoundaryType } = useSegmentState()\n  const nodeState: SegmentNodeState = useMemo(() => {\n    return {\n      type,\n      pagePath,\n      boundaryType,\n      setBoundaryType,\n    }\n  }, [type, pagePath, boundaryType, setBoundaryType])\n\n  // Use `useLayoutEffect` to ensure the state is updated during suspense.\n  // `useEffect` won't work as the state is preserved during suspense.\n  useLayoutEffect(() => {\n    dispatcher.segmentExplorerNodeAdd(nodeState)\n    return () => {\n      dispatcher.segmentExplorerNodeRemove(nodeState)\n    }\n  }, [nodeState])\n\n  return null\n}\n\nfunction NotFoundSegmentNode(): React.ReactNode {\n  notFound()\n}\n\nfunction ErrorSegmentNode(): React.ReactNode {\n  throw new Error(SEGMENT_EXPLORER_SIMULATED_ERROR_MESSAGE)\n}\n\nconst forever = new Promise(() => {})\nfunction LoadingSegmentNode(): React.ReactNode {\n  use(forever)\n  return null\n}\n\nexport function SegmentViewStateNode({ page }: { page: string }) {\n  useLayoutEffect(() => {\n    dispatcher.segmentExplorerUpdateRouteState(page)\n    return () => {\n      dispatcher.segmentExplorerUpdateRouteState('')\n    }\n  }, [page])\n  return null\n}\n\nexport function SegmentBoundaryTriggerNode() {\n  const { boundaryType } = useSegmentState()\n  let segmentNode: React.ReactNode = null\n  if (boundaryType === 'loading') {\n    segmentNode = <LoadingSegmentNode />\n  } else if (boundaryType === 'not-found') {\n    segmentNode = <NotFoundSegmentNode />\n  } else if (boundaryType === 'error') {\n    segmentNode = <ErrorSegmentNode />\n  }\n  return segmentNode\n}\n\nexport function SegmentViewNode({\n  type,\n  pagePath,\n  children,\n}: {\n  type: string\n  pagePath: string\n  children?: ReactNode\n}): React.ReactNode {\n  const segmentNode = (\n    <SegmentTrieNode key={type} type={type} pagePath={pagePath} />\n  )\n\n  return (\n    <>\n      {segmentNode}\n      {children}\n    </>\n  )\n}\n\nconst SegmentStateContext = createContext<{\n  boundaryType: SegmentBoundaryType | null\n  setBoundaryType: (type: SegmentBoundaryType | null) => void\n}>({\n  boundaryType: null,\n  setBoundaryType: () => {},\n})\n\nexport function SegmentStateProvider({ children }: { children: ReactNode }) {\n  const [boundaryType, setBoundaryType] = useState<SegmentBoundaryType | null>(\n    null\n  )\n\n  const [errorBoundaryKey, setErrorBoundaryKey] = useState(0)\n  const reloadBoundary = useCallback(\n    () => setErrorBoundaryKey((prev) => prev + 1),\n    []\n  )\n\n  const setBoundaryTypeAndReload = useCallback(\n    (type: SegmentBoundaryType | null) => {\n      if (type === null) {\n        reloadBoundary()\n      }\n      setBoundaryType(type)\n    },\n    [reloadBoundary]\n  )\n\n  return (\n    <SegmentStateContext.Provider\n      key={errorBoundaryKey}\n      value={{\n        boundaryType,\n        setBoundaryType: setBoundaryTypeAndReload,\n      }}\n    >\n      {children}\n    </SegmentStateContext.Provider>\n  )\n}\n\nexport function useSegmentState() {\n  return useContext(SegmentStateContext)\n}\n"],"names":["SEGMENT_EXPLORER_SIMULATED_ERROR_MESSAGE","SegmentBoundaryTriggerNode","SegmentStateProvider","SegmentViewNode","SegmentViewStateNode","useSegmentState","SegmentTrieNode","type","pagePath","boundaryType","setBoundaryType","nodeState","useMemo","useLayoutEffect","dispatcher","segmentExplorerNodeAdd","segmentExplorerNodeRemove","NotFoundSegmentNode","notFound","ErrorSegmentNode","Error","forever","Promise","LoadingSegmentNode","use","page","segmentExplorerUpdateRouteState","segmentNode","children","SegmentStateContext","createContext","useState","errorBoundaryKey","setErrorBoundaryKey","reloadBoundary","useCallback","prev","setBoundaryTypeAndReload","Provider","value","useContext"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1096, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/next-devtools/userspace/app/app-dev-overlay-error-boundary.tsx"],"sourcesContent":["import { PureComponent } from 'react'\nimport { dispatcher } from 'next/dist/compiled/next-devtools'\nimport { RuntimeErrorHandler } from '../../../client/dev/runtime-error-handler'\nimport { ErrorBoundary } from '../../../client/components/error-boundary'\nimport DefaultGlobalError from '../../../client/components/builtin/global-error'\nimport type { GlobalErrorState } from '../../../client/components/app-router-instance'\nimport { SEGMENT_EXPLORER_SIMULATED_ERROR_MESSAGE } from './segment-explorer-node'\n\ntype AppDevOverlayErrorBoundaryProps = {\n  children: React.ReactNode\n  globalError: GlobalErrorState\n}\n\ntype AppDevOverlayErrorBoundaryState = {\n  reactError: unknown\n}\n\nfunction ErroredHtml({\n  globalError: [GlobalError, globalErrorStyles],\n  error,\n}: {\n  globalError: GlobalErrorState\n  error: unknown\n}) {\n  if (!error) {\n    return (\n      <html>\n        <head />\n        <body />\n      </html>\n    )\n  }\n  return (\n    <ErrorBoundary errorComponent={DefaultGlobalError}>\n      {globalErrorStyles}\n      <GlobalError error={error} />\n    </ErrorBoundary>\n  )\n}\n\nexport class AppDevOverlayErrorBoundary extends PureComponent<\n  AppDevOverlayErrorBoundaryProps,\n  AppDevOverlayErrorBoundaryState\n> {\n  state = { reactError: null }\n\n  static getDerivedStateFromError(error: Error) {\n    RuntimeErrorHandler.hadRuntimeError = true\n\n    return {\n      reactError: error,\n    }\n  }\n\n  componentDidCatch(err: Error) {\n    if (\n      process.env.NODE_ENV === 'development' &&\n      err.message === SEGMENT_EXPLORER_SIMULATED_ERROR_MESSAGE\n    ) {\n      return\n    }\n    dispatcher.openErrorOverlay()\n  }\n\n  render() {\n    const { children, globalError } = this.props\n    const { reactError } = this.state\n\n    const fallback = (\n      <ErroredHtml globalError={globalError} error={reactError} />\n    )\n\n    return reactError !== null ? fallback : children\n  }\n}\n"],"names":["AppDevOverlayErrorBoundary","ErroredHtml","globalError","GlobalError","globalErrorStyles","error","html","head","body","ErrorBoundary","errorComponent","DefaultGlobalError","PureComponent","getDerivedStateFromError","RuntimeErrorHandler","hadRuntimeError","reactError","componentDidCatch","err","process","env","NODE_ENV","message","SEGMENT_EXPLORER_SIMULATED_ERROR_MESSAGE","dispatcher","openErrorOverlay","render","children","props","state","fallback"],"mappings":";;;+BAwCaA,8BAAAA;;;eAAAA;;;;;uBAxCiB;8BACH;qCACS;+BACN;sEACC;qCAE0B;AAWzD,SAASC,YAAY,KAMpB;IANoB,IAAA,EACnBC,aAAa,CAACC,aAAaC,kBAAkB,EAC7CC,KAAK,EAIN,GANoB;IAOnB,IAAI,CAACA,OAAO;QACV,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,IAAA,EAACC,QAAAA;;8BACC,CAAA,GAAA,YAAA,GAAA,EAACC,QAAAA,CAAAA;8BACD,CAAA,GAAA,YAAA,GAAA,EAACC,QAAAA,CAAAA;;;IAGP;IACA,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,IAAA,EAACC,eAAAA,aAAa,EAAA;QAACC,gBAAgBC,aAAAA,OAAkB;;YAC9CP;0BACD,CAAA,GAAA,YAAA,GAAA,EAACD,aAAAA;gBAAYE,OAAOA;;;;AAG1B;AAEO,MAAML,mCAAmCY,OAAAA,aAAa;IAM3D,OAAOC,yBAAyBR,KAAY,EAAE;QAC5CS,qBAAAA,mBAAmB,CAACC,eAAe,GAAG;QAEtC,OAAO;YACLC,YAAYX;QACd;IACF;IAEAY,kBAAkBC,GAAU,EAAE;QAC5B,IACEC,QAAQC,GAAG,CAACC,QAAQ,gCAAK,iBACzBH,IAAII,OAAO,KAAKC,qBAAAA,wCAAwC,EACxD;YACA;QACF;QACAC,cAAAA,UAAU,CAACC,gBAAgB;IAC7B;IAEAC,SAAS;QACP,MAAM,EAAEC,QAAQ,EAAEzB,WAAW,EAAE,GAAG,IAAI,CAAC0B,KAAK;QAC5C,MAAM,EAAEZ,UAAU,EAAE,GAAG,IAAI,CAACa,KAAK;QAEjC,MAAMC,WAAAA,WAAAA,GACJ,CAAA,GAAA,YAAA,GAAA,EAAC7B,aAAAA;YAAYC,aAAaA;YAAaG,OAAOW;;QAGhD,OAAOA,eAAe,OAAOc,WAAWH;IAC1C;;QAjCK,KAAA,IAAA,OAAA,IAAA,CAILE,KAAAA,GAAQ;YAAEb,YAAY;QAAK;;AA8B7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1172, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/next-devtools/userspace/app/errors/use-forward-console-log.ts"],"sourcesContent":["import { useEffect } from 'react'\nimport { isTerminalLoggingEnabled, logQueue } from '../forward-logs'\nimport type { useWebsocket } from '../../../../client/dev/hot-reloader/app/use-websocket'\n\nexport const useForwardConsoleLog = (\n  socketRef: ReturnType<typeof useWebsocket>\n) => {\n  useEffect(() => {\n    if (!isTerminalLoggingEnabled) {\n      return\n    }\n    const socket = socketRef.current\n    if (!socket) {\n      return\n    }\n\n    const onOpen = () => {\n      logQueue.onSocketReady(socket)\n    }\n    socket.addEventListener('open', onOpen)\n\n    return () => {\n      socket.removeEventListener('open', onOpen)\n    }\n  }, [socketRef])\n}\n"],"names":["useForwardConsoleLog","socketRef","useEffect","isTerminalLoggingEnabled","socket","current","onOpen","logQueue","onSocketReady","addEventListener","removeEventListener"],"mappings":";;;+BAIaA,wBAAAA;;;eAAAA;;;uBAJa;6BACyB;AAG5C,MAAMA,uBAAuB,CAClCC;IAEAC,CAAAA,GAAAA,OAAAA,SAAS,EAAC;QACR,IAAI,CAACC,aAAAA,wBAAwB,EAAE;YAC7B;QACF;QACA,MAAMC,SAASH,UAAUI,OAAO;QAChC,IAAI,CAACD,QAAQ;YACX;QACF;QAEA,MAAME,SAAS;YACbC,aAAAA,QAAQ,CAACC,aAAa,CAACJ;QACzB;QACAA,OAAOK,gBAAgB,CAAC,QAAQH;QAEhC,OAAO;YACLF,OAAOM,mBAAmB,CAAC,QAAQJ;QACrC;IACF,GAAG;QAACL;KAAU;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1214, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/lib/framework/boundary-components.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactNode } from 'react'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n  ROOT_LAYOUT_BOUNDARY_NAME,\n} from './boundary-constants'\n\n// We use a namespace object to allow us to recover the name of the function\n// at runtime even when production bundling/minification is used.\nconst NameSpace = {\n  [METADATA_BOUNDARY_NAME]: function ({ children }: { children: ReactNode }) {\n    return children\n  },\n  [VIEWPORT_BOUNDARY_NAME]: function ({ children }: { children: ReactNode }) {\n    return children\n  },\n  [OUTLET_BOUNDARY_NAME]: function ({ children }: { children: ReactNode }) {\n    return children\n  },\n  [ROOT_LAYOUT_BOUNDARY_NAME]: function ({\n    children,\n  }: {\n    children: ReactNode\n  }) {\n    return children\n  },\n}\n\nexport const MetadataBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[METADATA_BOUNDARY_NAME.slice(0) as typeof METADATA_BOUNDARY_NAME]\n\nexport const ViewportBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[VIEWPORT_BOUNDARY_NAME.slice(0) as typeof VIEWPORT_BOUNDARY_NAME]\n\nexport const OutletBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[OUTLET_BOUNDARY_NAME.slice(0) as typeof OUTLET_BOUNDARY_NAME]\n\nexport const RootLayoutBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[\n    ROOT_LAYOUT_BOUNDARY_NAME.slice(0) as typeof ROOT_LAYOUT_BOUNDARY_NAME\n  ]\n"],"names":["MetadataBoundary","OutletBoundary","RootLayoutBoundary","ViewportBoundary","NameSpace","METADATA_BOUNDARY_NAME","children","VIEWPORT_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","ROOT_LAYOUT_BOUNDARY_NAME","slice"],"mappings":";;;;;;;;;;;;;;;;IA+BaA,gBAAgB,EAAA;eAAhBA;;IAUAC,cAAc,EAAA;eAAdA;;IAKAC,kBAAkB,EAAA;eAAlBA;;IAVAC,gBAAgB,EAAA;eAAhBA;;;mCA5BN;AAEP,4EAA4E;AAC5E,iEAAiE;AACjE,MAAMC,YAAY;IAChB,CAACC,mBAAAA,sBAAsB,CAAC,EAAE,SAAU,EAAEC,QAAQ,EAA2B;QACvE,OAAOA;IACT;IACA,CAACC,mBAAAA,sBAAsB,CAAC,EAAE,SAAU,EAAED,QAAQ,EAA2B;QACvE,OAAOA;IACT;IACA,CAACE,mBAAAA,oBAAoB,CAAC,EAAE,SAAU,EAAEF,QAAQ,EAA2B;QACrE,OAAOA;IACT;IACA,CAACG,mBAAAA,yBAAyB,CAAC,EAAE,SAAU,EACrCH,QAAQ,EAGT;QACC,OAAOA;IACT;AACF;AAEO,MAAMN,mBACX,AACA,4DAA4D,oBADoB;AAEhFI,SAAS,CAACC,mBAAAA,sBAAsB,CAACK,KAAK,CAAC,GAAoC;AAEtE,MAAMP,mBACX,AACA,4DAA4D,oBADoB;AAEhFC,SAAS,CAACG,mBAAAA,sBAAsB,CAACG,KAAK,CAAC,GAAoC;AAEtE,MAAMT,iBACX,AACA,4DAA4D,oBADoB;AAEhFG,SAAS,CAACI,mBAAAA,oBAAoB,CAACE,KAAK,CAAC,GAAkC;AAElE,MAAMR,qBACX,AACA,4DAA4D,oBADoB;AAEhFE,SAAS,CACPK,mBAAAA,yBAAyB,CAACC,KAAK,CAAC,GACjC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1272, "column": 0}, "map": {"version":3,"sources":["file:///Users/tcosentino/projects/nonna.fm/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.28.3_%40opentelemetry%2Bapi%401.9.0_%40playwright%2Btest%401.55.0_react-d_97e969c4b1a46df1a391ef3aba8543fe/node_modules/next/src/lib/is-error.ts"],"sourcesContent":["import { isPlainObject } from '../shared/lib/is-plain-object'\n\n// We allow some additional attached properties for Next.js errors\nexport interface NextError extends Error {\n  type?: string\n  page?: string\n  code?: string | number\n  cancelled?: boolean\n  digest?: number\n}\n\n/**\n * Checks whether the given value is a NextError.\n * This can be used to print a more detailed error message with properties like `code` & `digest`.\n */\nexport default function isError(err: unknown): err is NextError {\n  return (\n    typeof err === 'object' && err !== null && 'name' in err && 'message' in err\n  )\n}\n\nfunction safeStringify(obj: any) {\n  const seen = new WeakSet()\n\n  return JSON.stringify(obj, (_key, value) => {\n    // If value is an object and already seen, replace with \"[Circular]\"\n    if (typeof value === 'object' && value !== null) {\n      if (seen.has(value)) {\n        return '[Circular]'\n      }\n      seen.add(value)\n    }\n    return value\n  })\n}\n\nexport function getProperError(err: unknown): Error {\n  if (isError(err)) {\n    return err\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    // provide better error for case where `throw undefined`\n    // is called in development\n    if (typeof err === 'undefined') {\n      return new Error(\n        'An undefined error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n\n    if (err === null) {\n      return new Error(\n        'A null error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n  }\n\n  return new Error(isPlainObject(err) ? safeStringify(err) : err + '')\n}\n"],"names":["isError","getProperError","err","safeStringify","obj","seen","WeakSet","JSON","stringify","_key","value","has","add","process","env","NODE_ENV","Error","isPlainObject"],"mappings":";;;;;;;;;;;;;;IAWA;;;CAGC,GACD,OAIC,EAAA;eAJuBA;;IAqBRC,cAAc,EAAA;eAAdA;;;+BApCc;AAef,SAASD,QAAQE,GAAY;IAC1C,OACE,OAAOA,QAAQ,YAAYA,QAAQ,QAAQ,UAAUA,OAAO,aAAaA;AAE7E;AAEA,SAASC,cAAcC,GAAQ;IAC7B,MAAMC,OAAO,IAAIC;IAEjB,OAAOC,KAAKC,SAAS,CAACJ,KAAK,CAACK,MAAMC;QAChC,oEAAoE;QACpE,IAAI,OAAOA,UAAU,YAAYA,UAAU,MAAM;YAC/C,IAAIL,KAAKM,GAAG,CAACD,QAAQ;gBACnB,OAAO;YACT;YACAL,KAAKO,GAAG,CAACF;QACX;QACA,OAAOA;IACT;AACF;AAEO,SAAST,eAAeC,GAAY;IACzC,IAAIF,QAAQE,MAAM;QAChB,OAAOA;IACT;IAEA,IAAIW,QAAQC,GAAG,CAACC,QAAQ,KAAK,WAAe;QAC1C,wDAAwD;QACxD,2BAA2B;QAC3B,IAAI,OAAOb,QAAQ,aAAa;YAC9B,OAAO,OAAA,cAGN,CAHM,IAAIc,MACT,oCACE,6EAFG,qBAAA;uBAAA;4BAAA;8BAAA;YAGP;QACF;QAEA,IAAId,QAAQ,MAAM;YAChB,OAAO,OAAA,cAGN,CAHM,IAAIc,MACT,8BACE,6EAFG,qBAAA;uBAAA;4BAAA;8BAAA;YAGP;QACF;IACF;IAEA,OAAO,OAAA,cAA6D,CAA7D,IAAIA,MAAMC,CAAAA,GAAAA,eAAAA,aAAa,EAACf,OAAOC,cAAcD,OAAOA,MAAM,KAA1D,qBAAA;eAAA;oBAAA;sBAAA;IAA4D;AACrE","ignoreList":[0],"debugId":null}}]
}